Search.setIndex({"docnames": ["auto_gallery/index", "auto_gallery/sg_execution_times", "generated/documentation", "generated/installation", "generated/nidl", "generated/nidl.experiment.fetch_experiment", "generated/nidl.experiment.filter_config", "generated/nidl.experiment.get_env", "generated/nidl.experiment.load_interface", "generated/nidl.experiment.update_params", "generated/nidl.utils", "generated/nidl.utils.Bunch", "generated/nidl.utils.Weights", "generated/nidl.utils.bunch.Bunch", "generated/nidl.utils.color.Colored", "generated/nidl.utils.color.attr", "generated/nidl.utils.color.fg", "generated/nidl.utils.color.hex", "generated/nidl.utils.color.print_multicolor", "generated/nidl.utils.color.print_result", "generated/nidl.utils.color.print_subtitle", "generated/nidl.utils.color.print_title", "generated/nidl.utils.color.print_warning", "generated/nidl.utils.color.random_stylize", "generated/nidl.utils.color.stylize", "generated/nidl.utils.print_multicolor", "generated/nidl.utils.weights.Weights", "generated/search", "generated/surfify", "generated/surfify.augmentation", "generated/surfify.augmentation.BaseTransformer", "generated/surfify.augmentation.GroupMixUp", "generated/surfify.augmentation.HemiMixUp", "generated/surfify.augmentation.SurfBlur", "generated/surfify.augmentation.SurfCutOut", "generated/surfify.augmentation.SurfNoise", "generated/surfify.augmentation.SurfRotation", "generated/surfify.augmentation.Transformer", "generated/surfify.augmentation.apply_chained_transforms", "generated/surfify.augmentation.base.SurfBlur", "generated/surfify.augmentation.base.SurfCutOut", "generated/surfify.augmentation.base.SurfNoise", "generated/surfify.augmentation.base.SurfRotation", "generated/surfify.augmentation.interval", "generated/surfify.augmentation.mixup.GroupMixUp", "generated/surfify.augmentation.mixup.HemiMixUp", "generated/surfify.augmentation.mixup.MixUpAugmentation", "generated/surfify.augmentation.multichannel_augmentation", "generated/surfify.augmentation.utils.BaseTransformer", "generated/surfify.augmentation.utils.RandomAugmentation", "generated/surfify.augmentation.utils.Transformer", "generated/surfify.augmentation.utils.apply_chained_transforms", "generated/surfify.augmentation.utils.interval", "generated/surfify.augmentation.utils.listify", "generated/surfify.augmentation.utils.multichannel_augmentation", "generated/surfify.datasets", "generated/surfify.datasets.ClassificationDataset", "generated/surfify.datasets.GenericSurfDataset", "generated/surfify.datasets._generic.GenericSurfDataset", "generated/surfify.datasets._samples_generator.ClassificationDataset", "generated/surfify.datasets._samples_generator.make_classification", "generated/surfify.datasets.make_classification", "generated/surfify.losses", "generated/surfify.losses.SphericalVAELoss", "generated/surfify.losses.vae.SphericalVAELoss", "generated/surfify.losses.vae.log_likelihood", "generated/surfify.models", "generated/surfify.models.HemiFusionDecoder", "generated/surfify.models.HemiFusionEncoder", "generated/surfify.models.SphericalBase", "generated/surfify.models.SphericalGUNet", "generated/surfify.models.SphericalGVGG", "generated/surfify.models.SphericalGVGG11", "generated/surfify.models.SphericalGVGG11BN", "generated/surfify.models.SphericalGVGG13", "generated/surfify.models.SphericalGVGG13BN", "generated/surfify.models.SphericalGVGG16", "generated/surfify.models.SphericalGVGG16BN", "generated/surfify.models.SphericalGVGG19", "generated/surfify.models.SphericalGVGG19BN", "generated/surfify.models.SphericalHemiFusionDecoder", "generated/surfify.models.SphericalHemiFusionEncoder", "generated/surfify.models.SphericalUNet", "generated/surfify.models.SphericalVAE", "generated/surfify.models.SphericalVGG", "generated/surfify.models.SphericalVGG11", "generated/surfify.models.SphericalVGG11BN", "generated/surfify.models.SphericalVGG13", "generated/surfify.models.SphericalVGG13BN", "generated/surfify.models.SphericalVGG16", "generated/surfify.models.SphericalVGG16BN", "generated/surfify.models.SphericalVGG19", "generated/surfify.models.SphericalVGG19BN", "generated/surfify.models.base.SphericalBase", "generated/surfify.models.unet.DownBlock", "generated/surfify.models.unet.DownGBlock", "generated/surfify.models.unet.GraphicalUNet", "generated/surfify.models.unet.SphericalGUNet", "generated/surfify.models.unet.SphericalUNet", "generated/surfify.models.unet.UpBlock", "generated/surfify.models.unet.UpGBlock", "generated/surfify.models.vae.HemiFusionDecoder", "generated/surfify.models.vae.HemiFusionEncoder", "generated/surfify.models.vae.SphericalHemiFusionDecoder", "generated/surfify.models.vae.SphericalHemiFusionEncoder", "generated/surfify.models.vae.SphericalVAE", "generated/surfify.models.vae.compute_output_dim", "generated/surfify.models.vgg.SphericalGVGG", "generated/surfify.models.vgg.SphericalGVGG11", "generated/surfify.models.vgg.SphericalGVGG11BN", "generated/surfify.models.vgg.SphericalGVGG13", "generated/surfify.models.vgg.SphericalGVGG13BN", "generated/surfify.models.vgg.SphericalGVGG16", "generated/surfify.models.vgg.SphericalGVGG16BN", "generated/surfify.models.vgg.SphericalGVGG19", "generated/surfify.models.vgg.SphericalGVGG19BN", "generated/surfify.models.vgg.SphericalVGG", "generated/surfify.models.vgg.SphericalVGG11", "generated/surfify.models.vgg.SphericalVGG11BN", "generated/surfify.models.vgg.SphericalVGG13", "generated/surfify.models.vgg.SphericalVGG13BN", "generated/surfify.models.vgg.SphericalVGG16", "generated/surfify.models.vgg.SphericalVGG16BN", "generated/surfify.models.vgg.SphericalVGG19", "generated/surfify.models.vgg.SphericalVGG19BN", "generated/surfify.models.vgg.class_factory", "generated/surfify.nn", "generated/surfify.nn.IcoDiNeConv", "generated/surfify.nn.IcoFixIndexUpSample", "generated/surfify.nn.IcoGenericUpConv", "generated/surfify.nn.IcoMaxIndexUpSample", "generated/surfify.nn.IcoPool", "generated/surfify.nn.IcoRePaConv", "generated/surfify.nn.IcoSpMaConv", "generated/surfify.nn.IcoSpMaConvTranspose", "generated/surfify.nn.IcoUpConv", "generated/surfify.nn.IcoUpSample", "generated/surfify.nn.functional.circular_pad", "generated/surfify.nn.modules.IcoDiNeConv", "generated/surfify.nn.modules.IcoFixIndexUpSample", "generated/surfify.nn.modules.IcoGenericUpConv", "generated/surfify.nn.modules.IcoMaxIndexUpSample", "generated/surfify.nn.modules.IcoPool", "generated/surfify.nn.modules.IcoRePaConv", "generated/surfify.nn.modules.IcoSpMaConv", "generated/surfify.nn.modules.IcoSpMaConvTranspose", "generated/surfify.nn.modules.IcoUpConv", "generated/surfify.nn.modules.IcoUpSample", "generated/surfify.plotting", "generated/surfify.plotting.plot_trisurf", "generated/surfify.plotting.surface.plot_trisurf", "generated/surfify.utils", "generated/surfify.utils.cart2sph", "generated/surfify.utils.coord.cart2sph", "generated/surfify.utils.coord.find_corresponding_order", "generated/surfify.utils.coord.grid2text", "generated/surfify.utils.coord.ico2ico", "generated/surfify.utils.coord.sph2cart", "generated/surfify.utils.coord.text2grid", "generated/surfify.utils.coord.text2ico", "generated/surfify.utils.debug_msg", "generated/surfify.utils.downsample", "generated/surfify.utils.downsample_data", "generated/surfify.utils.downsample_ico", "generated/surfify.utils.find_neighbors", "generated/surfify.utils.find_rotation_interpol_coefs", "generated/surfify.utils.get_logger", "generated/surfify.utils.get_rectangular_projection", "generated/surfify.utils.grid2text", "generated/surfify.utils.ico2ico", "generated/surfify.utils.icosahedron", "generated/surfify.utils.interpolate", "generated/surfify.utils.interpolate_data", "generated/surfify.utils.io.HidePrints", "generated/surfify.utils.io.compute_and_store", "generated/surfify.utils.io.decompose_cifti", "generated/surfify.utils.io.read_freesurfer", "generated/surfify.utils.io.read_gifti", "generated/surfify.utils.io.surf_data_from_cifti", "generated/surfify.utils.io.ungzip", "generated/surfify.utils.io.volume_from_cifti", "generated/surfify.utils.io.write_freesurfer", "generated/surfify.utils.io.write_gifti", "generated/surfify.utils.min_depth_to_get_n_neighbors", "generated/surfify.utils.neighbors", "generated/surfify.utils.neighbors_rec", "generated/surfify.utils.number_of_ico_vertices", "generated/surfify.utils.number_of_neighbors", "generated/surfify.utils.order_of_ico_from_vertices", "generated/surfify.utils.order_triangles", "generated/surfify.utils.patch_tri", "generated/surfify.utils.rotate_data", "generated/surfify.utils.sampling._patch_tri_iter", "generated/surfify.utils.sampling.build_freesurfer_ico", "generated/surfify.utils.sampling.build_fslr_ref", "generated/surfify.utils.sampling.downsample", "generated/surfify.utils.sampling.downsample_data", "generated/surfify.utils.sampling.downsample_ico", "generated/surfify.utils.sampling.find_neighbors", "generated/surfify.utils.sampling.find_rotation_interpol_coefs", "generated/surfify.utils.sampling.get_angle_with_xaxis", "generated/surfify.utils.sampling.get_rectangular_projection", "generated/surfify.utils.sampling.icosahedron", "generated/surfify.utils.sampling.interpolate", "generated/surfify.utils.sampling.interpolate_data", "generated/surfify.utils.sampling.middle_point", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors", "generated/surfify.utils.sampling.neighbors", "generated/surfify.utils.sampling.neighbors_rec", "generated/surfify.utils.sampling.normalize", "generated/surfify.utils.sampling.number_of_ico_vertices", "generated/surfify.utils.sampling.number_of_neighbors", "generated/surfify.utils.sampling.order_of_ico_from_vertices", "generated/surfify.utils.sampling.order_triangles", "generated/surfify.utils.sampling.patch_tri", "generated/surfify.utils.sampling.rotate_data", "generated/surfify.utils.sampling.triangles_to_edges", "generated/surfify.utils.sampling.vertex_adjacency_graph", "generated/surfify.utils.setup_logging", "generated/surfify.utils.sph2cart", "generated/surfify.utils.text2grid", "generated/surfify.utils.text2ico", "index", "sg_execution_times"], "filenames": ["auto_gallery/index.rst", "auto_gallery/sg_execution_times.rst", "generated/documentation.rst", "generated/installation.rst", "generated/nidl.rst", "generated/nidl.experiment.fetch_experiment.rst", "generated/nidl.experiment.filter_config.rst", "generated/nidl.experiment.get_env.rst", "generated/nidl.experiment.load_interface.rst", "generated/nidl.experiment.update_params.rst", "generated/nidl.utils.rst", "generated/nidl.utils.Bunch.rst", "generated/nidl.utils.Weights.rst", "generated/nidl.utils.bunch.Bunch.rst", "generated/nidl.utils.color.Colored.rst", "generated/nidl.utils.color.attr.rst", "generated/nidl.utils.color.fg.rst", "generated/nidl.utils.color.hex.rst", "generated/nidl.utils.color.print_multicolor.rst", "generated/nidl.utils.color.print_result.rst", "generated/nidl.utils.color.print_subtitle.rst", "generated/nidl.utils.color.print_title.rst", "generated/nidl.utils.color.print_warning.rst", "generated/nidl.utils.color.random_stylize.rst", "generated/nidl.utils.color.stylize.rst", "generated/nidl.utils.print_multicolor.rst", "generated/nidl.utils.weights.Weights.rst", "generated/search.rst", "generated/surfify.rst", "generated/surfify.augmentation.rst", "generated/surfify.augmentation.BaseTransformer.rst", "generated/surfify.augmentation.GroupMixUp.rst", "generated/surfify.augmentation.HemiMixUp.rst", "generated/surfify.augmentation.SurfBlur.rst", "generated/surfify.augmentation.SurfCutOut.rst", "generated/surfify.augmentation.SurfNoise.rst", "generated/surfify.augmentation.SurfRotation.rst", "generated/surfify.augmentation.Transformer.rst", "generated/surfify.augmentation.apply_chained_transforms.rst", "generated/surfify.augmentation.base.SurfBlur.rst", "generated/surfify.augmentation.base.SurfCutOut.rst", "generated/surfify.augmentation.base.SurfNoise.rst", "generated/surfify.augmentation.base.SurfRotation.rst", "generated/surfify.augmentation.interval.rst", "generated/surfify.augmentation.mixup.GroupMixUp.rst", "generated/surfify.augmentation.mixup.HemiMixUp.rst", "generated/surfify.augmentation.mixup.MixUpAugmentation.rst", "generated/surfify.augmentation.multichannel_augmentation.rst", "generated/surfify.augmentation.utils.BaseTransformer.rst", "generated/surfify.augmentation.utils.RandomAugmentation.rst", "generated/surfify.augmentation.utils.Transformer.rst", "generated/surfify.augmentation.utils.apply_chained_transforms.rst", "generated/surfify.augmentation.utils.interval.rst", "generated/surfify.augmentation.utils.listify.rst", "generated/surfify.augmentation.utils.multichannel_augmentation.rst", "generated/surfify.datasets.rst", "generated/surfify.datasets.ClassificationDataset.rst", "generated/surfify.datasets.GenericSurfDataset.rst", "generated/surfify.datasets._generic.GenericSurfDataset.rst", "generated/surfify.datasets._samples_generator.ClassificationDataset.rst", "generated/surfify.datasets._samples_generator.make_classification.rst", "generated/surfify.datasets.make_classification.rst", "generated/surfify.losses.rst", "generated/surfify.losses.SphericalVAELoss.rst", "generated/surfify.losses.vae.SphericalVAELoss.rst", "generated/surfify.losses.vae.log_likelihood.rst", "generated/surfify.models.rst", "generated/surfify.models.HemiFusionDecoder.rst", "generated/surfify.models.HemiFusionEncoder.rst", "generated/surfify.models.SphericalBase.rst", "generated/surfify.models.SphericalGUNet.rst", "generated/surfify.models.SphericalGVGG.rst", "generated/surfify.models.SphericalGVGG11.rst", "generated/surfify.models.SphericalGVGG11BN.rst", "generated/surfify.models.SphericalGVGG13.rst", "generated/surfify.models.SphericalGVGG13BN.rst", "generated/surfify.models.SphericalGVGG16.rst", "generated/surfify.models.SphericalGVGG16BN.rst", "generated/surfify.models.SphericalGVGG19.rst", "generated/surfify.models.SphericalGVGG19BN.rst", "generated/surfify.models.SphericalHemiFusionDecoder.rst", "generated/surfify.models.SphericalHemiFusionEncoder.rst", "generated/surfify.models.SphericalUNet.rst", "generated/surfify.models.SphericalVAE.rst", "generated/surfify.models.SphericalVGG.rst", "generated/surfify.models.SphericalVGG11.rst", "generated/surfify.models.SphericalVGG11BN.rst", "generated/surfify.models.SphericalVGG13.rst", "generated/surfify.models.SphericalVGG13BN.rst", "generated/surfify.models.SphericalVGG16.rst", "generated/surfify.models.SphericalVGG16BN.rst", "generated/surfify.models.SphericalVGG19.rst", "generated/surfify.models.SphericalVGG19BN.rst", "generated/surfify.models.base.SphericalBase.rst", "generated/surfify.models.unet.DownBlock.rst", "generated/surfify.models.unet.DownGBlock.rst", "generated/surfify.models.unet.GraphicalUNet.rst", "generated/surfify.models.unet.SphericalGUNet.rst", "generated/surfify.models.unet.SphericalUNet.rst", "generated/surfify.models.unet.UpBlock.rst", "generated/surfify.models.unet.UpGBlock.rst", "generated/surfify.models.vae.HemiFusionDecoder.rst", "generated/surfify.models.vae.HemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalHemiFusionDecoder.rst", "generated/surfify.models.vae.SphericalHemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalVAE.rst", "generated/surfify.models.vae.compute_output_dim.rst", "generated/surfify.models.vgg.SphericalGVGG.rst", "generated/surfify.models.vgg.SphericalGVGG11.rst", "generated/surfify.models.vgg.SphericalGVGG11BN.rst", "generated/surfify.models.vgg.SphericalGVGG13.rst", "generated/surfify.models.vgg.SphericalGVGG13BN.rst", "generated/surfify.models.vgg.SphericalGVGG16.rst", "generated/surfify.models.vgg.SphericalGVGG16BN.rst", "generated/surfify.models.vgg.SphericalGVGG19.rst", "generated/surfify.models.vgg.SphericalGVGG19BN.rst", "generated/surfify.models.vgg.SphericalVGG.rst", "generated/surfify.models.vgg.SphericalVGG11.rst", "generated/surfify.models.vgg.SphericalVGG11BN.rst", "generated/surfify.models.vgg.SphericalVGG13.rst", "generated/surfify.models.vgg.SphericalVGG13BN.rst", "generated/surfify.models.vgg.SphericalVGG16.rst", "generated/surfify.models.vgg.SphericalVGG16BN.rst", "generated/surfify.models.vgg.SphericalVGG19.rst", "generated/surfify.models.vgg.SphericalVGG19BN.rst", "generated/surfify.models.vgg.class_factory.rst", "generated/surfify.nn.rst", "generated/surfify.nn.IcoDiNeConv.rst", "generated/surfify.nn.IcoFixIndexUpSample.rst", "generated/surfify.nn.IcoGenericUpConv.rst", "generated/surfify.nn.IcoMaxIndexUpSample.rst", "generated/surfify.nn.IcoPool.rst", "generated/surfify.nn.IcoRePaConv.rst", "generated/surfify.nn.IcoSpMaConv.rst", "generated/surfify.nn.IcoSpMaConvTranspose.rst", "generated/surfify.nn.IcoUpConv.rst", "generated/surfify.nn.IcoUpSample.rst", "generated/surfify.nn.functional.circular_pad.rst", "generated/surfify.nn.modules.IcoDiNeConv.rst", "generated/surfify.nn.modules.IcoFixIndexUpSample.rst", "generated/surfify.nn.modules.IcoGenericUpConv.rst", "generated/surfify.nn.modules.IcoMaxIndexUpSample.rst", "generated/surfify.nn.modules.IcoPool.rst", "generated/surfify.nn.modules.IcoRePaConv.rst", "generated/surfify.nn.modules.IcoSpMaConv.rst", "generated/surfify.nn.modules.IcoSpMaConvTranspose.rst", "generated/surfify.nn.modules.IcoUpConv.rst", "generated/surfify.nn.modules.IcoUpSample.rst", "generated/surfify.plotting.rst", "generated/surfify.plotting.plot_trisurf.rst", "generated/surfify.plotting.surface.plot_trisurf.rst", "generated/surfify.utils.rst", "generated/surfify.utils.cart2sph.rst", "generated/surfify.utils.coord.cart2sph.rst", "generated/surfify.utils.coord.find_corresponding_order.rst", "generated/surfify.utils.coord.grid2text.rst", "generated/surfify.utils.coord.ico2ico.rst", "generated/surfify.utils.coord.sph2cart.rst", "generated/surfify.utils.coord.text2grid.rst", "generated/surfify.utils.coord.text2ico.rst", "generated/surfify.utils.debug_msg.rst", "generated/surfify.utils.downsample.rst", "generated/surfify.utils.downsample_data.rst", "generated/surfify.utils.downsample_ico.rst", "generated/surfify.utils.find_neighbors.rst", "generated/surfify.utils.find_rotation_interpol_coefs.rst", "generated/surfify.utils.get_logger.rst", "generated/surfify.utils.get_rectangular_projection.rst", "generated/surfify.utils.grid2text.rst", "generated/surfify.utils.ico2ico.rst", "generated/surfify.utils.icosahedron.rst", "generated/surfify.utils.interpolate.rst", "generated/surfify.utils.interpolate_data.rst", "generated/surfify.utils.io.HidePrints.rst", "generated/surfify.utils.io.compute_and_store.rst", "generated/surfify.utils.io.decompose_cifti.rst", "generated/surfify.utils.io.read_freesurfer.rst", "generated/surfify.utils.io.read_gifti.rst", "generated/surfify.utils.io.surf_data_from_cifti.rst", "generated/surfify.utils.io.ungzip.rst", "generated/surfify.utils.io.volume_from_cifti.rst", "generated/surfify.utils.io.write_freesurfer.rst", "generated/surfify.utils.io.write_gifti.rst", "generated/surfify.utils.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.neighbors.rst", "generated/surfify.utils.neighbors_rec.rst", "generated/surfify.utils.number_of_ico_vertices.rst", "generated/surfify.utils.number_of_neighbors.rst", "generated/surfify.utils.order_of_ico_from_vertices.rst", "generated/surfify.utils.order_triangles.rst", "generated/surfify.utils.patch_tri.rst", "generated/surfify.utils.rotate_data.rst", "generated/surfify.utils.sampling._patch_tri_iter.rst", "generated/surfify.utils.sampling.build_freesurfer_ico.rst", "generated/surfify.utils.sampling.build_fslr_ref.rst", "generated/surfify.utils.sampling.downsample.rst", "generated/surfify.utils.sampling.downsample_data.rst", "generated/surfify.utils.sampling.downsample_ico.rst", "generated/surfify.utils.sampling.find_neighbors.rst", "generated/surfify.utils.sampling.find_rotation_interpol_coefs.rst", "generated/surfify.utils.sampling.get_angle_with_xaxis.rst", "generated/surfify.utils.sampling.get_rectangular_projection.rst", "generated/surfify.utils.sampling.icosahedron.rst", "generated/surfify.utils.sampling.interpolate.rst", "generated/surfify.utils.sampling.interpolate_data.rst", "generated/surfify.utils.sampling.middle_point.rst", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.sampling.neighbors.rst", "generated/surfify.utils.sampling.neighbors_rec.rst", "generated/surfify.utils.sampling.normalize.rst", "generated/surfify.utils.sampling.number_of_ico_vertices.rst", "generated/surfify.utils.sampling.number_of_neighbors.rst", "generated/surfify.utils.sampling.order_of_ico_from_vertices.rst", "generated/surfify.utils.sampling.order_triangles.rst", "generated/surfify.utils.sampling.patch_tri.rst", "generated/surfify.utils.sampling.rotate_data.rst", "generated/surfify.utils.sampling.triangles_to_edges.rst", "generated/surfify.utils.sampling.vertex_adjacency_graph.rst", "generated/surfify.utils.setup_logging.rst", "generated/surfify.utils.sph2cart.rst", "generated/surfify.utils.text2grid.rst", "generated/surfify.utils.text2ico.rst", "index.rst", "sg_execution_times.rst"], "titles": ["Use Cases", "Computation times", "API documentation of NIDL", "Installing <cite>nidl</cite>", "API documentation of <em>nidl</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Search in API documentation of NIDL", "API documentation of <em>surfify</em>", "API documentation of <em>surfify.augmentation</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.losses</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.models</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.nn</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.plotting</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computation times"], "terms": {"download": [0, 10, 12, 26], "all": [0, 70, 82, 96, 97, 98, 132, 133, 134, 143, 144, 145, 223], "exampl": [0, 1, 11, 13, 69, 71, 82, 83, 84, 93, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221, 223], "python": 0, "sourc": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 80, 81, 82, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 116, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "code": [0, 5, 23, 24], "auto_gallery_python": 0, "zip": [0, 179], "galleri": [0, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "gener": [0, 2, 46, 55, 56, 59, 60, 61, 66, 158, 164, 179, 181, 182, 193, 194, 198, 220], "sphinx": 0, "00": [1, 223], "000": [1, 223], "total": [1, 223], "execut": [1, 174, 223], "0": [1, 5, 30, 34, 36, 40, 42, 48, 49, 69, 83, 93, 96, 105, 128, 133, 134, 139, 144, 145, 149, 150, 154, 156, 159, 161, 164, 169, 184, 185, 189, 190, 191, 195, 198, 207, 208, 213, 214, 215, 217, 221, 223], "file": [1, 5, 12, 26, 57, 58, 175, 176, 177, 179, 181, 182, 218, 222, 223], "from": [1, 3, 5, 11, 13, 31, 34, 40, 44, 57, 58, 67, 69, 70, 71, 82, 83, 84, 93, 97, 98, 101, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 220, 221, 223], "auto_galleri": 1, "mem": [1, 223], "mb": [1, 223], "n": [1, 12, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 51, 56, 59, 60, 61, 65, 127, 129, 132, 138, 140, 143, 149, 150, 154, 155, 156, 158, 159, 163, 164, 165, 168, 169, 170, 176, 177, 181, 182, 184, 185, 189, 191, 197, 198, 199, 202, 207, 208, 213, 215, 216, 217, 220, 221, 223], "A": [1, 12, 26, 29, 57, 58, 66, 223], "thi": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "i": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "class": [2, 5, 8, 10, 11, 12, 13, 14, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 173], "function": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 36, 38, 39, 40, 42, 43, 47, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 65, 66, 67, 68, 70, 80, 81, 82, 96, 97, 98, 101, 102, 103, 104, 106, 125, 132, 133, 134, 137, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "refer": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "pleas": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "further": 2, "detail": 2, "raw": [2, 175, 178, 180], "specif": [2, 31, 32, 44, 45, 70, 82, 97, 98, 125, 186, 210], "mai": 2, "enough": 2, "give": 2, "full": [2, 163, 197], "guidelin": 2, "us": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "util": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 36, 39, 40, 42, 48, 49, 50, 51, 52, 53, 54, 55, 82, 83, 84, 98, 105, 116, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "variou": [2, 10, 106], "help": [2, 10], "develop": [2, 3, 10], "surfifi": [2, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "helper": [2, 28], "modul": [2, 5, 7, 12, 26, 27, 28, 29, 33, 39, 67, 68, 70, 80, 81, 82, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "surfac": [2, 27, 28, 29, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 97, 98, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 149, 150, 155, 158, 168, 175, 176, 177, 178, 181, 182, 184, 207, 220, 222], "integr": [2, 28, 96], "pytorch": [2, 28, 67, 68, 80, 81, 101, 102, 103, 104, 160, 222], "augment": [2, 5, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58], "dataset": [2, 5, 27, 56, 57, 58, 59, 60, 61, 148, 158, 159, 162, 171, 172, 191, 196, 203, 204, 215, 220, 221], "load": [2, 5, 8, 9, 12, 26, 55, 57, 58, 178, 180], "includ": [2, 55, 57, 58], "method": [2, 11, 12, 13, 26, 55, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 191, 215], "fetch": [2, 5, 55, 193, 194], "popular": [2, 55], "It": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "also": [2, 55, 57, 58, 174, 222], "featur": [2, 55, 70, 82, 94, 95, 96, 97, 98, 99, 100, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147], "some": [2, 5, 7, 37, 38, 50, 51, 55, 217], "artifici": [2, 55], "data": [2, 5, 12, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 57, 58, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 155, 158, 161, 162, 168, 171, 172, 174, 175, 178, 180, 191, 193, 194, 195, 196, 203, 204, 215, 220], "loss": [2, 5, 27, 63, 64, 65], "common": [2, 29, 62, 66], "model": [2, 5, 10, 12, 26, 27, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "architectur": [2, 66, 70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116], "nn": [2, 12, 26, 27, 33, 39, 67, 68, 80, 81, 94, 96, 99, 101, 102, 103, 104, 106, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "sufac": [2, 126, 151], "dedic": [2, 126], "plot": [2, 27, 149, 150, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "displai": [2, 5, 18, 25, 70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 160], "content": 2, "experi": [2, 5, 6, 7, 8, 9, 27, 222], "fetch_experi": [2, 4, 5, 27], "filter_config": [2, 4, 6, 27], "get_env": [2, 4, 7, 27], "load_interfac": [2, 4, 8, 27], "update_param": [2, 4, 9, 27], "bunch": [2, 5, 11, 13, 27], "weight": [2, 5, 12, 26, 27, 31, 44, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 165, 171, 185, 191, 199, 203, 208, 215], "print_multicolor": [2, 10, 18, 25, 27], "color": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 149, 150], "attr": [2, 10, 15, 27], "fg": [2, 10, 16, 27], "hex": [2, 10, 17, 27], "print_result": [2, 10, 19, 27], "print_subtitl": [2, 10, 20, 27], "print_titl": [2, 10, 21, 27], "print_warn": [2, 10, 22, 27], "random_styl": [2, 10, 23, 27], "styliz": [2, 10, 24, 27], "basetransform": [2, 27, 29, 30, 38, 48, 51], "groupmixup": [2, 27, 29, 31, 44], "hemimixup": [2, 27, 29, 32, 45], "surfblur": [2, 27, 29, 33, 39], "surfcutout": [2, 27, 29, 34, 40], "surfnois": [2, 27, 29, 35, 41], "surfrot": [2, 27, 29, 36, 42], "transform": [2, 5, 27, 29, 30, 37, 38, 47, 48, 50, 51, 54, 57, 58, 67, 101, 152, 153, 156, 157, 169, 190, 214, 219], "apply_chained_transform": [2, 27, 29, 38, 51], "interv": [2, 27, 29, 43, 46, 49, 52], "multichannel_augment": [2, 27, 29, 47, 54], "base": [2, 6, 27, 31, 39, 40, 41, 42, 44, 69, 93, 127, 138, 154, 174, 184, 185, 190, 207, 208, 214], "mixup": [2, 27, 44, 45, 46], "mixupaugment": [2, 27, 29, 46], "randomaugment": [2, 27, 29, 30, 47, 48, 49, 54], "listifi": [2, 27, 29, 53], "classificationdataset": [2, 27, 55, 56, 59], "genericsurfdataset": [2, 27, 55, 57, 58], "make_classif": [2, 27, 55, 60, 61, 158, 159, 162, 171, 172, 191, 196, 203, 204, 215, 220, 221], "_gener": [2, 27, 58], "_samples_gener": [2, 27, 59, 60], "sphericalvaeloss": [2, 27, 62, 63, 64], "vae": [2, 27, 63, 64, 65, 83, 101, 102, 103, 104, 105, 106], "log_likelihood": [2, 27, 62, 65], "hemifusiondecod": [2, 27, 66, 67, 101], "hemifusionencod": [2, 27, 66, 68, 102], "sphericalbas": [2, 27, 66, 69, 93], "sphericalgunet": [2, 27, 66, 70, 82, 96, 97, 98], "sphericalgvgg": [2, 27, 66, 71, 84, 107, 116], "sphericalgvgg11": [2, 27, 66, 71, 72, 107, 108], "sphericalgvgg11bn": [2, 27, 66, 73, 109], "sphericalgvgg13": [2, 27, 66, 74, 110], "sphericalgvgg13bn": [2, 27, 66, 75, 111], "sphericalgvgg16": [2, 27, 66, 76, 112], "sphericalgvgg16bn": [2, 27, 66, 77, 113], "sphericalgvgg19": [2, 27, 66, 78, 114], "sphericalgvgg19bn": [2, 27, 66, 79, 115], "sphericalhemifusiondecod": [2, 27, 66, 80, 103], "sphericalhemifusionencod": [2, 27, 66, 81, 104], "sphericalunet": [2, 27, 66, 70, 82, 96, 97, 98], "sphericalva": [2, 27, 66, 83, 105], "sphericalvgg": [2, 27, 66, 71, 84, 107, 116], "sphericalvgg11": [2, 27, 66, 84, 85, 116, 117], "sphericalvgg11bn": [2, 27, 66, 86, 118], "sphericalvgg13": [2, 27, 66, 87, 119], "sphericalvgg13bn": [2, 27, 66, 88, 120], "sphericalvgg16": [2, 27, 66, 89, 121], "sphericalvgg16bn": [2, 27, 66, 90, 122], "sphericalvgg19": [2, 27, 66, 91, 123], "sphericalvgg19bn": [2, 27, 66, 92, 124], "compute_output_dim": [2, 27, 66, 106], "vgg": [2, 27, 71, 84, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "class_factori": [2, 27, 66, 125], "unet": [2, 27, 70, 82, 94, 95, 96, 97, 98, 99, 100], "downblock": [2, 27, 66, 94], "downgblock": [2, 27, 66, 95], "graphicalunet": [2, 27, 66, 96], "upblock": [2, 27, 66, 99], "upgblock": [2, 27, 66, 100], "icodineconv": [2, 27, 33, 39, 126, 127, 132, 133, 138, 143, 144], "icofixindexupsampl": [2, 27, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147], "icogenericupconv": [2, 27, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147], "icomaxindexupsampl": [2, 27, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147], "icopool": [2, 27, 126, 130, 131, 141, 142], "icorepaconv": [2, 27, 126, 127, 132, 133, 138, 143, 144], "icospmaconv": [2, 27, 106, 126, 127, 132, 133, 138, 143, 144], "icospmaconvtranspos": [2, 27, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147], "icoupconv": [2, 27, 126, 128, 129, 130, 135, 136, 139, 140, 141, 146, 147], "icoupsampl": [2, 27, 126, 128, 129, 130, 134, 135, 136, 139, 140, 141, 145, 146, 147], "circular_pad": [2, 27, 126, 137], "plot_trisurf": [2, 27, 148, 149, 150, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "cart2sph": [2, 27, 151, 152, 153, 157, 219], "debug_msg": [2, 27, 151, 160], "downsampl": [2, 27, 57, 58, 69, 93, 94, 95, 99, 129, 130, 131, 135, 140, 141, 142, 146, 151, 161, 162, 163, 171, 172, 193, 195, 196, 197, 203, 204], "downsample_data": [2, 27, 151, 161, 162, 163, 171, 172, 195, 196, 197, 203, 204], "downsample_ico": [2, 27, 151, 161, 162, 163, 171, 172, 195, 196, 197, 203, 204], "find_neighbor": [2, 27, 151, 164, 198], "find_rotation_interpol_coef": [2, 27, 151, 165, 189, 199, 213], "get_logg": [2, 27, 151, 166], "get_rectangular_project": [2, 27, 151, 167, 201], "grid2text": [2, 27, 151, 152, 153, 155, 157, 158, 168, 219, 220], "ico2ico": [2, 27, 151, 156, 159, 169, 221], "icosahedron": [2, 27, 33, 34, 36, 39, 40, 42, 56, 59, 60, 61, 66, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 155, 156, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221], "interpol": [2, 27, 36, 42, 82, 98, 99, 128, 136, 139, 147, 149, 150, 151, 155, 158, 161, 162, 163, 165, 168, 171, 172, 189, 191, 195, 196, 197, 199, 203, 204, 213, 215, 220], "interpolate_data": [2, 27, 151, 161, 162, 163, 171, 172, 195, 196, 197, 203, 204], "min_depth_to_get_n_neighbor": [2, 27, 151, 183, 206], "neighbor": [2, 27, 31, 33, 34, 39, 40, 44, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 135, 138, 140, 141, 142, 143, 146, 151, 155, 158, 161, 164, 165, 168, 171, 183, 184, 185, 187, 191, 195, 198, 199, 203, 206, 207, 208, 211, 215, 217, 220], "neighbors_rec": [2, 27, 132, 143, 151, 164, 184, 185, 198, 207, 208], "number_of_ico_vertic": [2, 27, 151, 186, 188, 210, 212], "number_of_neighbor": [2, 27, 151, 183, 187, 206, 211], "order_of_ico_from_vertic": [2, 27, 151, 186, 188, 210, 212], "order_triangl": [2, 27, 151, 189, 213], "patch_tri": [2, 27, 151, 190, 192, 214], "rotate_data": [2, 27, 36, 42, 151, 165, 191, 199, 215], "setup_log": [2, 27, 70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 218], "sph2cart": [2, 27, 151, 152, 153, 157, 219], "text2grid": [2, 27, 151, 152, 153, 155, 157, 158, 168, 219, 220], "text2ico": [2, 27, 151, 156, 159, 169, 221], "sampl": [2, 27, 55, 56, 59, 60, 61, 65, 67, 68, 70, 71, 82, 83, 84, 94, 97, 98, 99, 101, 102, 105, 107, 116, 129, 130, 131, 135, 137, 140, 141, 142, 146, 158, 185, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220], "_patch_tri_it": [2, 27, 151, 192], "build_freesurfer_ico": [2, 27, 151, 193], "build_fslr_ref": [2, 27, 151, 194], "get_angle_with_xaxi": [2, 27, 151, 200], "middle_point": [2, 27, 151, 205], "normal": [2, 27, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 151, 200, 209], "triangles_to_edg": [2, 27, 151, 216], "vertex_adjacency_graph": [2, 27, 151, 217], "coord": [2, 27, 153, 154, 155, 156, 157, 158, 159], "find_corresponding_ord": [2, 27, 151, 154], "io": [2, 27, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "hideprint": [2, 27, 151, 173], "compute_and_stor": [2, 27, 151, 174], "decompose_cifti": [2, 27, 151, 175], "read_freesurf": [2, 27, 151, 176], "read_gifti": [2, 27, 151, 177], "surf_data_from_cifti": [2, 27, 151, 178], "ungzip": [2, 27, 151, 179], "volume_from_cifti": [2, 27, 151, 180], "write_freesurf": [2, 27, 151, 181], "write_gifti": [2, 27, 151, 182], "tutori": 3, "walk": 3, "you": [3, 5, 6, 12, 26], "through": 3, "process": [3, 69, 93], "intal": 3, "an": [3, 5, 7, 8, 11, 12, 13, 26, 33, 34, 39, 40, 43, 46, 47, 49, 52, 54, 69, 70, 82, 93, 97, 98, 127, 138, 155, 158, 159, 163, 168, 170, 172, 183, 186, 187, 188, 191, 197, 202, 204, 205, 206, 210, 211, 212, 215, 220, 221], "offici": 3, "releas": 3, "best": [3, 156, 169], "approach": 3, "user": [3, 6, 70, 82, 97, 98, 191, 215], "who": 3, "want": [3, 12, 26], "latest": 3, "contribut": 3, "project": [3, 5, 36, 42, 156, 159, 161, 164, 167, 169, 170, 184, 185, 190, 195, 198, 200, 201, 202, 205, 207, 208, 214, 221], "packag": 3, "without": [3, 179], "root": [3, 57, 58], "privileg": 3, "pip": 3, "sudo": 3, "mode": [3, 5, 94], "git": 3, "repositori": [3, 12, 26], "e": [3, 5, 8, 158, 220], "http": [3, 66, 178, 180], "github": [3, 66, 178, 180], "com": [3, 66], "neurospin": [3, 12, 26], "deepinsight": 3, "page": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "document": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "onli": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "explain": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "signatur": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "how": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "big": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "pictur": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "nidl": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 222], "expfil": 5, "str": [5, 6, 8, 12, 26, 31, 33, 34, 36, 39, 40, 42, 44, 57, 58, 67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 142, 160, 165, 174, 175, 176, 177, 179, 181, 182, 191, 193, 194, 199, 215, 218], "selector": [5, 6], "tupl": [5, 6, 12, 26, 53, 133, 134, 137, 144, 145], "none": [5, 8, 9, 12, 26, 31, 33, 34, 36, 39, 40, 42, 44, 56, 57, 58, 59, 60, 61, 63, 64, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 134, 145, 149, 150, 162, 163, 172, 174, 191, 193, 194, 196, 197, 204, 205, 215, 218], "verbos": 5, "int": [5, 31, 32, 34, 40, 43, 44, 45, 46, 52, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 154, 155, 158, 162, 163, 164, 167, 168, 170, 172, 183, 184, 185, 186, 187, 188, 190, 196, 197, 198, 201, 202, 204, 206, 207, 208, 210, 211, 212, 214, 216, 220], "input": [5, 7, 12, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 51, 53, 57, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 154, 155, 158, 159, 168, 174, 176, 177, 192, 220, 221], "configur": [5, 6, 222], "allow": [5, 6, 174, 191, 215], "kei": [5, 11, 13, 33, 34, 39, 40, 69, 93, 184, 207], "ar": [5, 6, 11, 13, 29, 57, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 137, 154, 158, 171, 184, 191, 193, 203, 207, 215, 217, 220], "defin": [5, 6, 31, 44, 46, 49, 57, 58, 70, 82, 96, 97, 98, 99, 100, 125, 132, 133, 134, 143, 144, 145, 149, 150, 167, 170, 176, 177, 181, 182, 201, 202], "here": [5, 178, 180], "useful": 5, "inform": [5, 57, 58, 66, 69, 93], "about": [5, 191, 215], "your": [5, 12, 23, 24, 26, 222], "name": [5, 8, 12, 26, 67, 68, 80, 81, 101, 102, 103, 104, 125, 149, 150, 160, 174], "author": 5, "date": 5, "global": [5, 125], "variabl": [5, 125], "can": [5, 30, 37, 48, 50, 57, 58, 70, 71, 82, 83, 84, 96, 97, 98, 105, 106, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 173, 174], "reus": [5, 191, 215], "other": [5, 159, 221], "section": 5, "import": [5, 7, 8, 11, 13, 55, 69, 71, 82, 83, 84, 93, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 220, 221], "auto": [5, 9, 62, 66, 156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "see": [5, 36, 42, 57, 58, 178, 180], "descipt": 5, "below": 5, "scaler": 5, "dl": 5, "interfac": [5, 6, 8, 9, 222], "compos": [5, 184, 207], "dataload": 5, "optim": 5, "schedul": 5, "train": [5, 29, 57, 58], "set": [5, 9, 14, 34, 36, 40, 42, 55, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 161, 171, 175, 195, 203], "environ": [5, 6, 7, 9], "order": [5, 57, 58, 67, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 101, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 154, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 220, 221], "fullfil": 5, "need": [5, 96, 132, 133, 134, 137, 143, 144, 145], "constraint": 5, "impos": 5, "interface_occurr": 5, "paramet": [5, 6, 7, 8, 9, 12, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "definit": [5, 62, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 171, 203], "contain": [5, 11, 13, 57, 58, 69, 93, 106, 149, 150, 174, 190, 214], "specifi": [5, 8, 12, 26, 30, 33, 34, 39, 40, 48, 57, 58, 149, 150, 162, 163, 172, 196, 197, 204], "what": [5, 8], "absolut": [5, 8], "term": [5, 8, 10], "interface_vers": 5, "expect": [5, 57, 58], "version": [5, 8], "The": [5, 33, 35, 36, 39, 41, 42, 66, 67, 68, 70, 80, 81, 82, 83, 96, 97, 98, 101, 102, 103, 104, 105, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 152, 153, 173, 174], "__version__": 5, "check": 5, "avail": [5, 12, 26], "warn": [5, 22], "mismatch": 5, "detect": 5, "connot": 5, "dynam": [5, 7, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "where": [5, 12, 26, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138, 149, 150, 158, 217, 220], "find": [5, 154, 156, 161, 164, 169, 171, 195, 198, 203, 205], "previous": 5, "param": [5, 8, 9], "note": [5, 70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 174], "cross": [5, 9, 133, 134, 144, 145], "valid": [5, 9], "list": [5, 9, 31, 38, 44, 51, 53, 56, 57, 58, 59, 60, 61, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 162, 163, 164, 171, 172, 196, 197, 198, 203, 204, 216], "valu": [5, 11, 13, 33, 34, 39, 40, 57, 58, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 149, 150, 152, 153, 154, 171, 184, 203, 207], "cv": [5, 9], "1": [5, 11, 13, 30, 31, 34, 40, 44, 48, 49, 56, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 133, 134, 135, 138, 140, 141, 142, 144, 145, 146, 149, 150, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 193, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 217, 220, 221], "2": [5, 11, 13, 30, 43, 48, 49, 52, 56, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 155, 156, 158, 159, 161, 162, 163, 164, 167, 168, 169, 171, 172, 183, 184, 185, 190, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 214, 216, 220, 221], "3": [5, 11, 13, 33, 34, 36, 39, 40, 42, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 93, 97, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221], "automat": [5, 191, 215], "instanci": 5, "multipl": [5, 6, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "one": [5, 34, 40, 47, 54, 67, 96, 101, 132, 133, 134, 143, 144, 145, 159, 221], "each": [5, 31, 33, 34, 39, 40, 44, 47, 54, 56, 59, 60, 61, 65, 67, 68, 69, 70, 80, 81, 82, 93, 96, 97, 98, 101, 102, 103, 104, 164, 165, 184, 185, 191, 198, 199, 207, 208, 215], "work": [5, 106], "follow": 5, "same": [5, 6, 154, 156, 169, 174, 179, 184, 207], "type": [5, 6, 36, 42, 43, 52, 82, 98, 99, 131, 142, 165, 184, 191, 199, 207, 215], "return": [5, 6, 7, 9, 12, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 57, 58, 60, 61, 65, 67, 68, 69, 71, 80, 81, 83, 84, 93, 101, 102, 103, 104, 105, 106, 107, 116, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221], "differ": [5, 34, 40, 57, 58, 69, 70, 82, 93, 97, 98], "choic": 5, "must": [5, 30, 48, 174, 179], "describ": [5, 222], "output": [5, 11, 13, 33, 34, 39, 40, 67, 70, 82, 94, 95, 96, 97, 98, 99, 100, 101, 106, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 173, 174], "prefix": 5, "filter": [5, 6, 33, 39, 67, 68, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 131, 132, 135, 138, 140, 142, 143, 146], "build": [5, 33, 34, 39, 40, 43, 52, 69, 93, 184, 185, 190, 192, 193, 194, 205, 207, 208, 214, 217], "block": [5, 94, 95, 99, 100], "construct": 5, "hierarch": 5, "child": [5, 47, 54], "inherit": 5, "properti": 5, "parent": 5, "separ": 5, "special": 5, "case": [5, 9], "form": [5, 12, 26, 31, 44], "hf": [5, 12, 26], "hub": [5, 12, 26], "path": [5, 12, 26, 33, 34, 39, 40, 70, 82, 97, 98, 174, 175, 179, 181, 182, 184, 193, 194, 207], "architecture_nam": [5, 12, 26], "revis": [5, 12, 26], "hug": [5, 12, 26], "face": [5, 12, 26, 149, 150], "specifid": 5, "local": [5, 9, 12, 26], "machin": [5, 12, 26], "experiment": 5, "design": 5, "default": [5, 8, 12, 26, 30, 31, 33, 34, 36, 39, 40, 42, 43, 44, 47, 48, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 131, 133, 134, 138, 142, 144, 145, 149, 150, 154, 158, 159, 162, 163, 165, 167, 170, 172, 173, 174, 175, 184, 185, 186, 189, 190, 191, 193, 194, 196, 197, 199, 201, 202, 204, 207, 208, 210, 213, 214, 215, 218, 220, 221], "select": [5, 6], "appropri": [5, 6], "enabl": [5, 11, 13], "dictionarai": 5, "like": [5, 96], "object": [5, 11, 13, 43, 52, 149, 150, 173, 174], "config": 6, "dict": [6, 7, 8, 9, 33, 34, 39, 40, 57, 58, 69, 93, 125, 164, 165, 184, 198, 199, 207], "env": [6, 7, 9], "declar": 6, "current": [6, 7, 9], "filter_conf": 6, "updat": 7, "tu": 7, "add": [7, 35, 41, 134, 145], "updated_env": 7, "environemt": 7, "argument": [8, 174, 191, 215], "my_modul": 8, "my_class": 8, "exppect": 8, "module": 8, "replac": [9, 34, 40, 57, 58, 70, 82, 97, 98], "updated_param": 9, "attribut": [9, 11, 13, 14, 15], "place": 9, "In": [9, 70, 82, 97, 98, 125], "param_set": 9, "mean": [9, 82, 94, 98, 131, 142, 171, 203], "print": [10, 14, 69, 71, 83, 84, 93, 105, 107, 116, 170, 183, 186, 187, 188, 189, 202, 206, 210, 211, 212, 213], "text": [10, 18, 23, 24, 25], "termin": 10, "kwarg": [11, 13, 38, 51, 83, 105], "expos": [11, 13], "sometim": [11, 13], "thei": [11, 13], "extend": [11, 13], "dictionari": [11, 13, 14, 33, 34, 39, 40, 57, 58, 184, 207], "access": [11, 13, 125, 174], "value_kei": [11, 13], "b": [11, 13], "c": [11, 13, 65, 161, 164, 184, 185, 195, 198, 207, 208], "6": [11, 13, 69, 83, 84, 93, 105, 116, 184, 190, 207, 214], "data_dir": [12, 26], "filepath": [12, 26], "handl": [12, 26], "retriev": [12, 26, 57, 58], "appli": [12, 26, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 137, 156, 167, 169, 185, 201, 208], "locat": [12, 26, 57, 58, 179], "avaiabl": [12, 26], "pathlib": [12, 26], "should": [12, 26, 96, 132, 133, 134, 143, 144, 145], "repo": [12, 26], "classmethod": [12, 26, 31, 44, 69, 93], "hf_download": [12, 26], "hf_id": [12, 26], "hf_revis": [12, 26], "force_download": [12, 26], "bool": [12, 26, 30, 47, 48, 54, 57, 58, 63, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138, 149, 150, 170, 173, 175, 184, 189, 190, 202, 207, 213, 214], "fals": [12, 26, 57, 58, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 149, 150, 156, 161, 163, 164, 169, 170, 171, 172, 173, 175, 178, 180, 184, 185, 189, 190, 191, 195, 197, 198, 202, 203, 204, 207, 208, 213, 214, 215, 216], "given": [12, 26, 65, 67, 101, 174, 191, 215, 216, 217], "alreadi": [12, 26], "present": [12, 26], "alwai": [12, 26], "resum": [12, 26], "when": [12, 26, 149, 150, 154, 159, 174, 189, 213, 221], "possibl": [12, 26], "If": [12, 26, 174, 191, 215], "forc": [12, 26], "new": [12, 26, 30, 48, 49, 69, 93, 128, 139], "true": [12, 18, 23, 24, 25, 26, 30, 47, 48, 54, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 135, 138, 140, 141, 142, 146, 149, 150, 155, 156, 159, 162, 164, 168, 169, 184, 189, 196, 198, 207, 213, 221], "id": [12, 26], "tag": [12, 26], "commit": [12, 26], "hash": [12, 26], "whether": [12, 26], "even": [12, 26], "exist": [12, 26, 57, 58, 193, 194], "cach": [12, 26, 33, 34, 36, 39, 40, 42, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 174], "weight_fil": [12, 26], "hub_split": [12, 26], "hub_nam": [12, 26], "interpret": [12, 26], "hub_id": [12, 26], "hub_revis": [12, 26], "load_pretrain": [12, 26], "torch": [12, 26, 66, 71, 82, 83, 84, 96, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "decalr": [12, 26], "ns_download": [12, 26], "ns_id": [12, 26], "reset": [14, 23, 24], "background": 14, "256": [14, 67, 68, 80, 81, 101, 102, 103, 104], "foreground": [14, 16], "reverse_dict": 14, "revers": [14, 67, 101], "alia": [15, 16, 30, 48, 49, 69, 93], "result": [19, 125, 173], "titl": [20, 21], "conveni": [23, 24], "style": [23, 24], "ansi": [23, 24], "its": [23, 24, 174, 184, 207], "end": [23, 24], "directli": 29, "inspir": 29, "natur": 29, "imag": [29, 57, 58, 65, 158, 175, 220], "cnn": 29, "origin": [29, 65], "regist": [30, 37, 48, 50, 96, 132, 133, 134, 143, 144, 145], "sequenc": [30, 37, 48, 50], "init": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 56, 59, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 173], "probabl": [30, 31, 32, 44, 45, 46, 48], "randomize_per_channel": [30, 47, 48, 54], "creat": [30, 43, 48, 49, 52, 55, 57, 58, 69, 93, 125], "instanc": [30, 48, 49, 69, 93, 96, 132, 133, 134, 143, 144, 145], "field": [30, 33, 39, 48, 49, 69, 93], "number": [30, 31, 34, 40, 43, 44, 48, 49, 52, 56, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138, 149, 150, 158, 162, 163, 172, 183, 186, 187, 188, 190, 196, 197, 204, 206, 210, 211, 212, 214, 220], "float": [30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 63, 64, 96, 149, 150, 152, 153, 154, 157, 159, 219, 221], "control": [30, 33, 39, 48, 56, 59, 60, 61, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 133, 134, 144, 145, 167, 185, 201, 208], "random": [30, 34, 40, 46, 47, 48, 49, 54, 56, 59, 60, 61], "tranform": [30, 48, 156, 169], "channel": [30, 47, 48, 54, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147], "wise": [30, 48, 82, 98], "prob": [31, 32, 44, 45, 46], "n_vertic": [31, 32, 44, 45, 46, 60, 61, 80, 81, 83, 103, 104, 105, 162, 172, 183, 186, 187, 188, 191, 196, 204, 206, 210, 211, 212, 215], "randomli": [31, 32, 44, 45], "bootstrap": [31, 44], "measur": [31, 32, 36, 42, 44, 45, 46], "vertic": [31, 32, 33, 34, 36, 39, 40, 42, 44, 45, 56, 59, 60, 61, 69, 82, 93, 98, 127, 128, 138, 139, 149, 150, 155, 156, 158, 159, 161, 162, 163, 165, 168, 169, 170, 171, 172, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221], "across": [31, 32, 44, 45], "group": [31, 44], "k": [31, 44, 127, 132, 138, 143, 159, 221], "subject": [31, 32, 44, 45, 57, 58], "assum": [31, 32, 44, 45, 154], "vertex": [31, 32, 33, 34, 39, 40, 44, 45, 82, 98, 184, 185, 191, 207, 208, 209, 215, 216, 217], "correspond": [31, 32, 44, 45, 154, 159, 186, 210, 221], "between": [31, 32, 44, 45, 149, 150, 154, 156, 169, 184, 193, 207, 217], "hemispher": [31, 32, 44, 45, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "curupt": [31, 32, 44, 45, 46], "size": [31, 32, 34, 40, 44, 45, 46, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 133, 134, 137, 143, 144, 145, 164, 167, 185, 190, 192, 198, 201, 208, 214], "cortic": [31, 32, 36, 42, 44, 45, 46, 55, 62, 63, 64, 66, 67, 68, 70, 71, 80, 81, 82, 83, 84, 97, 98, 101, 102, 103, 104, 105, 107, 116], "groupbi": [31, 44], "textur": [31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 67, 68, 71, 80, 81, 83, 84, 101, 102, 103, 104, 105, 107, 116, 149, 150, 155, 158, 159, 162, 168, 171, 172, 191, 196, 203, 204, 215, 220, 221], "n_neighbor": [31, 44], "30": [31, 44], "n_compon": [31, 44], "20": [31, 44], "meta": [31, 44], "regroup": [31, 44], "combin": [31, 44], "metric": [31, 44], "arrai": [31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 51, 53, 56, 57, 58, 59, 60, 61, 94, 99, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 154, 155, 156, 158, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 185, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 215, 216, 217, 220, 221], "m": [31, 33, 34, 36, 39, 40, 42, 44, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 149, 150, 163, 170, 176, 177, 181, 182, 184, 189, 197, 202, 207, 213, 217], "determin": [31, 44], "pca": [31, 44], "compon": [31, 44, 152, 153, 157, 219], "reduc": [31, 44, 162, 163, 165, 196, 197, 199], "panda": [31, 44, 57, 58], "datafram": [31, 44, 57, 58], "extern": [31, 44], "distanc": [31, 44, 132, 143], "matrix": [31, 44], "neigh_ind": [31, 44], "indic": [31, 44, 94, 99, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 154, 162, 163, 164, 165, 171, 172, 184, 190, 196, 197, 198, 199, 203, 204, 207, 214, 216], "nearest": [31, 44, 82, 98, 99, 155, 158, 161, 168, 171, 195, 203, 220], "popul": [31, 44], "run": [31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 96, 132, 133, 134, 143, 144, 145, 190, 214], "group_data": [31, 44], "n_sampl": [31, 44, 56, 59, 60, 61, 158, 159, 161, 162, 171, 172, 191, 195, 196, 203, 204, 215, 220, 221], "bootstap": [31, 44], "perform": [31, 44, 96, 131, 132, 133, 134, 142, 143, 144, 145], "arr": [31, 32, 34, 35, 36, 40, 41, 42, 44, 45], "bootsrap": [31, 44], "permut": [32, 45, 154, 156, 169], "": [32, 33, 34, 36, 39, 40, 42, 45, 56, 59, 60, 61, 67, 68, 70, 80, 81, 82, 94, 97, 98, 99, 101, 102, 103, 104, 127, 138, 161, 164, 174, 184, 185, 189, 190, 195, 198, 207, 208, 213, 214], "controlateral_data": [32, 45], "controlater": [32, 45], "triangl": [33, 34, 36, 39, 40, 42, 69, 82, 93, 98, 149, 150, 155, 156, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 176, 177, 181, 182, 184, 185, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 213, 214, 215, 216, 217, 221], "sigma": [33, 34, 35, 39, 40, 41], "neigh": [33, 34, 39, 40, 132, 143, 164, 165, 184, 185, 191, 192, 198, 199, 207, 208, 215], "cachedir": [33, 34, 36, 39, 40, 42, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 174], "gaussian": [33, 35, 39, 41, 56, 59, 60, 61], "blur": [33, 39], "implement": [33, 39, 66, 83, 96, 105], "dine": [33, 34, 39, 40, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138, 184, 207], "convolut": [33, 39, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 132, 133, 134, 135, 138, 140, 143, 144, 145, 146], "speed": [33, 39, 69, 93], "recept": [33, 39], "standard": [33, 35, 39, 41, 69, 70, 82, 93, 97, 98, 170, 173, 190, 202, 214], "deviat": [33, 35, 39, 41], "kernel": [33, 39, 133, 134, 144, 145, 184, 185, 207, 208], "icosahdron": [33, 34, 36, 39, 40, 42], "optionnali": [33, 34, 39, 40, 47, 54, 57, 58], "neighboor": [33, 34, 39, 40, 149, 150], "sufifi": [33, 34, 39, 40], "ie": [33, 34, 39, 40, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "row": [33, 34, 39, 40, 184, 207], "index": [33, 34, 39, 40, 161, 164, 184, 195, 198, 207, 216], "organ": [33, 34, 39, 40, 175, 184, 207], "ring": [33, 34, 39, 40, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 129, 131, 135, 138, 140, 142, 146, 164, 184, 198, 207], "option": [33, 34, 39, 40, 63, 64, 67, 68, 69, 80, 81, 93, 101, 102, 103, 104, 149, 150, 162, 163, 170, 172, 173, 189, 190, 196, 197, 202, 204, 213, 214], "patch_siz": [34, 40], "n_patch": [34, 40], "replacement_valu": [34, 40], "start": [34, 40, 164, 198], "adapt": [34, 40, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "connex": [34, 40], "neighborhood": [34, 40, 94, 99, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 167, 183, 185, 201, 206, 208], "zero": [34, 40, 71, 82, 83, 84, 98, 99, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 155, 168], "node": [34, 40, 127, 138, 164, 167, 198, 201, 217], "consid": [34, 40, 57, 58, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138], "dure": [34, 40], "ablat": [34, 40], "patch": [34, 40, 57, 58, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 185, 190, 192, 208, 214], "cutout": [34, 40], "cut": [34, 40], "out": [34, 40, 53, 71, 82, 83, 84, 98, 105, 107, 116], "white": [35, 41], "nois": [35, 41], "phi": [36, 42], "5": [36, 42, 69, 70, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 143, 167, 184, 185, 201, 207, 208], "theta": [36, 42], "psi": [36, 42], "barycentr": [36, 42, 165, 189, 191, 199, 213, 215], "rotat": [36, 42, 156, 165, 169, 191, 199, 215], "angl": [36, 42, 152, 153, 157, 165, 184, 191, 199, 200, 207, 215, 219], "degre": [36, 42, 165, 191, 199, 215], "euler": [36, 42, 165, 191, 199, 215], "represent": [36, 42, 66, 80, 81, 83, 103, 104, 105, 165, 191, 199, 215, 217], "folder": [36, 42, 57, 58, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "smart": [36, 42, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "speedup": [36, 42, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "provid": [36, 42, 57, 58, 126, 165, 191, 199, 215, 222], "accordingli": [36, 42], "them": [37, 50, 96, 132, 133, 134, 143, 144, 145, 174, 217], "arg": [38, 51, 83, 105], "seri": [38, 51], "n_channel": [38, 51], "_data": [38, 51], "bound": [43, 52], "dtype": [43, 49, 52, 155, 168], "uplet": [43, 52, 132, 143, 165, 191, 199, 215], "aplli": 46, "rand_mask": 46, "binari": [46, 63, 64], "corrupt": 46, "mask": [46, 57, 58, 63, 64], "decor": [47, 54, 174, 191, 215], "multichannel": [47, 54], "multichannelaugment": [47, 54], "applic": [47, 54, 70, 82, 97, 98], "multi": [47, 54], "low": 49, "high": 49, "ensur": 53, "liftifi": 53, "synthet": 55, "ico_vertic": [56, 59, 60, 61], "40": [56, 59, 60, 61], "n_class": [56, 59, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 158, 159, 162, 171, 172, 191, 196, 203, 204, 215, 220, 221], "scale": [56, 59, 60, 61, 158, 159, 162, 167, 171, 172, 185, 191, 196, 201, 203, 204, 208, 215, 220, 221], "seed": [56, 59, 60, 61, 158, 159, 162, 171, 172, 191, 196, 203, 204, 215, 220, 221], "classif": [56, 59, 60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "gene": [56, 59, 60, 61], "rate": [56, 59, 60, 61], "pattern": [57, 58, 137], "subject_in_pattern": [57, 58], "ico_ord": [57, 58], "target": [57, 58, 156, 159, 169, 221], "target_map": [57, 58], "split": [57, 58], "contrast": [57, 58], "n_max": [57, 58], "withdraw_subject": [57, 58], "target_ico_ord": [57, 58], "scalabl": [57, 58], "neuroimag": [57, 58, 83, 105], "store": [57, 58, 174, 175, 176, 177, 191, 215], "regex": [57, 58], "interest": [57, 58, 69, 93], "ani": [57, 58, 170, 202], "nibabel": [57, 58, 178, 180], "level": [57, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 218], "identifi": [57, 58, 156, 169], "ico": [57, 58, 69, 93, 127, 138], "tabular": [57, 58], "particip": [57, 58], "tsv": [57, 58], "request": [57, 58, 66], "optionali": [57, 58, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "more": [57, 58, 222], "conta": [57, 58], "u": [57, 58, 70, 82, 96, 97, 98], "callabl": [57, 58, 174], "call": [57, 58, 96, 132, 133, 134, 143, 144, 145, 174, 191, 215], "pair": [57, 58], "triangular": [57, 58, 149, 150, 190, 192, 214], "keep": [57, 58], "subset": [57, 58], "debug": [57, 58, 70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 160], "purpos": [57, 58], "remov": [57, 58], "desir": [57, 58, 183, 206], "resolut": [57, 58, 70, 82, 97, 98], "problem": [60, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "x": [60, 61, 65, 68, 70, 71, 80, 81, 82, 83, 84, 94, 95, 96, 97, 98, 102, 103, 104, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 155, 157, 158, 159, 162, 168, 171, 172, 184, 191, 196, 200, 203, 204, 207, 215, 219, 220, 221], "ndarrai": [60, 61, 152, 153, 157, 219], "y": [60, 61, 152, 153, 155, 157, 158, 159, 162, 168, 171, 172, 191, 196, 203, 204, 215, 219, 220, 221], "assocait": [60, 61], "label": [60, 61, 149, 150], "spheric": [62, 63, 64, 66, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 133, 134, 137, 144, 145, 151, 152, 153, 155, 157, 158, 167, 168, 184, 201, 207, 219, 220], "variat": [62, 66, 83, 105], "encod": [62, 66, 68, 70, 80, 81, 82, 83, 97, 98, 102, 103, 104, 105], "svae": [62, 83, 105], "beta": [63, 64, 152, 153, 157, 219], "9": [63, 64], "left_mask": [63, 64], "right_mask": [63, 64], "use_ms": [63, 64], "kl": [63, 64], "diverg": [63, 64], "tensor": [63, 64, 65, 67, 68, 71, 80, 81, 83, 84, 99, 101, 102, 103, 104, 105, 107, 116, 137, 160], "azimuth": [63, 64, 67, 68, 71, 83, 84, 101, 102, 105, 107, 116, 137, 152, 153, 157, 158, 219, 220], "elev": [63, 64, 67, 68, 71, 83, 84, 101, 102, 105, 107, 116, 137, 152, 153, 157, 158, 219, 220], "left": [63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 175], "right": [63, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 175], "log": [63, 64, 65, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 105, 107, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 166, 218], "likelihood": [63, 64, 65], "recon": 65, "comput": [65, 96, 106, 132, 133, 134, 143, 144, 145, 165, 174, 191, 199, 200, 215], "reconstruct": [65, 67, 83, 101, 105], "h": [65, 106], "w": [65, 106], "network": [66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "relat": [66, 69, 93], "gmvae": 66, "learn": [66, 83, 105, 127, 138, 222], "rest": [66, 83, 105], "state": [66, 67, 83, 101, 105], "fmri": [66, 83, 105], "autoencod": [66, 83, 105], "libilab": 66, "rsfmri": 66, "vision": [66, 190, 214], "output_shap": [67, 101, 134, 145], "before_latent_dim": [67, 101], "latent_dim": [67, 68, 80, 81, 83, 101, 102, 103, 104, 105], "conv_flt": [67, 68, 80, 81, 83, 101, 102, 103, 104, 105], "64": [67, 68, 80, 81, 83, 101, 102, 103, 104, 105], "128": [67, 68, 80, 81, 101, 102, 103, 104], "fusion_level": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "activ": [67, 68, 70, 80, 81, 82, 83, 97, 98, 101, 102, 103, 104, 105], "leakyrelu": [67, 68, 80, 81, 83, 101, 102, 103, 104, 105], "batch_norm": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "output_channel": [67, 101], "input_dim": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "squar": [67, 101, 106], "convnet": [67, 101, 106], "after": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dens": [67, 101], "layer": [67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147], "latent": [67, 68, 80, 81, 83, 101, 102, 103, 104, 105], "space": [67, 68, 69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 101, 102, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 167, 201], "decod": [67, 70, 80, 82, 83, 97, 98, 101, 103, 105], "first": [67, 70, 82, 94, 95, 97, 98, 101, 191, 215], "last": [67, 101], "which": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 154, 164, 191, 198, 215], "max": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 141, 142], "pool": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 131, 142], "concaten": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "batch": [67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "forward": [67, 68, 70, 71, 80, 81, 82, 83, 84, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "z": [67, 68, 83, 101, 102, 105, 152, 153, 155, 157, 158, 168, 219, 220], "stochast": [67, 83, 101, 105], "left_recon_x": [67, 83, 101, 105], "input_channel": [67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "right_recon_x": [67, 83, 101, 105], "192": [68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 155, 158, 168, 220], "convert": [68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 97, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 155, 158, 168, 220], "d": [68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 97, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 134, 137, 144, 145, 155, 158, 168, 220], "grid": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 155, 158, 167, 168, 185, 201, 208, 220], "left_x": [68, 71, 80, 81, 83, 84, 102, 103, 104, 105, 107, 116], "right_x": [68, 71, 80, 81, 83, 84, 102, 103, 104, 105, 107, 116], "q": [68, 83, 102, 105], "batch_siz": [68, 80, 81, 83, 102, 103, 104, 105], "distribut": [68, 83, 102, 105], "input_ord": [69, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "n_layer": [69, 93], "conv_mod": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dine_s": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "repa_s": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "repa_zoom": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dynamic_repa_zoom": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "standard_ico": [69, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 103, 104, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 159, 169, 170, 190, 202, 214, 221], "either": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124], "repa": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 185, 208], "rectangular": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 167, 185, 201, 208], "direct": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 138, 158, 184, 207, 220], "ico_info": [69, 93], "build_ico_info": [69, 93], "tangent": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 143, 167, 184, 200, 201, 207], "factor": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 167, 185, 201, 208], "zoom": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 143, 164, 167, 185, 198, 201, 208], "tessal": [69, 93, 170, 190, 202, 214], "freesurf": [69, 93, 176, 181, 190, 193, 214], "tessel": [69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 105, 116, 117, 118, 119, 120, 121, 122, 123, 124, 190, 214], "neighbor_indic": [69, 93, 127, 129, 130, 135, 138, 140, 141, 146], "down_indic": [69, 93, 94, 99, 129, 130, 131, 135, 140, 141, 142, 146, 162, 163, 196, 197], "up_indic": [69, 93, 128, 136, 139, 147, 171, 172, 203, 204], "conv_neighbor_indic": [69, 93], "4": [69, 82, 93, 98, 128, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 154, 156, 159, 162, 163, 169, 172, 187, 196, 197, 204, 211, 217, 221], "dictionnari": [69, 93, 174], "icosehedron": [69, 93], "upsampl": [69, 82, 93, 98, 99, 128, 129, 130, 135, 136, 139, 140, 141, 146, 147, 172, 204], "up": [69, 70, 82, 93, 97, 98, 154, 156, 164, 169, 187, 198, 211], "onform": [69, 93], "in_channel": [70, 82, 96, 97, 98], "out_channel": [70, 82, 96, 97, 98], "depth": [70, 82, 96, 97, 98, 127, 129, 130, 131, 135, 138, 140, 141, 142, 146, 164, 183, 184, 187, 198, 206, 207, 211], "start_filt": [70, 82, 97, 98], "32": [70, 82, 83, 96, 97, 98, 105], "gride": [70, 71, 95, 97, 100, 107, 155, 168], "net": [70, 82, 96, 97, 98], "built": [70, 82, 97, 98], "upon": [70, 82, 97, 98], "transpos": [70, 82, 97, 98, 99, 129, 134, 135, 140, 145, 146], "ha": [70, 82, 97, 98], "step": [70, 82, 97, 98], "3x3": [70, 82, 97, 98], "spma": [70, 97], "addit": [70, 82, 97, 98, 127, 138], "befor": [70, 82, 97, 98, 134, 145], "rectifi": [70, 82, 97, 98], "linear": [70, 82, 97, 98, 99], "unit": [70, 82, 97, 98, 167, 185, 201, 205, 208, 209], "relu": [70, 82, 94, 95, 96, 97, 98, 99, 100], "ad": [70, 82, 97, 98], "doubl": [70, 82, 97, 98], "halv": [70, 82, 97, 98], "messag": [70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 160], "chang": [70, 71, 82, 83, 84, 96, 97, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "zhao": [70, 82, 97, 98], "f": [70, 82, 97, 98], "et": [70, 82, 97, 98], "al": [70, 82, 97, 98], "ipmi": [70, 82, 97, 98], "2019": [70, 82, 96, 97, 98], "conv": [70, 82, 94, 95, 96, 97, 98, 99, 100, 127, 138], "cfg": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "194": [71, 72, 73, 74, 75, 76, 77, 78, 79, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 144], "hidden_dim": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "4096": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "init_weight": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "10": [71, 82, 84, 98, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "512": [71, 84, 107, 116], "shape": [71, 82, 83, 84, 98, 105, 107, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 170, 171, 186, 202, 203, 210], "stand": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "mlp": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "hidden": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dim": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "wether": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "initi": [71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "predict": [71, 84, 107, 116], "in_ord": [82, 98], "up_mod": [82, 98, 99], "interp": [82, 98, 99], "2x2": [82, 98], "At": [82, 98], "final": [82, 98], "1x1": [82, 98], "8": [82, 98, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147], "len": [82, 83, 84, 98, 105, 116, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 164, 183, 188, 198, 206, 212], "maxpad": [82, 98, 99], "shift": [82, 98, 99], "pad": [82, 98, 99, 128, 133, 134, 137, 139, 144, 145], "zeropad": [82, 98, 99], "classic": [82, 98, 99], "sphericalgva": [83, 105], "2021": [83, 105], "vert": [83, 84, 105, 116], "tri": [83, 84, 105, 116, 192], "reparameter": [83, 105], "reparametr": [83, 105], "trick": [83, 105], "num_class": [84, 85, 86, 87, 88, 89, 90, 91, 92, 116, 117, 118, 119, 120, 121, 122, 123, 124], "conv_lay": [94, 99], "in_ch": [94, 95, 99, 100], "out_ch": [94, 95, 99, 100], "conv_neigh_indic": [94, 99], "down_neigh_indic": [94, 130, 131, 141, 142], "pool_mod": 94, "bn": [94, 95, 99, 100], "discret": [94, 99, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "sphere": [94, 99, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 167, 185, 189, 200, 201, 205, 208, 209, 213], "skip": [94, 95, 96], "hidden_channel": 96, "pool_ratio": 96, "sum_r": 96, "act": 96, "graph": [96, 217], "unpool": 96, "oper": 96, "hongyang": 96, "gao": 96, "shuiwang": 96, "ji": 96, "arxiv": 96, "ratio": 96, "connect": [96, 217], "instead": [96, 132, 133, 134, 143, 144, 145], "summat": 96, "nonlinear": 96, "edge_index": 96, "everi": [96, 132, 133, 134, 143, 144, 145, 161, 195], "overridden": [96, 132, 133, 134, 143, 144, 145], "subclass": [96, 132, 133, 134, 143, 144, 145], "although": [96, 132, 133, 134, 143, 144, 145], "recip": [96, 132, 133, 134, 143, 144, 145], "pass": [96, 132, 133, 134, 143, 144, 145], "within": [96, 132, 133, 134, 143, 144, 145], "afterward": [96, 132, 133, 134, 143, 144, 145], "sinc": [96, 132, 133, 134, 137, 143, 144, 145], "former": [96, 132, 133, 134, 143, 144, 145], "take": [96, 106, 132, 133, 134, 143, 144, 145], "care": [96, 132, 133, 134, 143, 144, 145, 191, 215], "hook": [96, 132, 133, 134, 143, 144, 145], "while": [96, 132, 133, 134, 143, 144, 145], "latter": [96, 132, 133, 134, 143, 144, 145], "silent": [96, 132, 133, 134, 143, 144, 145], "ignor": [96, 132, 133, 134, 143, 144, 145], "neigh_indic": [99, 127, 132, 138, 143], "up_neigh_indic": [99, 128, 129, 130, 135, 136, 139, 140, 141, 146, 147], "upsamp": [99, 100], "upconv": [99, 100], "x1": [99, 100], "x2": [99, 100], "max_pool_indic": [99, 130, 141], "dimens": 106, "height": 106, "iter": 106, "For": [106, 184, 207], "now": 106, "conv2d": 106, "output_dim": 106, "klass_nam": 125, "klass_param": 125, "destination_module_glob": 125, "make": 125, "publicli": 125, "we": [125, 137, 178, 180], "assign": [125, 184, 207], "in_feat": [127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147], "out_feat": [127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147], "bia": [127, 138], "formul": [127, 138], "ico2_vertic": [127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147], "ico2_triangl": [127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147], "direct_neighbor": [127, 129, 130, 131, 135, 138, 140, 141, 142, 146, 164, 184, 190, 192, 198, 207, 214], "np": [127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 155, 168, 171, 203], "asarrai": [127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 146, 147, 171, 203], "ico2_x": [127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147], "fix": [128, 139, 149, 150, 209], "ico3_vertic": [128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 146, 147], "ico3_triangl": [128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 146, 147], "ico3_x": [128, 129, 130, 131, 135, 136, 139, 140, 141, 142, 146, 147], "slow": [129, 140], "pooling_typ": [130, 131, 141, 142], "_": [130, 131, 141, 142, 178, 180], "rectagular": [132, 143], "plane": [132, 143, 184, 200, 207], "neigh_weight": [132, 143], "kernel_s": [133, 134, 144, 145], "stride": [133, 134, 144, 145], "map": [133, 134, 137, 144, 145, 149, 150, 156, 169, 190, 214], "circular": [133, 134, 137, 144, 145], "16": [133, 134, 144, 145], "proj_ico_x": [133, 134, 144, 145], "correl": [133, 134, 144, 145], "pad_azimuth": [133, 134, 137, 144, 145], "pad_elev": [133, 134, 137, 144, 145], "zero_pad": [134, 145], "icoconv": [134, 145], "96": [134, 145, 155, 168], "both": [134, 145, 184, 207], "ax": [134, 145, 149, 150, 156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "circularli": 137, "continu": 137, "respect": [137, 158, 220], "boundari": 137, "flatten": 137, "evalu": 137, "vmin": [149, 150], "vmax": [149, 150], "colorbar": [149, 150, 156, 161, 163, 164, 169, 170, 184, 185, 190, 195, 197, 198, 202, 207, 208, 214], "fig": [149, 150, 156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "is_label": [149, 150, 155, 159, 162, 168, 171, 172, 191, 196, 203, 204, 215, 221], "alpha": [149, 150, 152, 153, 156, 157, 169, 219], "edgecolor": [149, 150, 156, 169], "black": [149, 150], "linewidth": [149, 150], "color_map": [149, 150], "matplotlib": [149, 150, 155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "linearsegmentedcolormap": [149, 150], "minimum": [149, 150], "maximum": [149, 150, 190, 214], "figur": [149, 150], "axes3d": [149, 150], "axi": [149, 150, 154, 165, 171, 178, 180, 184, 191, 199, 200, 203, 207, 215], "most": [149, 150], "repres": [149, 150, 216, 217], "opac": [149, 150], "Not": [149, 150], "string": [149, 150], "edg": [149, 150, 216, 217], "line": [149, 150], "width": [149, 150], "cm": [149, 150], "coolwarm": [149, 150], "colormap": [149, 150], "associ": [151, 159, 165, 191, 199, 215, 221], "coordin": [151, 152, 153, 155, 156, 157, 158, 168, 169, 193, 209, 219, 220], "system": 151, "tool": [151, 222], "o": [151, 161, 164, 184, 185, 190, 195, 198, 207, 208, 214], "cartesian": [152, 153, 157, 219], "array_lik": [152, 153, 157, 219], "numpi": [152, 153, 157, 219], "radiant": [152, 153, 157, 219], "rang": [152, 153, 187, 211], "pi": [152, 153], "r": [152, 153, 157, 219], "radiu": [152, 153, 157, 219], "ref_arrai": 154, "atol": [154, 159, 221], "0001": [154, 159, 221], "uniqu": 154, "match": [154, 159, 221], "two": [154, 156, 169, 184, 207], "1e": [154, 159, 221], "toler": [154, 159, 221], "along": 154, "new_ord": 154, "proj": [155, 158, 168, 220], "resx": [155, 158, 168, 220], "resi": [155, 158, 168, 220], "pyplot": [155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "plt": [155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "ico2_vert": [155, 156, 158, 159, 161, 162, 164, 168, 169, 171, 172, 184, 185, 190, 195, 196, 198, 203, 204, 207, 208, 214, 220, 221], "ico2_tri": [155, 156, 158, 159, 161, 162, 164, 168, 169, 171, 172, 184, 185, 190, 195, 196, 198, 203, 204, 207, 208, 214, 220, 221], "y_grid": [155, 158, 168, 220], "show": [155, 156, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 184, 185, 190, 191, 195, 196, 197, 198, 202, 203, 204, 207, 208, 214, 215, 220, 221], "ref_vertic": [156, 159, 169, 221], "simpl": [156, 169, 217], "estim": [156, 169], "sign": [156, 169], "scipi": [156, 169], "spatial": [156, 169], "ico2_std_vert": [156, 159, 169, 221], "ico2_std_tri": [156, 159, 169, 221], "subplot": [156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "subplot_kw": [156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "3d": [156, 161, 164, 167, 169, 170, 184, 185, 190, 195, 198, 201, 202, 207, 208, 214], "aspect": [156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "figsiz": [156, 161, 164, 169, 170, 184, 185, 190, 195, 198, 202, 207, 208, 214], "blue": [156, 164, 169, 184, 185, 198, 207, 208], "green": [156, 169], "onto": [158, 159, 220, 221], "evenli": [158, 220], "resampl": [158, 220], "sin": [158, 220], "projecte": [158, 220], "42": [158, 159, 162, 171, 172, 191, 196, 203, 204, 215, 220, 221], "imshow": [158, 220], "y_std": [159, 221], "format": [160, 176, 177, 181, 182], "msg": 160, "target_vertic": [161, 171, 195, 203], "n_dim": [161, 171, 195, 203], "point": [161, 164, 167, 171, 184, 185, 190, 195, 198, 200, 201, 203, 205, 207, 208, 214], "n_queri": [161, 171, 195, 203], "nearest_idx": [161, 195], "ico3_vert": [161, 170, 171, 183, 186, 188, 190, 191, 195, 202, 203, 206, 210, 212, 214, 215], "ico3_tri": [161, 170, 171, 183, 186, 188, 190, 191, 195, 202, 203, 206, 210, 212, 214, 215], "down3to2": [161, 195], "ico3_down_vertic": [161, 195], "cnt": [161, 164, 184, 185, 190, 195, 198, 207, 208, 214], "enumer": [161, 164, 184, 185, 190, 195, 198, 207, 208, 214], "scatter": [161, 164, 184, 185, 190, 195, 198, 207, 208, 214], "marker": [161, 164, 184, 185, 190, 195, 198, 207, 208, 214], "red": [161, 164, 184, 185, 195, 198, 207, 208], "100": [161, 164, 184, 185, 190, 193, 195, 198, 207, 208, 214], "lower": [162, 193, 196], "n_featur": [162, 172, 191, 196, 204, 215], "consecut": [162, 163, 172, 196, 197, 204], "downsampled_data": [162, 196], "new_n_vertic": [162, 172, 196, 204], "ico4_vert": [162, 163, 172, 196, 197, 204], "ico4_tri": [162, 163, 172, 196, 197, 204], "reshap": [162, 164, 171, 172, 191, 196, 198, 203, 204, 215], "y_down": [162, 196], "squeez": [162, 172, 191, 196, 204, 215], "geometri": [163, 171, 176, 177, 181, 182, 197, 203, 205], "new_vertic": [163, 197], "newli": [163, 197], "icosahedorn": [163, 197], "new_triangl": [163, 197], "ico2_down_vert": [163, 197], "ico2_down_tri": [163, 197], "start_nod": [164, 198], "recurs": [164, 198], "certain": [164, 187, 198, 211], "search": [164, 184, 198, 207], "look": [164, 198], "node_neigh": [164, 198], "center": [164, 184, 185, 189, 198, 200, 207, 208, 213], "idx": [164, 184, 190, 198, 207, 214], "coeffici": [165, 199], "asssoci": [165, 199], "euclidian": [165, 199], "three": [165, 199], "closest": [165, 199], "setup": [166, 218], "logger": 166, "2d": [167, 201], "densiti": [167, 185, 201, 208], "grid_in_spher": [167, 185, 201, 208], "grid_in_tplan": [167, 201], "mesh": [170, 171, 184, 202, 203, 207, 217], "target_triangl": [171, 203], "miss": [171, 203], "regular": [171, 203], "interp_indic": [171, 203], "n_feat": [171, 203], "y_up": [171, 172, 203, 204], "upper": [172, 204], "increas": [172, 204], "upsampled_data": [172, 204], "hide_err": 173, "secur": 173, "redirect": 173, "error": 173, "context": 173, "manag": 173, "On": 173, "complet": [173, 174], "restor": 173, "hide": 173, "func": 174, "faster": 174, "next": 174, "wrap": 174, "receiv": 174, "have": [174, 184, 207], "directori": 174, "done": 174, "memori": 174, "transpar": 174, "overlap": 174, "item": 174, "cifti_fil": 175, "decompos": 175, "cifti": [175, 178, 180], "vol": 175, "volum": [175, 180, 222], "surf_left": 175, "surf_right": 175, "surf_fil": [176, 177, 181, 182], "read": [176, 177], "gifti": [177, 182], "surf_nam": 178, "nbviewer": [178, 180], "org": [178, 180], "neurohackademi": [178, 180], "nh2020": [178, 180], "curriculum": [178, 180], "blob": [178, 180], "master": [178, 180], "markiewicz": [178, 180], "ipynb": [178, 180], "extract": 179, "gnu": 179, "archiv": 179, "open": 179, "gz": 179, "out_path": 179, "extens": 179, "write": [181, 182], "save": [181, 182], "n_neigh": [183, 187, 206, 211], "get": [183, 186, 187, 188, 206, 210, 211, 212, 217], "minim": [183, 206], "stop": [184, 207], "length": [184, 207], "12": [184, 207], "remain": [184, 207], "those": [184, 207], "7": [184, 207], "sequenti": [184, 207], "accord": [184, 207], "vector": [184, 207], "wai": [184, 207, 222], "n_vert": [186, 210], "min_order_to_get_n_neighbor": [187, 211], "hi": [188, 212], "clockwise_from_cent": [189, 213], "clockwis": [189, 213], "view": [189, 213], "counter": [189, 213], "reordered_triangl": [189, 213], "reorder": [189, 213], "ico0_vert": [189, 213], "ico0_tri": [189, 213], "clockwise_ico0_tri": [189, 213], "counter_clockwise_ico0_tri": [189, 213], "n_job": [190, 214], "concurr": [190, 214], "job": [190, 214], "time": [191, 215], "euclidean": [191, 215], "via": [191, 215], "rotated_data": [191, 215], "y_rot": [191, 215], "45": [191, 215], "lower_vertic": 192, "ico_fil": 193, "rescal": 193, "topologi": [193, 194], "ref_fil": 194, "fslr": 194, "point_1": 205, "point_2": 205, "middle_point_cach": 205, "middl": 205, "return_index": 216, "triangles_index": 216, "networkx": 217, "nearbi": 217, "potenti": 217, "smooth": 217, "techniqu": 217, "info": 218, "logfil": 218, "unifi": 222, "deep": 222, "compat": 222, "lightn": 222, "analyz": 222, "brain": 222, "singl": 222, "product": 222, "advanc": 222, "availbl": 222, "hydra": 222}, "objects": {"nidl.experiment": [[5, 0, 1, "", "fetch_experiment"], [6, 0, 1, "", "filter_config"], [7, 0, 1, "", "get_env"], [8, 0, 1, "", "load_interface"], [9, 0, 1, "", "update_params"]], "nidl.utils": [[11, 1, 1, "", "Bunch"], [12, 1, 1, "", "Weights"], [25, 0, 1, "", "print_multicolor"]], "nidl.utils.Weights": [[12, 2, 1, "", "hf_download"], [12, 2, 1, "", "hub_split"], [12, 2, 1, "", "load_pretrained"], [12, 2, 1, "", "ns_download"]], "nidl.utils.bunch": [[13, 1, 1, "", "Bunch"]], "nidl.utils.color": [[14, 1, 1, "", "Colored"], [15, 0, 1, "", "attr"], [16, 0, 1, "", "fg"], [17, 0, 1, "", "hex"], [18, 0, 1, "", "print_multicolor"], [19, 0, 1, "", "print_result"], [20, 0, 1, "", "print_subtitle"], [21, 0, 1, "", "print_title"], [22, 0, 1, "", "print_warning"], [23, 0, 1, "", "random_stylize"], [24, 0, 1, "", "stylize"]], "nidl.utils.color.Colored": [[14, 2, 1, "", "attribute"], [14, 2, 1, "", "background"], [14, 2, 1, "", "foreground"], [14, 2, 1, "", "reverse_dict"]], "nidl.utils.weights": [[26, 1, 1, "", "Weights"]], "nidl.utils.weights.Weights": [[26, 2, 1, "", "hf_download"], [26, 2, 1, "", "hub_split"], [26, 2, 1, "", "load_pretrained"], [26, 2, 1, "", "ns_download"]], "surfify.augmentation": [[30, 1, 1, "", "BaseTransformer"], [31, 1, 1, "", "GroupMixUp"], [32, 1, 1, "", "HemiMixUp"], [33, 1, 1, "", "SurfBlur"], [34, 1, 1, "", "SurfCutOut"], [35, 1, 1, "", "SurfNoise"], [36, 1, 1, "", "SurfRotation"], [37, 1, 1, "", "Transformer"], [38, 0, 1, "", "apply_chained_transforms"], [43, 0, 1, "", "interval"], [47, 0, 1, "", "multichannel_augmentation"]], "surfify.augmentation.BaseTransformer": [[30, 1, 1, "", "Transform"], [30, 2, 1, "", "register"]], "surfify.augmentation.BaseTransformer.Transform": [[30, 3, 1, "", "probability"], [30, 3, 1, "", "randomize_per_channel"], [30, 3, 1, "", "transform"]], "surfify.augmentation.GroupMixUp": [[31, 2, 1, "", "groupby"], [31, 2, 1, "", "run"]], "surfify.augmentation.HemiMixUp": [[32, 2, 1, "", "run"]], "surfify.augmentation.SurfBlur": [[33, 2, 1, "", "run"]], "surfify.augmentation.SurfCutOut": [[34, 2, 1, "", "run"]], "surfify.augmentation.SurfNoise": [[35, 2, 1, "", "run"]], "surfify.augmentation.SurfRotation": [[36, 2, 1, "", "run"]], "surfify.augmentation.base": [[39, 1, 1, "", "SurfBlur"], [40, 1, 1, "", "SurfCutOut"], [41, 1, 1, "", "SurfNoise"], [42, 1, 1, "", "SurfRotation"]], "surfify.augmentation.base.SurfBlur": [[39, 2, 1, "", "run"]], "surfify.augmentation.base.SurfCutOut": [[40, 2, 1, "", "run"]], "surfify.augmentation.base.SurfNoise": [[41, 2, 1, "", "run"]], "surfify.augmentation.base.SurfRotation": [[42, 2, 1, "", "run"]], "surfify.augmentation.mixup": [[44, 1, 1, "", "GroupMixUp"], [45, 1, 1, "", "HemiMixUp"], [46, 1, 1, "", "MixUpAugmentation"]], "surfify.augmentation.mixup.GroupMixUp": [[44, 2, 1, "", "groupby"], [44, 2, 1, "", "run"]], "surfify.augmentation.mixup.HemiMixUp": [[45, 2, 1, "", "run"]], "surfify.augmentation.mixup.MixUpAugmentation": [[46, 2, 1, "", "rand_mask"]], "surfify.augmentation.utils": [[48, 1, 1, "", "BaseTransformer"], [49, 1, 1, "", "RandomAugmentation"], [50, 1, 1, "", "Transformer"], [51, 0, 1, "", "apply_chained_transforms"], [52, 0, 1, "", "interval"], [53, 0, 1, "", "listify"], [54, 0, 1, "", "multichannel_augmentation"]], "surfify.augmentation.utils.BaseTransformer": [[48, 1, 1, "", "Transform"], [48, 2, 1, "", "register"]], "surfify.augmentation.utils.BaseTransformer.Transform": [[48, 3, 1, "", "probability"], [48, 3, 1, "", "randomize_per_channel"], [48, 3, 1, "", "transform"]], "surfify.augmentation.utils.RandomAugmentation": [[49, 1, 1, "", "Interval"]], "surfify.augmentation.utils.RandomAugmentation.Interval": [[49, 3, 1, "", "dtype"], [49, 3, 1, "", "high"], [49, 3, 1, "", "low"]], "surfify.datasets": [[56, 1, 1, "", "ClassificationDataset"], [57, 1, 1, "", "GenericSurfDataset"], [61, 0, 1, "", "make_classification"]], "surfify.datasets._generic": [[58, 1, 1, "", "GenericSurfDataset"]], "surfify.datasets._samples_generator": [[59, 1, 1, "", "ClassificationDataset"], [60, 0, 1, "", "make_classification"]], "surfify.losses": [[63, 1, 1, "", "SphericalVAELoss"]], "surfify.losses.vae": [[64, 1, 1, "", "SphericalVAELoss"], [65, 0, 1, "", "log_likelihood"]], "surfify.models": [[67, 1, 1, "", "HemiFusionDecoder"], [68, 1, 1, "", "HemiFusionEncoder"], [69, 1, 1, "", "SphericalBase"], [70, 1, 1, "", "SphericalGUNet"], [71, 1, 1, "", "SphericalGVGG"], [72, 1, 1, "", "SphericalGVGG11"], [73, 1, 1, "", "SphericalGVGG11BN"], [74, 1, 1, "", "SphericalGVGG13"], [75, 1, 1, "", "SphericalGVGG13BN"], [76, 1, 1, "", "SphericalGVGG16"], [77, 1, 1, "", "SphericalGVGG16BN"], [78, 1, 1, "", "SphericalGVGG19"], [79, 1, 1, "", "SphericalGVGG19BN"], [80, 1, 1, "", "SphericalHemiFusionDecoder"], [81, 1, 1, "", "SphericalHemiFusionEncoder"], [82, 1, 1, "", "SphericalUNet"], [83, 1, 1, "", "SphericalVAE"], [84, 1, 1, "", "SphericalVGG"], [85, 1, 1, "", "SphericalVGG11"], [86, 1, 1, "", "SphericalVGG11BN"], [87, 1, 1, "", "SphericalVGG13"], [88, 1, 1, "", "SphericalVGG13BN"], [89, 1, 1, "", "SphericalVGG16"], [90, 1, 1, "", "SphericalVGG16BN"], [91, 1, 1, "", "SphericalVGG19"], [92, 1, 1, "", "SphericalVGG19BN"]], "surfify.models.HemiFusionDecoder": [[67, 2, 1, "", "forward"]], "surfify.models.HemiFusionEncoder": [[68, 2, 1, "", "forward"]], "surfify.models.SphericalBase": [[69, 1, 1, "", "Ico"], [69, 2, 1, "", "build_ico_info"]], "surfify.models.SphericalBase.Ico": [[69, 3, 1, "", "conv_neighbor_indices"], [69, 3, 1, "", "down_indices"], [69, 3, 1, "", "neighbor_indices"], [69, 3, 1, "", "order"], [69, 3, 1, "", "triangles"], [69, 3, 1, "", "up_indices"], [69, 3, 1, "", "vertices"]], "surfify.models.SphericalGUNet": [[70, 2, 1, "", "forward"]], "surfify.models.SphericalGVGG": [[71, 2, 1, "", "forward"]], "surfify.models.SphericalHemiFusionDecoder": [[80, 2, 1, "", "forward"]], "surfify.models.SphericalHemiFusionEncoder": [[81, 2, 1, "", "forward"]], "surfify.models.SphericalUNet": [[82, 2, 1, "", "forward"]], "surfify.models.SphericalVAE": [[83, 2, 1, "", "decode"], [83, 2, 1, "", "encode"], [83, 2, 1, "", "forward"], [83, 2, 1, "", "reparameterize"]], "surfify.models.SphericalVGG": [[84, 2, 1, "", "forward"]], "surfify.models.base": [[93, 1, 1, "", "SphericalBase"]], "surfify.models.base.SphericalBase": [[93, 1, 1, "", "Ico"], [93, 2, 1, "", "build_ico_info"]], "surfify.models.base.SphericalBase.Ico": [[93, 3, 1, "", "conv_neighbor_indices"], [93, 3, 1, "", "down_indices"], [93, 3, 1, "", "neighbor_indices"], [93, 3, 1, "", "order"], [93, 3, 1, "", "triangles"], [93, 3, 1, "", "up_indices"], [93, 3, 1, "", "vertices"]], "surfify.models.unet": [[94, 1, 1, "", "DownBlock"], [95, 1, 1, "", "DownGBlock"], [96, 1, 1, "", "GraphicalUNet"], [97, 1, 1, "", "SphericalGUNet"], [98, 1, 1, "", "SphericalUNet"], [99, 1, 1, "", "UpBlock"], [100, 1, 1, "", "UpGBlock"]], "surfify.models.unet.DownBlock": [[94, 2, 1, "", "forward"]], "surfify.models.unet.DownGBlock": [[95, 2, 1, "", "forward"]], "surfify.models.unet.GraphicalUNet": [[96, 2, 1, "", "forward"]], "surfify.models.unet.SphericalGUNet": [[97, 2, 1, "", "forward"]], "surfify.models.unet.SphericalUNet": [[98, 2, 1, "", "forward"]], "surfify.models.unet.UpBlock": [[99, 2, 1, "", "forward"]], "surfify.models.unet.UpGBlock": [[100, 2, 1, "", "forward"]], "surfify.models.vae": [[101, 1, 1, "", "HemiFusionDecoder"], [102, 1, 1, "", "HemiFusionEncoder"], [103, 1, 1, "", "SphericalHemiFusionDecoder"], [104, 1, 1, "", "SphericalHemiFusionEncoder"], [105, 1, 1, "", "SphericalVAE"], [106, 0, 1, "", "compute_output_dim"]], "surfify.models.vae.HemiFusionDecoder": [[101, 2, 1, "", "forward"]], "surfify.models.vae.HemiFusionEncoder": [[102, 2, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionDecoder": [[103, 2, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionEncoder": [[104, 2, 1, "", "forward"]], "surfify.models.vae.SphericalVAE": [[105, 2, 1, "", "decode"], [105, 2, 1, "", "encode"], [105, 2, 1, "", "forward"], [105, 2, 1, "", "reparameterize"]], "surfify.models.vgg": [[107, 1, 1, "", "SphericalGVGG"], [108, 1, 1, "", "SphericalGVGG11"], [109, 1, 1, "", "SphericalGVGG11BN"], [110, 1, 1, "", "SphericalGVGG13"], [111, 1, 1, "", "SphericalGVGG13BN"], [112, 1, 1, "", "SphericalGVGG16"], [113, 1, 1, "", "SphericalGVGG16BN"], [114, 1, 1, "", "SphericalGVGG19"], [115, 1, 1, "", "SphericalGVGG19BN"], [116, 1, 1, "", "SphericalVGG"], [117, 1, 1, "", "SphericalVGG11"], [118, 1, 1, "", "SphericalVGG11BN"], [119, 1, 1, "", "SphericalVGG13"], [120, 1, 1, "", "SphericalVGG13BN"], [121, 1, 1, "", "SphericalVGG16"], [122, 1, 1, "", "SphericalVGG16BN"], [123, 1, 1, "", "SphericalVGG19"], [124, 1, 1, "", "SphericalVGG19BN"], [125, 0, 1, "", "class_factory"]], "surfify.models.vgg.SphericalGVGG": [[107, 2, 1, "", "forward"]], "surfify.models.vgg.SphericalVGG": [[116, 2, 1, "", "forward"]], "surfify.nn": [[127, 1, 1, "", "IcoDiNeConv"], [128, 1, 1, "", "IcoFixIndexUpSample"], [129, 1, 1, "", "IcoGenericUpConv"], [130, 1, 1, "", "IcoMaxIndexUpSample"], [131, 1, 1, "", "IcoPool"], [132, 1, 1, "", "IcoRePaConv"], [133, 1, 1, "", "IcoSpMaConv"], [134, 1, 1, "", "IcoSpMaConvTranspose"], [135, 1, 1, "", "IcoUpConv"], [136, 1, 1, "", "IcoUpSample"]], "surfify.nn.IcoDiNeConv": [[127, 2, 1, "", "forward"]], "surfify.nn.IcoFixIndexUpSample": [[128, 2, 1, "", "forward"]], "surfify.nn.IcoGenericUpConv": [[129, 2, 1, "", "forward"]], "surfify.nn.IcoMaxIndexUpSample": [[130, 2, 1, "", "forward"]], "surfify.nn.IcoPool": [[131, 2, 1, "", "forward"]], "surfify.nn.IcoRePaConv": [[132, 2, 1, "", "forward"]], "surfify.nn.IcoSpMaConv": [[133, 2, 1, "", "forward"]], "surfify.nn.IcoSpMaConvTranspose": [[134, 2, 1, "", "forward"]], "surfify.nn.IcoUpConv": [[135, 2, 1, "", "forward"]], "surfify.nn.IcoUpSample": [[136, 2, 1, "", "forward"]], "surfify.nn.functional": [[137, 0, 1, "", "circular_pad"]], "surfify.nn.modules": [[138, 1, 1, "", "IcoDiNeConv"], [139, 1, 1, "", "IcoFixIndexUpSample"], [140, 1, 1, "", "IcoGenericUpConv"], [141, 1, 1, "", "IcoMaxIndexUpSample"], [142, 1, 1, "", "IcoPool"], [143, 1, 1, "", "IcoRePaConv"], [144, 1, 1, "", "IcoSpMaConv"], [145, 1, 1, "", "IcoSpMaConvTranspose"], [146, 1, 1, "", "IcoUpConv"], [147, 1, 1, "", "IcoUpSample"]], "surfify.nn.modules.IcoDiNeConv": [[138, 2, 1, "", "forward"]], "surfify.nn.modules.IcoFixIndexUpSample": [[139, 2, 1, "", "forward"]], "surfify.nn.modules.IcoGenericUpConv": [[140, 2, 1, "", "forward"]], "surfify.nn.modules.IcoMaxIndexUpSample": [[141, 2, 1, "", "forward"]], "surfify.nn.modules.IcoPool": [[142, 2, 1, "", "forward"]], "surfify.nn.modules.IcoRePaConv": [[143, 2, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConv": [[144, 2, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConvTranspose": [[145, 2, 1, "", "forward"]], "surfify.nn.modules.IcoUpConv": [[146, 2, 1, "", "forward"]], "surfify.nn.modules.IcoUpSample": [[147, 2, 1, "", "forward"]], "surfify.plotting": [[149, 0, 1, "", "plot_trisurf"]], "surfify.plotting.surface": [[150, 0, 1, "", "plot_trisurf"]], "surfify.utils": [[152, 0, 1, "", "cart2sph"], [160, 0, 1, "", "debug_msg"], [161, 0, 1, "", "downsample"], [162, 0, 1, "", "downsample_data"], [163, 0, 1, "", "downsample_ico"], [164, 0, 1, "", "find_neighbors"], [165, 0, 1, "", "find_rotation_interpol_coefs"], [166, 0, 1, "", "get_logger"], [167, 0, 1, "", "get_rectangular_projection"], [168, 0, 1, "", "grid2text"], [169, 0, 1, "", "ico2ico"], [170, 0, 1, "", "icosahedron"], [171, 0, 1, "", "interpolate"], [172, 0, 1, "", "interpolate_data"], [183, 0, 1, "", "min_depth_to_get_n_neighbors"], [184, 0, 1, "", "neighbors"], [185, 0, 1, "", "neighbors_rec"], [186, 0, 1, "", "number_of_ico_vertices"], [187, 0, 1, "", "number_of_neighbors"], [188, 0, 1, "", "order_of_ico_from_vertices"], [189, 0, 1, "", "order_triangles"], [190, 0, 1, "", "patch_tri"], [191, 0, 1, "", "rotate_data"], [218, 0, 1, "", "setup_logging"], [219, 0, 1, "", "sph2cart"], [220, 0, 1, "", "text2grid"], [221, 0, 1, "", "text2ico"]], "surfify.utils.coord": [[153, 0, 1, "", "cart2sph"], [154, 0, 1, "", "find_corresponding_order"], [155, 0, 1, "", "grid2text"], [156, 0, 1, "", "ico2ico"], [157, 0, 1, "", "sph2cart"], [158, 0, 1, "", "text2grid"], [159, 0, 1, "", "text2ico"]], "surfify.utils.io": [[173, 1, 1, "", "HidePrints"], [174, 0, 1, "", "compute_and_store"], [175, 0, 1, "", "decompose_cifti"], [176, 0, 1, "", "read_freesurfer"], [177, 0, 1, "", "read_gifti"], [178, 0, 1, "", "surf_data_from_cifti"], [179, 0, 1, "", "ungzip"], [180, 0, 1, "", "volume_from_cifti"], [181, 0, 1, "", "write_freesurfer"], [182, 0, 1, "", "write_gifti"]], "surfify.utils.sampling": [[192, 0, 1, "", "_patch_tri_iter"], [193, 0, 1, "", "build_freesurfer_ico"], [194, 0, 1, "", "build_fslr_ref"], [195, 0, 1, "", "downsample"], [196, 0, 1, "", "downsample_data"], [197, 0, 1, "", "downsample_ico"], [198, 0, 1, "", "find_neighbors"], [199, 0, 1, "", "find_rotation_interpol_coefs"], [200, 0, 1, "", "get_angle_with_xaxis"], [201, 0, 1, "", "get_rectangular_projection"], [202, 0, 1, "", "icosahedron"], [203, 0, 1, "", "interpolate"], [204, 0, 1, "", "interpolate_data"], [205, 0, 1, "", "middle_point"], [206, 0, 1, "", "min_depth_to_get_n_neighbors"], [207, 0, 1, "", "neighbors"], [208, 0, 1, "", "neighbors_rec"], [209, 0, 1, "", "normalize"], [210, 0, 1, "", "number_of_ico_vertices"], [211, 0, 1, "", "number_of_neighbors"], [212, 0, 1, "", "order_of_ico_from_vertices"], [213, 0, 1, "", "order_triangles"], [214, 0, 1, "", "patch_tri"], [215, 0, 1, "", "rotate_data"], [216, 0, 1, "", "triangles_to_edges"], [217, 0, 1, "", "vertex_adjacency_graph"]]}, "objtypes": {"0": "py:function", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"us": 0, "case": 0, "comput": [1, 223], "time": [1, 223], "api": [2, 4, 10, 27, 28, 29, 55, 62, 66, 126, 148, 151], "document": [2, 4, 10, 27, 28, 29, 55, 62, 66, 126, 148, 151], "nidl": [2, 3, 4, 10, 27], "instal": 3, "stabl": 3, "version": 3, "current": 3, "experi": 4, "util": [10, 29, 151], "weight": 10, "color": 10, "bunch": 10, "search": 27, "surfifi": [28, 29, 55, 62, 66, 126, 148, 151], "augment": 29, "base": [29, 66], "mixup": 29, "dataset": 55, "_gener": 55, "_samples_gener": 55, "loss": 62, "vae": [62, 66], "model": 66, "vgg": 66, "unet": 66, "nn": 126, "function": 126, "modul": 126, "plot": 148, "surfac": 148, "sampl": 151, "coord": 151, "io": 151}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Use Cases": [[0, "use-cases"]], "Computation times": [[1, "computation-times"], [223, "computation-times"]], "API documentation of NIDL": [[2, "api-documentation-of-nidl"]], "Installing nidl": [[3, "installing-nidl"]], "Installing a stable version": [[3, "installing-a-stable-version"]], "Installing the current version": [[3, "installing-the-current-version"]], "API documentation of nidl": [[4, "api-documentation-of-nidl"]], "nidl": [[4, "nidl"]], "nidl.experiment": [[4, "nidl-experiment"]], "API documentation of nidl.utils": [[10, "api-documentation-of-nidl-utils"]], "nidl.utils": [[10, "nidl-utils"]], "nidl.utils.weights": [[10, "id1"]], "nidl.utils.color": [[10, "nidl-utils-color"]], "nidl.utils.bunch": [[10, "id2"]], "Search in API documentation of NIDL": [[27, "search-in-api-documentation-of-nidl"]], "API documentation of surfify": [[28, "api-documentation-of-surfify"]], "surfify": [[28, "surfify"]], "API documentation of surfify.augmentation": [[29, "api-documentation-of-surfify-augmentation"]], "surfify.augmentation": [[29, "surfify-augmentation"]], "surfify.augmentation.base": [[29, "surfify-augmentation-base"]], "surfify.augmentation.mixup": [[29, "surfify-augmentation-mixup"]], "surfify.augmentation.utils": [[29, "surfify-augmentation-utils"]], "API documentation of surfify.datasets": [[55, "api-documentation-of-surfify-datasets"]], "surfify.datasets": [[55, "surfify-datasets"]], "surfify.datasets._generic": [[55, "surfify-datasets-generic"]], "surfify.datasets._samples_generator": [[55, "surfify-datasets-samples-generator"]], "API documentation of surfify.losses": [[62, "api-documentation-of-surfify-losses"]], "surfify.losses": [[62, "surfify-losses"]], "surfify.losses.vae": [[62, "surfify-losses-vae"]], "API documentation of surfify.models": [[66, "api-documentation-of-surfify-models"]], "surfify.models": [[66, "surfify-models"]], "surfify.models.base": [[66, "surfify-models-base"]], "surfify.models.vae": [[66, "surfify-models-vae"]], "surfify.models.vgg": [[66, "surfify-models-vgg"]], "surfify.models.unet": [[66, "surfify-models-unet"]], "API documentation of surfify.nn": [[126, "api-documentation-of-surfify-nn"]], "surfify.nn": [[126, "surfify-nn"]], "surfify.nn.functional": [[126, "surfify-nn-functional"]], "surfify.nn.modules": [[126, "surfify-nn-modules"]], "API documentation of surfify.plotting": [[148, "api-documentation-of-surfify-plotting"]], "surfify.plotting": [[148, "surfify-plotting"]], "surfify.plotting.surface": [[148, "surfify-plotting-surface"]], "API documentation of surfify.utils": [[151, "api-documentation-of-surfify-utils"]], "surfify.utils": [[151, "surfify-utils"]], "surfify.utils.sampling": [[151, "surfify-utils-sampling"]], "surfify.utils.coord": [[151, "surfify-utils-coord"]], "surfify.utils.io": [[151, "surfify-utils-io"]]}, "indexentries": {"fetch_experiment() (in module nidl.experiment)": [[5, "nidl.experiment.fetch_experiment"]], "filter_config() (in module nidl.experiment)": [[6, "nidl.experiment.filter_config"]], "get_env() (in module nidl.experiment)": [[7, "nidl.experiment.get_env"]], "load_interface() (in module nidl.experiment)": [[8, "nidl.experiment.load_interface"]], "update_params() (in module nidl.experiment)": [[9, "nidl.experiment.update_params"]], "bunch (class in nidl.utils)": [[11, "nidl.utils.Bunch"]], "weights (class in nidl.utils)": [[12, "nidl.utils.Weights"]], "hf_download() (nidl.utils.weights class method)": [[12, "nidl.utils.Weights.hf_download"]], "hub_split() (nidl.utils.weights class method)": [[12, "nidl.utils.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights method)": [[12, "nidl.utils.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights class method)": [[12, "nidl.utils.Weights.ns_download"]], "bunch (class in nidl.utils.bunch)": [[13, "nidl.utils.bunch.Bunch"]], "colored (class in nidl.utils.color)": [[14, "nidl.utils.color.Colored"]], "attribute() (nidl.utils.color.colored method)": [[14, "nidl.utils.color.Colored.attribute"]], "background() (nidl.utils.color.colored method)": [[14, "nidl.utils.color.Colored.background"]], "foreground() (nidl.utils.color.colored method)": [[14, "nidl.utils.color.Colored.foreground"]], "reverse_dict() (nidl.utils.color.colored method)": [[14, "nidl.utils.color.Colored.reverse_dict"]], "attr() (in module nidl.utils.color)": [[15, "nidl.utils.color.attr"]], "fg() (in module nidl.utils.color)": [[16, "nidl.utils.color.fg"]], "hex() (in module nidl.utils.color)": [[17, "nidl.utils.color.hex"]], "print_multicolor() (in module nidl.utils.color)": [[18, "nidl.utils.color.print_multicolor"]], "print_result() (in module nidl.utils.color)": [[19, "nidl.utils.color.print_result"]], "print_subtitle() (in module nidl.utils.color)": [[20, "nidl.utils.color.print_subtitle"]], "print_title() (in module nidl.utils.color)": [[21, "nidl.utils.color.print_title"]], "print_warning() (in module nidl.utils.color)": [[22, "nidl.utils.color.print_warning"]], "random_stylize() (in module nidl.utils.color)": [[23, "nidl.utils.color.random_stylize"]], "stylize() (in module nidl.utils.color)": [[24, "nidl.utils.color.stylize"]], "print_multicolor() (in module nidl.utils)": [[25, "nidl.utils.print_multicolor"]], "weights (class in nidl.utils.weights)": [[26, "nidl.utils.weights.Weights"]], "hf_download() (nidl.utils.weights.weights class method)": [[26, "nidl.utils.weights.Weights.hf_download"]], "hub_split() (nidl.utils.weights.weights class method)": [[26, "nidl.utils.weights.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights.weights method)": [[26, "nidl.utils.weights.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights.weights class method)": [[26, "nidl.utils.weights.Weights.ns_download"]], "basetransformer (class in surfify.augmentation)": [[30, "surfify.augmentation.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation)": [[30, "surfify.augmentation.BaseTransformer.Transform"]], "probability (surfify.augmentation.basetransformer.transform attribute)": [[30, "surfify.augmentation.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.basetransformer.transform attribute)": [[30, "surfify.augmentation.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.basetransformer method)": [[30, "surfify.augmentation.BaseTransformer.register"]], "transform (surfify.augmentation.basetransformer.transform attribute)": [[30, "surfify.augmentation.BaseTransformer.Transform.transform"]], "groupmixup (class in surfify.augmentation)": [[31, "surfify.augmentation.GroupMixUp"]], "groupby() (surfify.augmentation.groupmixup class method)": [[31, "surfify.augmentation.GroupMixUp.groupby"]], "run() (surfify.augmentation.groupmixup method)": [[31, "surfify.augmentation.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation)": [[32, "surfify.augmentation.HemiMixUp"]], "run() (surfify.augmentation.hemimixup method)": [[32, "surfify.augmentation.HemiMixUp.run"]], "surfblur (class in surfify.augmentation)": [[33, "surfify.augmentation.SurfBlur"]], "run() (surfify.augmentation.surfblur method)": [[33, "surfify.augmentation.SurfBlur.run"]], "surfcutout (class in surfify.augmentation)": [[34, "surfify.augmentation.SurfCutOut"]], "run() (surfify.augmentation.surfcutout method)": [[34, "surfify.augmentation.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation)": [[35, "surfify.augmentation.SurfNoise"]], "run() (surfify.augmentation.surfnoise method)": [[35, "surfify.augmentation.SurfNoise.run"]], "surfrotation (class in surfify.augmentation)": [[36, "surfify.augmentation.SurfRotation"]], "run() (surfify.augmentation.surfrotation method)": [[36, "surfify.augmentation.SurfRotation.run"]], "transformer (class in surfify.augmentation)": [[37, "surfify.augmentation.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation)": [[38, "surfify.augmentation.apply_chained_transforms"]], "surfblur (class in surfify.augmentation.base)": [[39, "surfify.augmentation.base.SurfBlur"]], "run() (surfify.augmentation.base.surfblur method)": [[39, "surfify.augmentation.base.SurfBlur.run"]], "surfcutout (class in surfify.augmentation.base)": [[40, "surfify.augmentation.base.SurfCutOut"]], "run() (surfify.augmentation.base.surfcutout method)": [[40, "surfify.augmentation.base.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation.base)": [[41, "surfify.augmentation.base.SurfNoise"]], "run() (surfify.augmentation.base.surfnoise method)": [[41, "surfify.augmentation.base.SurfNoise.run"]], "surfrotation (class in surfify.augmentation.base)": [[42, "surfify.augmentation.base.SurfRotation"]], "run() (surfify.augmentation.base.surfrotation method)": [[42, "surfify.augmentation.base.SurfRotation.run"]], "interval() (in module surfify.augmentation)": [[43, "surfify.augmentation.interval"]], "groupmixup (class in surfify.augmentation.mixup)": [[44, "surfify.augmentation.mixup.GroupMixUp"]], "groupby() (surfify.augmentation.mixup.groupmixup class method)": [[44, "surfify.augmentation.mixup.GroupMixUp.groupby"]], "run() (surfify.augmentation.mixup.groupmixup method)": [[44, "surfify.augmentation.mixup.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation.mixup)": [[45, "surfify.augmentation.mixup.HemiMixUp"]], "run() (surfify.augmentation.mixup.hemimixup method)": [[45, "surfify.augmentation.mixup.HemiMixUp.run"]], "mixupaugmentation (class in surfify.augmentation.mixup)": [[46, "surfify.augmentation.mixup.MixUpAugmentation"]], "rand_mask() (surfify.augmentation.mixup.mixupaugmentation method)": [[46, "surfify.augmentation.mixup.MixUpAugmentation.rand_mask"]], "multichannel_augmentation() (in module surfify.augmentation)": [[47, "surfify.augmentation.multichannel_augmentation"]], "basetransformer (class in surfify.augmentation.utils)": [[48, "surfify.augmentation.utils.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation.utils)": [[48, "surfify.augmentation.utils.BaseTransformer.Transform"]], "probability (surfify.augmentation.utils.basetransformer.transform attribute)": [[48, "surfify.augmentation.utils.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.utils.basetransformer.transform attribute)": [[48, "surfify.augmentation.utils.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.utils.basetransformer method)": [[48, "surfify.augmentation.utils.BaseTransformer.register"]], "transform (surfify.augmentation.utils.basetransformer.transform attribute)": [[48, "surfify.augmentation.utils.BaseTransformer.Transform.transform"]], "randomaugmentation (class in surfify.augmentation.utils)": [[49, "surfify.augmentation.utils.RandomAugmentation"]], "randomaugmentation.interval (class in surfify.augmentation.utils)": [[49, "surfify.augmentation.utils.RandomAugmentation.Interval"]], "dtype (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[49, "surfify.augmentation.utils.RandomAugmentation.Interval.dtype"]], "high (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[49, "surfify.augmentation.utils.RandomAugmentation.Interval.high"]], "low (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[49, "surfify.augmentation.utils.RandomAugmentation.Interval.low"]], "transformer (class in surfify.augmentation.utils)": [[50, "surfify.augmentation.utils.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation.utils)": [[51, "surfify.augmentation.utils.apply_chained_transforms"]], "interval() (in module surfify.augmentation.utils)": [[52, "surfify.augmentation.utils.interval"]], "listify() (in module surfify.augmentation.utils)": [[53, "surfify.augmentation.utils.listify"]], "multichannel_augmentation() (in module surfify.augmentation.utils)": [[54, "surfify.augmentation.utils.multichannel_augmentation"]], "classificationdataset (class in surfify.datasets)": [[56, "surfify.datasets.ClassificationDataset"]], "genericsurfdataset (class in surfify.datasets)": [[57, "surfify.datasets.GenericSurfDataset"]], "genericsurfdataset (class in surfify.datasets._generic)": [[58, "surfify.datasets._generic.GenericSurfDataset"]], "classificationdataset (class in surfify.datasets._samples_generator)": [[59, "surfify.datasets._samples_generator.ClassificationDataset"]], "make_classification() (in module surfify.datasets._samples_generator)": [[60, "surfify.datasets._samples_generator.make_classification"]], "make_classification() (in module surfify.datasets)": [[61, "surfify.datasets.make_classification"]], "sphericalvaeloss (class in surfify.losses)": [[63, "surfify.losses.SphericalVAELoss"]], "sphericalvaeloss (class in surfify.losses.vae)": [[64, "surfify.losses.vae.SphericalVAELoss"]], "log_likelihood() (in module surfify.losses.vae)": [[65, "surfify.losses.vae.log_likelihood"]], "hemifusiondecoder (class in surfify.models)": [[67, "surfify.models.HemiFusionDecoder"]], "forward() (surfify.models.hemifusiondecoder method)": [[67, "surfify.models.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models)": [[68, "surfify.models.HemiFusionEncoder"]], "forward() (surfify.models.hemifusionencoder method)": [[68, "surfify.models.HemiFusionEncoder.forward"]], "sphericalbase (class in surfify.models)": [[69, "surfify.models.SphericalBase"]], "sphericalbase.ico (class in surfify.models)": [[69, "surfify.models.SphericalBase.Ico"]], "build_ico_info() (surfify.models.sphericalbase class method)": [[69, "surfify.models.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.order"]], "triangles (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.sphericalbase.ico attribute)": [[69, "surfify.models.SphericalBase.Ico.vertices"]], "sphericalgunet (class in surfify.models)": [[70, "surfify.models.SphericalGUNet"]], "forward() (surfify.models.sphericalgunet method)": [[70, "surfify.models.SphericalGUNet.forward"]], "sphericalgvgg (class in surfify.models)": [[71, "surfify.models.SphericalGVGG"]], "forward() (surfify.models.sphericalgvgg method)": [[71, "surfify.models.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models)": [[72, "surfify.models.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models)": [[73, "surfify.models.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models)": [[74, "surfify.models.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models)": [[75, "surfify.models.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models)": [[76, "surfify.models.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models)": [[77, "surfify.models.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models)": [[78, "surfify.models.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models)": [[79, "surfify.models.SphericalGVGG19BN"]], "sphericalhemifusiondecoder (class in surfify.models)": [[80, "surfify.models.SphericalHemiFusionDecoder"]], "forward() (surfify.models.sphericalhemifusiondecoder method)": [[80, "surfify.models.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models)": [[81, "surfify.models.SphericalHemiFusionEncoder"]], "forward() (surfify.models.sphericalhemifusionencoder method)": [[81, "surfify.models.SphericalHemiFusionEncoder.forward"]], "sphericalunet (class in surfify.models)": [[82, "surfify.models.SphericalUNet"]], "forward() (surfify.models.sphericalunet method)": [[82, "surfify.models.SphericalUNet.forward"]], "sphericalvae (class in surfify.models)": [[83, "surfify.models.SphericalVAE"]], "decode() (surfify.models.sphericalvae method)": [[83, "surfify.models.SphericalVAE.decode"]], "encode() (surfify.models.sphericalvae method)": [[83, "surfify.models.SphericalVAE.encode"]], "forward() (surfify.models.sphericalvae method)": [[83, "surfify.models.SphericalVAE.forward"]], "reparameterize() (surfify.models.sphericalvae method)": [[83, "surfify.models.SphericalVAE.reparameterize"]], "sphericalvgg (class in surfify.models)": [[84, "surfify.models.SphericalVGG"]], "forward() (surfify.models.sphericalvgg method)": [[84, "surfify.models.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models)": [[85, "surfify.models.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models)": [[86, "surfify.models.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models)": [[87, "surfify.models.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models)": [[88, "surfify.models.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models)": [[89, "surfify.models.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models)": [[90, "surfify.models.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models)": [[91, "surfify.models.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models)": [[92, "surfify.models.SphericalVGG19BN"]], "sphericalbase (class in surfify.models.base)": [[93, "surfify.models.base.SphericalBase"]], "sphericalbase.ico (class in surfify.models.base)": [[93, "surfify.models.base.SphericalBase.Ico"]], "build_ico_info() (surfify.models.base.sphericalbase class method)": [[93, "surfify.models.base.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.order"]], "triangles (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.base.sphericalbase.ico attribute)": [[93, "surfify.models.base.SphericalBase.Ico.vertices"]], "downblock (class in surfify.models.unet)": [[94, "surfify.models.unet.DownBlock"]], "forward() (surfify.models.unet.downblock method)": [[94, "surfify.models.unet.DownBlock.forward"]], "downgblock (class in surfify.models.unet)": [[95, "surfify.models.unet.DownGBlock"]], "forward() (surfify.models.unet.downgblock method)": [[95, "surfify.models.unet.DownGBlock.forward"]], "graphicalunet (class in surfify.models.unet)": [[96, "surfify.models.unet.GraphicalUNet"]], "forward() (surfify.models.unet.graphicalunet method)": [[96, "surfify.models.unet.GraphicalUNet.forward"]], "sphericalgunet (class in surfify.models.unet)": [[97, "surfify.models.unet.SphericalGUNet"]], "forward() (surfify.models.unet.sphericalgunet method)": [[97, "surfify.models.unet.SphericalGUNet.forward"]], "sphericalunet (class in surfify.models.unet)": [[98, "surfify.models.unet.SphericalUNet"]], "forward() (surfify.models.unet.sphericalunet method)": [[98, "surfify.models.unet.SphericalUNet.forward"]], "upblock (class in surfify.models.unet)": [[99, "surfify.models.unet.UpBlock"]], "forward() (surfify.models.unet.upblock method)": [[99, "surfify.models.unet.UpBlock.forward"]], "upgblock (class in surfify.models.unet)": [[100, "surfify.models.unet.UpGBlock"]], "forward() (surfify.models.unet.upgblock method)": [[100, "surfify.models.unet.UpGBlock.forward"]], "hemifusiondecoder (class in surfify.models.vae)": [[101, "surfify.models.vae.HemiFusionDecoder"]], "forward() (surfify.models.vae.hemifusiondecoder method)": [[101, "surfify.models.vae.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models.vae)": [[102, "surfify.models.vae.HemiFusionEncoder"]], "forward() (surfify.models.vae.hemifusionencoder method)": [[102, "surfify.models.vae.HemiFusionEncoder.forward"]], "sphericalhemifusiondecoder (class in surfify.models.vae)": [[103, "surfify.models.vae.SphericalHemiFusionDecoder"]], "forward() (surfify.models.vae.sphericalhemifusiondecoder method)": [[103, "surfify.models.vae.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models.vae)": [[104, "surfify.models.vae.SphericalHemiFusionEncoder"]], "forward() (surfify.models.vae.sphericalhemifusionencoder method)": [[104, "surfify.models.vae.SphericalHemiFusionEncoder.forward"]], "sphericalvae (class in surfify.models.vae)": [[105, "surfify.models.vae.SphericalVAE"]], "decode() (surfify.models.vae.sphericalvae method)": [[105, "surfify.models.vae.SphericalVAE.decode"]], "encode() (surfify.models.vae.sphericalvae method)": [[105, "surfify.models.vae.SphericalVAE.encode"]], "forward() (surfify.models.vae.sphericalvae method)": [[105, "surfify.models.vae.SphericalVAE.forward"]], "reparameterize() (surfify.models.vae.sphericalvae method)": [[105, "surfify.models.vae.SphericalVAE.reparameterize"]], "compute_output_dim() (in module surfify.models.vae)": [[106, "surfify.models.vae.compute_output_dim"]], "sphericalgvgg (class in surfify.models.vgg)": [[107, "surfify.models.vgg.SphericalGVGG"]], "forward() (surfify.models.vgg.sphericalgvgg method)": [[107, "surfify.models.vgg.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models.vgg)": [[108, "surfify.models.vgg.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models.vgg)": [[109, "surfify.models.vgg.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models.vgg)": [[110, "surfify.models.vgg.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models.vgg)": [[111, "surfify.models.vgg.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models.vgg)": [[112, "surfify.models.vgg.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models.vgg)": [[113, "surfify.models.vgg.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models.vgg)": [[114, "surfify.models.vgg.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models.vgg)": [[115, "surfify.models.vgg.SphericalGVGG19BN"]], "sphericalvgg (class in surfify.models.vgg)": [[116, "surfify.models.vgg.SphericalVGG"]], "forward() (surfify.models.vgg.sphericalvgg method)": [[116, "surfify.models.vgg.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models.vgg)": [[117, "surfify.models.vgg.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models.vgg)": [[118, "surfify.models.vgg.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models.vgg)": [[119, "surfify.models.vgg.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models.vgg)": [[120, "surfify.models.vgg.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models.vgg)": [[121, "surfify.models.vgg.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models.vgg)": [[122, "surfify.models.vgg.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models.vgg)": [[123, "surfify.models.vgg.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models.vgg)": [[124, "surfify.models.vgg.SphericalVGG19BN"]], "class_factory() (in module surfify.models.vgg)": [[125, "surfify.models.vgg.class_factory"]], "icodineconv (class in surfify.nn)": [[127, "surfify.nn.IcoDiNeConv"]], "forward() (surfify.nn.icodineconv method)": [[127, "surfify.nn.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn)": [[128, "surfify.nn.IcoFixIndexUpSample"]], "forward() (surfify.nn.icofixindexupsample method)": [[128, "surfify.nn.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn)": [[129, "surfify.nn.IcoGenericUpConv"]], "forward() (surfify.nn.icogenericupconv method)": [[129, "surfify.nn.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn)": [[130, "surfify.nn.IcoMaxIndexUpSample"]], "forward() (surfify.nn.icomaxindexupsample method)": [[130, "surfify.nn.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn)": [[131, "surfify.nn.IcoPool"]], "forward() (surfify.nn.icopool method)": [[131, "surfify.nn.IcoPool.forward"]], "icorepaconv (class in surfify.nn)": [[132, "surfify.nn.IcoRePaConv"]], "forward() (surfify.nn.icorepaconv method)": [[132, "surfify.nn.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn)": [[133, "surfify.nn.IcoSpMaConv"]], "forward() (surfify.nn.icospmaconv method)": [[133, "surfify.nn.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn)": [[134, "surfify.nn.IcoSpMaConvTranspose"]], "forward() (surfify.nn.icospmaconvtranspose method)": [[134, "surfify.nn.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn)": [[135, "surfify.nn.IcoUpConv"]], "forward() (surfify.nn.icoupconv method)": [[135, "surfify.nn.IcoUpConv.forward"]], "icoupsample (class in surfify.nn)": [[136, "surfify.nn.IcoUpSample"]], "forward() (surfify.nn.icoupsample method)": [[136, "surfify.nn.IcoUpSample.forward"]], "circular_pad() (in module surfify.nn.functional)": [[137, "surfify.nn.functional.circular_pad"]], "icodineconv (class in surfify.nn.modules)": [[138, "surfify.nn.modules.IcoDiNeConv"]], "forward() (surfify.nn.modules.icodineconv method)": [[138, "surfify.nn.modules.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn.modules)": [[139, "surfify.nn.modules.IcoFixIndexUpSample"]], "forward() (surfify.nn.modules.icofixindexupsample method)": [[139, "surfify.nn.modules.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn.modules)": [[140, "surfify.nn.modules.IcoGenericUpConv"]], "forward() (surfify.nn.modules.icogenericupconv method)": [[140, "surfify.nn.modules.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn.modules)": [[141, "surfify.nn.modules.IcoMaxIndexUpSample"]], "forward() (surfify.nn.modules.icomaxindexupsample method)": [[141, "surfify.nn.modules.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn.modules)": [[142, "surfify.nn.modules.IcoPool"]], "forward() (surfify.nn.modules.icopool method)": [[142, "surfify.nn.modules.IcoPool.forward"]], "icorepaconv (class in surfify.nn.modules)": [[143, "surfify.nn.modules.IcoRePaConv"]], "forward() (surfify.nn.modules.icorepaconv method)": [[143, "surfify.nn.modules.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn.modules)": [[144, "surfify.nn.modules.IcoSpMaConv"]], "forward() (surfify.nn.modules.icospmaconv method)": [[144, "surfify.nn.modules.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn.modules)": [[145, "surfify.nn.modules.IcoSpMaConvTranspose"]], "forward() (surfify.nn.modules.icospmaconvtranspose method)": [[145, "surfify.nn.modules.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn.modules)": [[146, "surfify.nn.modules.IcoUpConv"]], "forward() (surfify.nn.modules.icoupconv method)": [[146, "surfify.nn.modules.IcoUpConv.forward"]], "icoupsample (class in surfify.nn.modules)": [[147, "surfify.nn.modules.IcoUpSample"]], "forward() (surfify.nn.modules.icoupsample method)": [[147, "surfify.nn.modules.IcoUpSample.forward"]], "plot_trisurf() (in module surfify.plotting)": [[149, "surfify.plotting.plot_trisurf"]], "plot_trisurf() (in module surfify.plotting.surface)": [[150, "surfify.plotting.surface.plot_trisurf"]], "cart2sph() (in module surfify.utils)": [[152, "surfify.utils.cart2sph"]], "cart2sph() (in module surfify.utils.coord)": [[153, "surfify.utils.coord.cart2sph"]], "find_corresponding_order() (in module surfify.utils.coord)": [[154, "surfify.utils.coord.find_corresponding_order"]], "grid2text() (in module surfify.utils.coord)": [[155, "surfify.utils.coord.grid2text"]], "ico2ico() (in module surfify.utils.coord)": [[156, "surfify.utils.coord.ico2ico"]], "sph2cart() (in module surfify.utils.coord)": [[157, "surfify.utils.coord.sph2cart"]], "text2grid() (in module surfify.utils.coord)": [[158, "surfify.utils.coord.text2grid"]], "text2ico() (in module surfify.utils.coord)": [[159, "surfify.utils.coord.text2ico"]], "debug_msg() (in module surfify.utils)": [[160, "surfify.utils.debug_msg"]], "downsample() (in module surfify.utils)": [[161, "surfify.utils.downsample"]], "downsample_data() (in module surfify.utils)": [[162, "surfify.utils.downsample_data"]], "downsample_ico() (in module surfify.utils)": [[163, "surfify.utils.downsample_ico"]], "find_neighbors() (in module surfify.utils)": [[164, "surfify.utils.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils)": [[165, "surfify.utils.find_rotation_interpol_coefs"]], "get_logger() (in module surfify.utils)": [[166, "surfify.utils.get_logger"]], "get_rectangular_projection() (in module surfify.utils)": [[167, "surfify.utils.get_rectangular_projection"]], "grid2text() (in module surfify.utils)": [[168, "surfify.utils.grid2text"]], "ico2ico() (in module surfify.utils)": [[169, "surfify.utils.ico2ico"]], "icosahedron() (in module surfify.utils)": [[170, "surfify.utils.icosahedron"]], "interpolate() (in module surfify.utils)": [[171, "surfify.utils.interpolate"]], "interpolate_data() (in module surfify.utils)": [[172, "surfify.utils.interpolate_data"]], "hideprints (class in surfify.utils.io)": [[173, "surfify.utils.io.HidePrints"]], "compute_and_store() (in module surfify.utils.io)": [[174, "surfify.utils.io.compute_and_store"]], "decompose_cifti() (in module surfify.utils.io)": [[175, "surfify.utils.io.decompose_cifti"]], "read_freesurfer() (in module surfify.utils.io)": [[176, "surfify.utils.io.read_freesurfer"]], "read_gifti() (in module surfify.utils.io)": [[177, "surfify.utils.io.read_gifti"]], "surf_data_from_cifti() (in module surfify.utils.io)": [[178, "surfify.utils.io.surf_data_from_cifti"]], "ungzip() (in module surfify.utils.io)": [[179, "surfify.utils.io.ungzip"]], "volume_from_cifti() (in module surfify.utils.io)": [[180, "surfify.utils.io.volume_from_cifti"]], "write_freesurfer() (in module surfify.utils.io)": [[181, "surfify.utils.io.write_freesurfer"]], "write_gifti() (in module surfify.utils.io)": [[182, "surfify.utils.io.write_gifti"]], "min_depth_to_get_n_neighbors() (in module surfify.utils)": [[183, "surfify.utils.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils)": [[184, "surfify.utils.neighbors"]], "neighbors_rec() (in module surfify.utils)": [[185, "surfify.utils.neighbors_rec"]], "number_of_ico_vertices() (in module surfify.utils)": [[186, "surfify.utils.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils)": [[187, "surfify.utils.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils)": [[188, "surfify.utils.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils)": [[189, "surfify.utils.order_triangles"]], "patch_tri() (in module surfify.utils)": [[190, "surfify.utils.patch_tri"]], "rotate_data() (in module surfify.utils)": [[191, "surfify.utils.rotate_data"]], "_patch_tri_iter() (in module surfify.utils.sampling)": [[192, "surfify.utils.sampling._patch_tri_iter"]], "build_freesurfer_ico() (in module surfify.utils.sampling)": [[193, "surfify.utils.sampling.build_freesurfer_ico"]], "build_fslr_ref() (in module surfify.utils.sampling)": [[194, "surfify.utils.sampling.build_fslr_ref"]], "downsample() (in module surfify.utils.sampling)": [[195, "surfify.utils.sampling.downsample"]], "downsample_data() (in module surfify.utils.sampling)": [[196, "surfify.utils.sampling.downsample_data"]], "downsample_ico() (in module surfify.utils.sampling)": [[197, "surfify.utils.sampling.downsample_ico"]], "find_neighbors() (in module surfify.utils.sampling)": [[198, "surfify.utils.sampling.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils.sampling)": [[199, "surfify.utils.sampling.find_rotation_interpol_coefs"]], "get_angle_with_xaxis() (in module surfify.utils.sampling)": [[200, "surfify.utils.sampling.get_angle_with_xaxis"]], "get_rectangular_projection() (in module surfify.utils.sampling)": [[201, "surfify.utils.sampling.get_rectangular_projection"]], "icosahedron() (in module surfify.utils.sampling)": [[202, "surfify.utils.sampling.icosahedron"]], "interpolate() (in module surfify.utils.sampling)": [[203, "surfify.utils.sampling.interpolate"]], "interpolate_data() (in module surfify.utils.sampling)": [[204, "surfify.utils.sampling.interpolate_data"]], "middle_point() (in module surfify.utils.sampling)": [[205, "surfify.utils.sampling.middle_point"]], "min_depth_to_get_n_neighbors() (in module surfify.utils.sampling)": [[206, "surfify.utils.sampling.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils.sampling)": [[207, "surfify.utils.sampling.neighbors"]], "neighbors_rec() (in module surfify.utils.sampling)": [[208, "surfify.utils.sampling.neighbors_rec"]], "normalize() (in module surfify.utils.sampling)": [[209, "surfify.utils.sampling.normalize"]], "number_of_ico_vertices() (in module surfify.utils.sampling)": [[210, "surfify.utils.sampling.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils.sampling)": [[211, "surfify.utils.sampling.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils.sampling)": [[212, "surfify.utils.sampling.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils.sampling)": [[213, "surfify.utils.sampling.order_triangles"]], "patch_tri() (in module surfify.utils.sampling)": [[214, "surfify.utils.sampling.patch_tri"]], "rotate_data() (in module surfify.utils.sampling)": [[215, "surfify.utils.sampling.rotate_data"]], "triangles_to_edges() (in module surfify.utils.sampling)": [[216, "surfify.utils.sampling.triangles_to_edges"]], "vertex_adjacency_graph() (in module surfify.utils.sampling)": [[217, "surfify.utils.sampling.vertex_adjacency_graph"]], "setup_logging() (in module surfify.utils)": [[218, "surfify.utils.setup_logging"]], "sph2cart() (in module surfify.utils)": [[219, "surfify.utils.sph2cart"]], "text2grid() (in module surfify.utils)": [[220, "surfify.utils.text2grid"]], "text2ico() (in module surfify.utils)": [[221, "surfify.utils.text2ico"]]}})
Search.setIndex({"docnames": ["auto_gallery/index", "auto_gallery/sg_execution_times", "auto_gallery/simclr_stl10", "auto_gallery/surfify/index", "auto_gallery/surfify/plot_augmentation", "auto_gallery/surfify/plot_match_icosahedron", "auto_gallery/surfify/plot_project_texture", "auto_gallery/surfify/plot_spherical_neighbors", "auto_gallery/surfify/plot_unet_segmentation", "auto_gallery/surfify/sg_execution_times", "generated/documentation", "generated/installation", "generated/nidl", "generated/nidl.estimators", "generated/nidl.estimators.BaseEstimator", "generated/nidl.estimators.ClassifierMixin", "generated/nidl.estimators.ClusterMixin", "generated/nidl.estimators.RegressorMixin", "generated/nidl.estimators.TransformerMixin", "generated/nidl.estimators.base.BaseEstimator", "generated/nidl.estimators.base.ClassifierMixin", "generated/nidl.estimators.base.ClusterMixin", "generated/nidl.estimators.base.RegressorMixin", "generated/nidl.estimators.base.TransformerMixin", "generated/nidl.estimators.linear", "generated/nidl.estimators.linear.LogisticRegression", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression", "generated/nidl.estimators.ssl", "generated/nidl.estimators.ssl.SimCLR", "generated/nidl.estimators.ssl.simclr.SimCLR", "generated/nidl.experiment.fetch_experiment", "generated/nidl.experiment.filter_config", "generated/nidl.experiment.get_env", "generated/nidl.experiment.load_interface", "generated/nidl.experiment.update_params", "generated/nidl.utils", "generated/nidl.utils.Bunch", "generated/nidl.utils.Weights", "generated/nidl.utils.bunch.Bunch", "generated/nidl.utils.color.Colored", "generated/nidl.utils.color.attr", "generated/nidl.utils.color.fg", "generated/nidl.utils.color.hex", "generated/nidl.utils.color.print_multicolor", "generated/nidl.utils.color.print_result", "generated/nidl.utils.color.print_subtitle", "generated/nidl.utils.color.print_title", "generated/nidl.utils.color.print_warning", "generated/nidl.utils.color.random_stylize", "generated/nidl.utils.color.stylize", "generated/nidl.utils.print_multicolor", "generated/nidl.utils.validation._AvailableIfDescriptor", "generated/nidl.utils.validation._estimator_is", "generated/nidl.utils.validation.available_if", "generated/nidl.utils.validation.check_is_fitted", "generated/nidl.utils.weights.Weights", "generated/search", "generated/surfify", "generated/surfify.augmentation", "generated/surfify.augmentation.BaseTransformer", "generated/surfify.augmentation.GroupMixUp", "generated/surfify.augmentation.HemiMixUp", "generated/surfify.augmentation.SurfBlur", "generated/surfify.augmentation.SurfCutOut", "generated/surfify.augmentation.SurfNoise", "generated/surfify.augmentation.SurfRotation", "generated/surfify.augmentation.Transformer", "generated/surfify.augmentation.apply_chained_transforms", "generated/surfify.augmentation.base.SurfBlur", "generated/surfify.augmentation.base.SurfCutOut", "generated/surfify.augmentation.base.SurfNoise", "generated/surfify.augmentation.base.SurfRotation", "generated/surfify.augmentation.interval", "generated/surfify.augmentation.mixup.GroupMixUp", "generated/surfify.augmentation.mixup.HemiMixUp", "generated/surfify.augmentation.mixup.MixUpAugmentation", "generated/surfify.augmentation.multichannel_augmentation", "generated/surfify.augmentation.utils.BaseTransformer", "generated/surfify.augmentation.utils.RandomAugmentation", "generated/surfify.augmentation.utils.Transformer", "generated/surfify.augmentation.utils.apply_chained_transforms", "generated/surfify.augmentation.utils.interval", "generated/surfify.augmentation.utils.listify", "generated/surfify.augmentation.utils.multichannel_augmentation", "generated/surfify.datasets", "generated/surfify.datasets.ClassificationDataset", "generated/surfify.datasets.GenericSurfDataset", "generated/surfify.datasets._generic.GenericSurfDataset", "generated/surfify.datasets._samples_generator.ClassificationDataset", "generated/surfify.datasets._samples_generator.make_classification", "generated/surfify.datasets.make_classification", "generated/surfify.losses", "generated/surfify.losses.SphericalVAELoss", "generated/surfify.losses.vae.SphericalVAELoss", "generated/surfify.losses.vae.log_likelihood", "generated/surfify.models", "generated/surfify.models.HemiFusionDecoder", "generated/surfify.models.HemiFusionEncoder", "generated/surfify.models.SphericalBase", "generated/surfify.models.SphericalGUNet", "generated/surfify.models.SphericalGVGG", "generated/surfify.models.SphericalGVGG11", "generated/surfify.models.SphericalGVGG11BN", "generated/surfify.models.SphericalGVGG13", "generated/surfify.models.SphericalGVGG13BN", "generated/surfify.models.SphericalGVGG16", "generated/surfify.models.SphericalGVGG16BN", "generated/surfify.models.SphericalGVGG19", "generated/surfify.models.SphericalGVGG19BN", "generated/surfify.models.SphericalHemiFusionDecoder", "generated/surfify.models.SphericalHemiFusionEncoder", "generated/surfify.models.SphericalUNet", "generated/surfify.models.SphericalVAE", "generated/surfify.models.SphericalVGG", "generated/surfify.models.SphericalVGG11", "generated/surfify.models.SphericalVGG11BN", "generated/surfify.models.SphericalVGG13", "generated/surfify.models.SphericalVGG13BN", "generated/surfify.models.SphericalVGG16", "generated/surfify.models.SphericalVGG16BN", "generated/surfify.models.SphericalVGG19", "generated/surfify.models.SphericalVGG19BN", "generated/surfify.models.base.SphericalBase", "generated/surfify.models.unet.DownBlock", "generated/surfify.models.unet.DownGBlock", "generated/surfify.models.unet.GraphicalUNet", "generated/surfify.models.unet.SphericalGUNet", "generated/surfify.models.unet.SphericalUNet", "generated/surfify.models.unet.UpBlock", "generated/surfify.models.unet.UpGBlock", "generated/surfify.models.vae.HemiFusionDecoder", "generated/surfify.models.vae.HemiFusionEncoder", "generated/surfify.models.vae.SphericalHemiFusionDecoder", "generated/surfify.models.vae.SphericalHemiFusionEncoder", "generated/surfify.models.vae.SphericalVAE", "generated/surfify.models.vae.compute_output_dim", "generated/surfify.models.vgg.SphericalGVGG", "generated/surfify.models.vgg.SphericalGVGG11", "generated/surfify.models.vgg.SphericalGVGG11BN", "generated/surfify.models.vgg.SphericalGVGG13", "generated/surfify.models.vgg.SphericalGVGG13BN", "generated/surfify.models.vgg.SphericalGVGG16", "generated/surfify.models.vgg.SphericalGVGG16BN", "generated/surfify.models.vgg.SphericalGVGG19", "generated/surfify.models.vgg.SphericalGVGG19BN", "generated/surfify.models.vgg.SphericalVGG", "generated/surfify.models.vgg.SphericalVGG11", "generated/surfify.models.vgg.SphericalVGG11BN", "generated/surfify.models.vgg.SphericalVGG13", "generated/surfify.models.vgg.SphericalVGG13BN", "generated/surfify.models.vgg.SphericalVGG16", "generated/surfify.models.vgg.SphericalVGG16BN", "generated/surfify.models.vgg.SphericalVGG19", "generated/surfify.models.vgg.SphericalVGG19BN", "generated/surfify.models.vgg.class_factory", "generated/surfify.nn", "generated/surfify.nn.IcoDiNeConv", "generated/surfify.nn.IcoFixIndexUpSample", "generated/surfify.nn.IcoGenericUpConv", "generated/surfify.nn.IcoMaxIndexUpSample", "generated/surfify.nn.IcoPool", "generated/surfify.nn.IcoRePaConv", "generated/surfify.nn.IcoSpMaConv", "generated/surfify.nn.IcoSpMaConvTranspose", "generated/surfify.nn.IcoUpConv", "generated/surfify.nn.IcoUpSample", "generated/surfify.nn.functional.circular_pad", "generated/surfify.nn.modules.IcoDiNeConv", "generated/surfify.nn.modules.IcoFixIndexUpSample", "generated/surfify.nn.modules.IcoGenericUpConv", "generated/surfify.nn.modules.IcoMaxIndexUpSample", "generated/surfify.nn.modules.IcoPool", "generated/surfify.nn.modules.IcoRePaConv", "generated/surfify.nn.modules.IcoSpMaConv", "generated/surfify.nn.modules.IcoSpMaConvTranspose", "generated/surfify.nn.modules.IcoUpConv", "generated/surfify.nn.modules.IcoUpSample", "generated/surfify.plotting", "generated/surfify.plotting.plot_trisurf", "generated/surfify.plotting.surface.plot_trisurf", "generated/surfify.utils", "generated/surfify.utils.cart2sph", "generated/surfify.utils.coord.cart2sph", "generated/surfify.utils.coord.find_corresponding_order", "generated/surfify.utils.coord.grid2text", "generated/surfify.utils.coord.ico2ico", "generated/surfify.utils.coord.sph2cart", "generated/surfify.utils.coord.text2grid", "generated/surfify.utils.coord.text2ico", "generated/surfify.utils.debug_msg", "generated/surfify.utils.downsample", "generated/surfify.utils.downsample_data", "generated/surfify.utils.downsample_ico", "generated/surfify.utils.find_neighbors", "generated/surfify.utils.find_rotation_interpol_coefs", "generated/surfify.utils.get_logger", "generated/surfify.utils.get_rectangular_projection", "generated/surfify.utils.grid2text", "generated/surfify.utils.ico2ico", "generated/surfify.utils.icosahedron", "generated/surfify.utils.interpolate", "generated/surfify.utils.interpolate_data", "generated/surfify.utils.io.HidePrints", "generated/surfify.utils.io.compute_and_store", "generated/surfify.utils.io.decompose_cifti", "generated/surfify.utils.io.read_freesurfer", "generated/surfify.utils.io.read_gifti", "generated/surfify.utils.io.surf_data_from_cifti", "generated/surfify.utils.io.ungzip", "generated/surfify.utils.io.volume_from_cifti", "generated/surfify.utils.io.write_freesurfer", "generated/surfify.utils.io.write_gifti", "generated/surfify.utils.min_depth_to_get_n_neighbors", "generated/surfify.utils.neighbors", "generated/surfify.utils.neighbors_rec", "generated/surfify.utils.number_of_ico_vertices", "generated/surfify.utils.number_of_neighbors", "generated/surfify.utils.order_of_ico_from_vertices", "generated/surfify.utils.order_triangles", "generated/surfify.utils.patch_tri", "generated/surfify.utils.rotate_data", "generated/surfify.utils.sampling._patch_tri_iter", "generated/surfify.utils.sampling.build_freesurfer_ico", "generated/surfify.utils.sampling.build_fslr_ref", "generated/surfify.utils.sampling.downsample", "generated/surfify.utils.sampling.downsample_data", "generated/surfify.utils.sampling.downsample_ico", "generated/surfify.utils.sampling.find_neighbors", "generated/surfify.utils.sampling.find_rotation_interpol_coefs", "generated/surfify.utils.sampling.get_angle_with_xaxis", "generated/surfify.utils.sampling.get_rectangular_projection", "generated/surfify.utils.sampling.icosahedron", "generated/surfify.utils.sampling.interpolate", "generated/surfify.utils.sampling.interpolate_data", "generated/surfify.utils.sampling.middle_point", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors", "generated/surfify.utils.sampling.neighbors", "generated/surfify.utils.sampling.neighbors_rec", "generated/surfify.utils.sampling.normalize", "generated/surfify.utils.sampling.number_of_ico_vertices", "generated/surfify.utils.sampling.number_of_neighbors", "generated/surfify.utils.sampling.order_of_ico_from_vertices", "generated/surfify.utils.sampling.order_triangles", "generated/surfify.utils.sampling.patch_tri", "generated/surfify.utils.sampling.rotate_data", "generated/surfify.utils.sampling.triangles_to_edges", "generated/surfify.utils.sampling.vertex_adjacency_graph", "generated/surfify.utils.setup_logging", "generated/surfify.utils.sph2cart", "generated/surfify.utils.text2grid", "generated/surfify.utils.text2ico", "index", "sg_execution_times"], "filenames": ["auto_gallery/index.rst", "auto_gallery/sg_execution_times.rst", "auto_gallery/simclr_stl10.rst", "auto_gallery/surfify/index.rst", "auto_gallery/surfify/plot_augmentation.rst", "auto_gallery/surfify/plot_match_icosahedron.rst", "auto_gallery/surfify/plot_project_texture.rst", "auto_gallery/surfify/plot_spherical_neighbors.rst", "auto_gallery/surfify/plot_unet_segmentation.rst", "auto_gallery/surfify/sg_execution_times.rst", "generated/documentation.rst", "generated/installation.rst", "generated/nidl.rst", "generated/nidl.estimators.rst", "generated/nidl.estimators.BaseEstimator.rst", "generated/nidl.estimators.ClassifierMixin.rst", "generated/nidl.estimators.ClusterMixin.rst", "generated/nidl.estimators.RegressorMixin.rst", "generated/nidl.estimators.TransformerMixin.rst", "generated/nidl.estimators.base.BaseEstimator.rst", "generated/nidl.estimators.base.ClassifierMixin.rst", "generated/nidl.estimators.base.ClusterMixin.rst", "generated/nidl.estimators.base.RegressorMixin.rst", "generated/nidl.estimators.base.TransformerMixin.rst", "generated/nidl.estimators.linear.rst", "generated/nidl.estimators.linear.LogisticRegression.rst", "generated/nidl.estimators.linear.logistic_regression.LogisticRegression.rst", "generated/nidl.estimators.ssl.rst", "generated/nidl.estimators.ssl.SimCLR.rst", "generated/nidl.estimators.ssl.simclr.SimCLR.rst", "generated/nidl.experiment.fetch_experiment.rst", "generated/nidl.experiment.filter_config.rst", "generated/nidl.experiment.get_env.rst", "generated/nidl.experiment.load_interface.rst", "generated/nidl.experiment.update_params.rst", "generated/nidl.utils.rst", "generated/nidl.utils.Bunch.rst", "generated/nidl.utils.Weights.rst", "generated/nidl.utils.bunch.Bunch.rst", "generated/nidl.utils.color.Colored.rst", "generated/nidl.utils.color.attr.rst", "generated/nidl.utils.color.fg.rst", "generated/nidl.utils.color.hex.rst", "generated/nidl.utils.color.print_multicolor.rst", "generated/nidl.utils.color.print_result.rst", "generated/nidl.utils.color.print_subtitle.rst", "generated/nidl.utils.color.print_title.rst", "generated/nidl.utils.color.print_warning.rst", "generated/nidl.utils.color.random_stylize.rst", "generated/nidl.utils.color.stylize.rst", "generated/nidl.utils.print_multicolor.rst", "generated/nidl.utils.validation._AvailableIfDescriptor.rst", "generated/nidl.utils.validation._estimator_is.rst", "generated/nidl.utils.validation.available_if.rst", "generated/nidl.utils.validation.check_is_fitted.rst", "generated/nidl.utils.weights.Weights.rst", "generated/search.rst", "generated/surfify.rst", "generated/surfify.augmentation.rst", "generated/surfify.augmentation.BaseTransformer.rst", "generated/surfify.augmentation.GroupMixUp.rst", "generated/surfify.augmentation.HemiMixUp.rst", "generated/surfify.augmentation.SurfBlur.rst", "generated/surfify.augmentation.SurfCutOut.rst", "generated/surfify.augmentation.SurfNoise.rst", "generated/surfify.augmentation.SurfRotation.rst", "generated/surfify.augmentation.Transformer.rst", "generated/surfify.augmentation.apply_chained_transforms.rst", "generated/surfify.augmentation.base.SurfBlur.rst", "generated/surfify.augmentation.base.SurfCutOut.rst", "generated/surfify.augmentation.base.SurfNoise.rst", "generated/surfify.augmentation.base.SurfRotation.rst", "generated/surfify.augmentation.interval.rst", "generated/surfify.augmentation.mixup.GroupMixUp.rst", "generated/surfify.augmentation.mixup.HemiMixUp.rst", "generated/surfify.augmentation.mixup.MixUpAugmentation.rst", "generated/surfify.augmentation.multichannel_augmentation.rst", "generated/surfify.augmentation.utils.BaseTransformer.rst", "generated/surfify.augmentation.utils.RandomAugmentation.rst", "generated/surfify.augmentation.utils.Transformer.rst", "generated/surfify.augmentation.utils.apply_chained_transforms.rst", "generated/surfify.augmentation.utils.interval.rst", "generated/surfify.augmentation.utils.listify.rst", "generated/surfify.augmentation.utils.multichannel_augmentation.rst", "generated/surfify.datasets.rst", "generated/surfify.datasets.ClassificationDataset.rst", "generated/surfify.datasets.GenericSurfDataset.rst", "generated/surfify.datasets._generic.GenericSurfDataset.rst", "generated/surfify.datasets._samples_generator.ClassificationDataset.rst", "generated/surfify.datasets._samples_generator.make_classification.rst", "generated/surfify.datasets.make_classification.rst", "generated/surfify.losses.rst", "generated/surfify.losses.SphericalVAELoss.rst", "generated/surfify.losses.vae.SphericalVAELoss.rst", "generated/surfify.losses.vae.log_likelihood.rst", "generated/surfify.models.rst", "generated/surfify.models.HemiFusionDecoder.rst", "generated/surfify.models.HemiFusionEncoder.rst", "generated/surfify.models.SphericalBase.rst", "generated/surfify.models.SphericalGUNet.rst", "generated/surfify.models.SphericalGVGG.rst", "generated/surfify.models.SphericalGVGG11.rst", "generated/surfify.models.SphericalGVGG11BN.rst", "generated/surfify.models.SphericalGVGG13.rst", "generated/surfify.models.SphericalGVGG13BN.rst", "generated/surfify.models.SphericalGVGG16.rst", "generated/surfify.models.SphericalGVGG16BN.rst", "generated/surfify.models.SphericalGVGG19.rst", "generated/surfify.models.SphericalGVGG19BN.rst", "generated/surfify.models.SphericalHemiFusionDecoder.rst", "generated/surfify.models.SphericalHemiFusionEncoder.rst", "generated/surfify.models.SphericalUNet.rst", "generated/surfify.models.SphericalVAE.rst", "generated/surfify.models.SphericalVGG.rst", "generated/surfify.models.SphericalVGG11.rst", "generated/surfify.models.SphericalVGG11BN.rst", "generated/surfify.models.SphericalVGG13.rst", "generated/surfify.models.SphericalVGG13BN.rst", "generated/surfify.models.SphericalVGG16.rst", "generated/surfify.models.SphericalVGG16BN.rst", "generated/surfify.models.SphericalVGG19.rst", "generated/surfify.models.SphericalVGG19BN.rst", "generated/surfify.models.base.SphericalBase.rst", "generated/surfify.models.unet.DownBlock.rst", "generated/surfify.models.unet.DownGBlock.rst", "generated/surfify.models.unet.GraphicalUNet.rst", "generated/surfify.models.unet.SphericalGUNet.rst", "generated/surfify.models.unet.SphericalUNet.rst", "generated/surfify.models.unet.UpBlock.rst", "generated/surfify.models.unet.UpGBlock.rst", "generated/surfify.models.vae.HemiFusionDecoder.rst", "generated/surfify.models.vae.HemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalHemiFusionDecoder.rst", "generated/surfify.models.vae.SphericalHemiFusionEncoder.rst", "generated/surfify.models.vae.SphericalVAE.rst", "generated/surfify.models.vae.compute_output_dim.rst", "generated/surfify.models.vgg.SphericalGVGG.rst", "generated/surfify.models.vgg.SphericalGVGG11.rst", "generated/surfify.models.vgg.SphericalGVGG11BN.rst", "generated/surfify.models.vgg.SphericalGVGG13.rst", "generated/surfify.models.vgg.SphericalGVGG13BN.rst", "generated/surfify.models.vgg.SphericalGVGG16.rst", "generated/surfify.models.vgg.SphericalGVGG16BN.rst", "generated/surfify.models.vgg.SphericalGVGG19.rst", "generated/surfify.models.vgg.SphericalGVGG19BN.rst", "generated/surfify.models.vgg.SphericalVGG.rst", "generated/surfify.models.vgg.SphericalVGG11.rst", "generated/surfify.models.vgg.SphericalVGG11BN.rst", "generated/surfify.models.vgg.SphericalVGG13.rst", "generated/surfify.models.vgg.SphericalVGG13BN.rst", "generated/surfify.models.vgg.SphericalVGG16.rst", "generated/surfify.models.vgg.SphericalVGG16BN.rst", "generated/surfify.models.vgg.SphericalVGG19.rst", "generated/surfify.models.vgg.SphericalVGG19BN.rst", "generated/surfify.models.vgg.class_factory.rst", "generated/surfify.nn.rst", "generated/surfify.nn.IcoDiNeConv.rst", "generated/surfify.nn.IcoFixIndexUpSample.rst", "generated/surfify.nn.IcoGenericUpConv.rst", "generated/surfify.nn.IcoMaxIndexUpSample.rst", "generated/surfify.nn.IcoPool.rst", "generated/surfify.nn.IcoRePaConv.rst", "generated/surfify.nn.IcoSpMaConv.rst", "generated/surfify.nn.IcoSpMaConvTranspose.rst", "generated/surfify.nn.IcoUpConv.rst", "generated/surfify.nn.IcoUpSample.rst", "generated/surfify.nn.functional.circular_pad.rst", "generated/surfify.nn.modules.IcoDiNeConv.rst", "generated/surfify.nn.modules.IcoFixIndexUpSample.rst", "generated/surfify.nn.modules.IcoGenericUpConv.rst", "generated/surfify.nn.modules.IcoMaxIndexUpSample.rst", "generated/surfify.nn.modules.IcoPool.rst", "generated/surfify.nn.modules.IcoRePaConv.rst", "generated/surfify.nn.modules.IcoSpMaConv.rst", "generated/surfify.nn.modules.IcoSpMaConvTranspose.rst", "generated/surfify.nn.modules.IcoUpConv.rst", "generated/surfify.nn.modules.IcoUpSample.rst", "generated/surfify.plotting.rst", "generated/surfify.plotting.plot_trisurf.rst", "generated/surfify.plotting.surface.plot_trisurf.rst", "generated/surfify.utils.rst", "generated/surfify.utils.cart2sph.rst", "generated/surfify.utils.coord.cart2sph.rst", "generated/surfify.utils.coord.find_corresponding_order.rst", "generated/surfify.utils.coord.grid2text.rst", "generated/surfify.utils.coord.ico2ico.rst", "generated/surfify.utils.coord.sph2cart.rst", "generated/surfify.utils.coord.text2grid.rst", "generated/surfify.utils.coord.text2ico.rst", "generated/surfify.utils.debug_msg.rst", "generated/surfify.utils.downsample.rst", "generated/surfify.utils.downsample_data.rst", "generated/surfify.utils.downsample_ico.rst", "generated/surfify.utils.find_neighbors.rst", "generated/surfify.utils.find_rotation_interpol_coefs.rst", "generated/surfify.utils.get_logger.rst", "generated/surfify.utils.get_rectangular_projection.rst", "generated/surfify.utils.grid2text.rst", "generated/surfify.utils.ico2ico.rst", "generated/surfify.utils.icosahedron.rst", "generated/surfify.utils.interpolate.rst", "generated/surfify.utils.interpolate_data.rst", "generated/surfify.utils.io.HidePrints.rst", "generated/surfify.utils.io.compute_and_store.rst", "generated/surfify.utils.io.decompose_cifti.rst", "generated/surfify.utils.io.read_freesurfer.rst", "generated/surfify.utils.io.read_gifti.rst", "generated/surfify.utils.io.surf_data_from_cifti.rst", "generated/surfify.utils.io.ungzip.rst", "generated/surfify.utils.io.volume_from_cifti.rst", "generated/surfify.utils.io.write_freesurfer.rst", "generated/surfify.utils.io.write_gifti.rst", "generated/surfify.utils.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.neighbors.rst", "generated/surfify.utils.neighbors_rec.rst", "generated/surfify.utils.number_of_ico_vertices.rst", "generated/surfify.utils.number_of_neighbors.rst", "generated/surfify.utils.order_of_ico_from_vertices.rst", "generated/surfify.utils.order_triangles.rst", "generated/surfify.utils.patch_tri.rst", "generated/surfify.utils.rotate_data.rst", "generated/surfify.utils.sampling._patch_tri_iter.rst", "generated/surfify.utils.sampling.build_freesurfer_ico.rst", "generated/surfify.utils.sampling.build_fslr_ref.rst", "generated/surfify.utils.sampling.downsample.rst", "generated/surfify.utils.sampling.downsample_data.rst", "generated/surfify.utils.sampling.downsample_ico.rst", "generated/surfify.utils.sampling.find_neighbors.rst", "generated/surfify.utils.sampling.find_rotation_interpol_coefs.rst", "generated/surfify.utils.sampling.get_angle_with_xaxis.rst", "generated/surfify.utils.sampling.get_rectangular_projection.rst", "generated/surfify.utils.sampling.icosahedron.rst", "generated/surfify.utils.sampling.interpolate.rst", "generated/surfify.utils.sampling.interpolate_data.rst", "generated/surfify.utils.sampling.middle_point.rst", "generated/surfify.utils.sampling.min_depth_to_get_n_neighbors.rst", "generated/surfify.utils.sampling.neighbors.rst", "generated/surfify.utils.sampling.neighbors_rec.rst", "generated/surfify.utils.sampling.normalize.rst", "generated/surfify.utils.sampling.number_of_ico_vertices.rst", "generated/surfify.utils.sampling.number_of_neighbors.rst", "generated/surfify.utils.sampling.order_of_ico_from_vertices.rst", "generated/surfify.utils.sampling.order_triangles.rst", "generated/surfify.utils.sampling.patch_tri.rst", "generated/surfify.utils.sampling.rotate_data.rst", "generated/surfify.utils.sampling.triangles_to_edges.rst", "generated/surfify.utils.sampling.vertex_adjacency_graph.rst", "generated/surfify.utils.setup_logging.rst", "generated/surfify.utils.sph2cart.rst", "generated/surfify.utils.text2grid.rst", "generated/surfify.utils.text2ico.rst", "index.rst", "sg_execution_times.rst"], "titles": ["Use Cases", "Computation times", "Self-Supervised Contrastive Learning with SimCLR", "Spherical Modules Use Cases", "Spherical augmentations", "Icosahedron matching", "Project texture", "Spherical neighbors", "UNet segmentation", "Computation times", "API documentation of NIDL", "Installing <cite>nidl</cite>", "API documentation of <em>nidl</em>", "API documentation of <em>nidl.estimators</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.estimators.linear</em>", "Examples", "Examples", "API documentation of <em>nidl.estimators.ssl</em>", "Examples", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>nidl.utils</em>", "&lt;no title&gt;", "Examples", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Examples", "Search in API documentation of NIDL", "API documentation of <em>surfify</em>", "API documentation of <em>surfify.augmentation</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.datasets</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.losses</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.models</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.nn</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.plotting</em>", "&lt;no title&gt;", "&lt;no title&gt;", "API documentation of <em>surfify.utils</em>", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Computation times"], "terms": {"self": [0, 1, 10, 25, 26, 27, 28, 29, 37, 51, 53, 55, 252], "supervis": [0, 1, 10, 25, 26, 27, 28, 29, 37, 55, 252], "contrast": [0, 1, 25, 26, 28, 29, 37, 55, 86, 87, 252], "learn": [0, 1, 25, 26, 28, 29, 37, 55, 95, 112, 134, 156, 167, 251, 252], "simclr": [0, 1, 10, 25, 26, 28, 29, 37, 55, 56, 252], "neighbor": [0, 3, 4, 9, 10, 56, 60, 62, 63, 68, 69, 73, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 164, 167, 169, 170, 171, 172, 175, 180, 184, 187, 190, 193, 194, 197, 200, 212, 213, 214, 216, 220, 224, 227, 228, 232, 235, 236, 237, 240, 244, 246, 249, 252], "unet": [0, 3, 9, 10, 56, 99, 111, 123, 124, 125, 126, 127, 128, 129, 252], "segment": [0, 3, 9, 252], "project": [0, 3, 4, 5, 7, 9, 11, 28, 29, 30, 65, 71, 185, 188, 190, 193, 196, 198, 199, 213, 214, 219, 224, 227, 229, 230, 231, 234, 236, 237, 243, 250, 252], "textur": [0, 3, 4, 9, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 96, 97, 100, 109, 110, 112, 113, 130, 131, 132, 133, 134, 136, 145, 178, 179, 184, 187, 188, 191, 197, 200, 201, 220, 225, 232, 233, 244, 249, 250, 252], "icosahedron": [0, 3, 4, 6, 7, 8, 9, 10, 56, 62, 63, 65, 68, 69, 71, 85, 88, 89, 90, 95, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 184, 185, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 249, 250, 252], "match": [0, 3, 9, 183, 188, 250, 252], "augment": [0, 3, 9, 10, 28, 29, 30, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 252], "download": [0, 2, 4, 5, 6, 7, 8, 35, 37, 55], "all": [0, 2, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 99, 111, 125, 126, 127, 161, 162, 163, 172, 173, 174, 252], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 36, 38, 53, 98, 100, 111, 112, 113, 122, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 249, 250, 252], "python": [0, 2, 4, 5, 6, 7, 8, 51], "sourc": [0, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 109, 110, 111, 112, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "code": [0, 2, 4, 5, 6, 7, 8, 30, 33, 48, 49], "auto_gallery_python": 0, "zip": [0, 2, 4, 5, 6, 7, 8, 208], "jupyt": [0, 2, 4, 5, 6, 7, 8], "notebook": [0, 2, 4, 5, 6, 7, 8], "auto_gallery_jupyt": 0, "galleri": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252], "gener": [0, 2, 4, 5, 6, 7, 8, 10, 25, 26, 28, 29, 75, 84, 85, 88, 89, 90, 95, 187, 193, 208, 210, 211, 222, 223, 227, 249], "sphinx": [0, 2, 4, 5, 6, 7, 8], "00": [1, 9, 252], "000": [1, 2, 252], "total": [1, 4, 5, 6, 7, 8, 9, 252], "execut": [1, 9, 203, 252], "1": [1, 2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 30, 36, 38, 53, 59, 60, 63, 69, 73, 77, 78, 85, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 173, 174, 175, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 222, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 246, 249, 250], "file": [1, 9, 30, 37, 55, 86, 87, 204, 205, 206, 208, 210, 211, 247, 251, 252], "from": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 19, 25, 26, 28, 29, 30, 36, 38, 53, 60, 63, 69, 73, 86, 87, 96, 98, 99, 100, 111, 112, 113, 122, 126, 127, 130, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 249, 250, 252], "auto_galleri": [1, 9], "mem": [1, 9, 252], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 252], "simclr_stl10": [1, 2, 252], "py": [1, 2, 4, 5, 6, 7, 8, 9, 252], "0": [1, 2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 30, 53, 59, 63, 65, 69, 71, 77, 78, 98, 112, 122, 125, 134, 157, 162, 163, 168, 173, 174, 178, 179, 183, 185, 188, 190, 193, 198, 213, 214, 218, 219, 220, 224, 227, 236, 237, 242, 243, 244, 246, 250, 252], "go": [2, 4, 5, 6, 7, 8], "end": [2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 48, 49, 54], "full": [2, 4, 5, 6, 7, 8, 10, 192, 226], "http": [2, 11, 51, 95, 207, 209], "uvadlc": 2, "readthedoc": 2, "io": [2, 10, 56, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "In": [2, 25, 26, 28, 29, 34, 99, 111, 126, 127, 154], "thi": [2, 5, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "tutori": [2, 11], "we": [2, 5, 6, 8, 25, 26, 28, 29, 52, 154, 166, 207, 209], "take": [2, 28, 29, 125, 135, 161, 162, 163, 172, 173, 174], "closer": [2, 28, 29], "look": [2, 28, 29, 193, 227], "also": [2, 10, 14, 19, 25, 26, 28, 29, 51, 84, 86, 87, 203, 251], "sometim": [2, 36, 38], "call": [2, 14, 19, 25, 26, 28, 29, 54, 86, 87, 125, 161, 162, 163, 172, 173, 174, 203, 220, 244], "unsupervis": 2, "describ": [2, 28, 29, 30, 251], "scenario": 2, "where": [2, 6, 28, 29, 30, 37, 55, 86, 87, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 178, 179, 187, 246, 249], "have": [2, 5, 6, 25, 26, 28, 29, 203, 213, 236], "given": [2, 37, 54, 55, 94, 96, 130, 203, 220, 244, 245, 246], "input": [2, 8, 30, 32, 37, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 80, 82, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 183, 184, 187, 188, 197, 203, 205, 206, 221, 249, 250], "accompani": 2, "label": [2, 6, 25, 26, 89, 90, 178, 179], "classic": [2, 111, 127, 128], "wai": [2, 14, 19, 213, 236, 251], "howev": 2, "still": 2, "contain": [2, 25, 26, 28, 29, 30, 36, 38, 86, 87, 98, 122, 135, 178, 179, 203, 219, 243], "lot": 2, "inform": [2, 30, 86, 87, 95, 98, 122], "which": [2, 14, 19, 25, 26, 28, 29, 54, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 183, 193, 220, 227, 244], "can": [2, 5, 25, 26, 28, 29, 30, 52, 59, 66, 77, 79, 86, 87, 99, 100, 111, 112, 113, 125, 126, 127, 134, 135, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 202, 203], "how": [2, 4, 5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "ar": [2, 5, 6, 8, 25, 26, 28, 29, 30, 31, 36, 38, 58, 86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 183, 187, 200, 213, 220, 222, 232, 236, 244, 246, 249], "imag": [2, 6, 25, 26, 28, 29, 58, 86, 87, 94, 187, 204, 249], "differ": [2, 5, 28, 29, 30, 63, 69, 86, 87, 98, 99, 111, 122, 126, 127], "each": [2, 5, 14, 19, 25, 26, 28, 29, 30, 60, 62, 63, 68, 69, 73, 76, 83, 85, 88, 89, 90, 94, 96, 97, 98, 99, 109, 110, 111, 122, 125, 126, 127, 130, 131, 132, 133, 193, 194, 213, 214, 220, 227, 228, 236, 237, 244], "other": [2, 5, 28, 29, 30, 188, 250], "what": [2, 25, 26, 28, 29, 30, 33], "pattern": [2, 6, 86, 87, 166], "descript": 2, "certain": [2, 193, 216, 227, 240], "cluster": [2, 16, 21], "To": [2, 5, 25, 26, 28, 29], "get": [2, 28, 29, 212, 215, 216, 217, 235, 239, 240, 241, 246], "an": [2, 6, 7, 8, 11, 14, 19, 25, 26, 28, 29, 30, 32, 33, 36, 37, 38, 51, 53, 54, 55, 62, 63, 68, 69, 72, 75, 76, 78, 81, 83, 98, 99, 111, 122, 126, 127, 156, 167, 184, 187, 188, 192, 197, 199, 201, 212, 215, 216, 217, 220, 226, 231, 233, 234, 235, 239, 240, 241, 244, 249, 250], "insight": 2, "question": 2, "implement": [2, 25, 26, 28, 29, 51, 62, 68, 95, 112, 125, 134], "popular": [2, 10, 84], "simpl": [2, 4, 5, 7, 8, 28, 29, 185, 198, 246], "method": [2, 10, 14, 19, 25, 26, 28, 29, 36, 37, 38, 52, 53, 55, 84, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 220, 244], "appli": [2, 5, 6, 28, 29, 37, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 77, 78, 79, 80, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 185, 196, 198, 214, 230, 237], "stl10": 2, "requir": [2, 25, 26, 28, 29], "some": [2, 7, 10, 25, 26, 28, 29, 30, 32, 66, 67, 79, 80, 84, 246], "packag": [2, 5, 11], "besid": 2, "nidl": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 251], "let": [2, 28, 29], "": [2, 5, 7, 14, 19, 25, 26, 28, 29, 54, 61, 62, 63, 65, 68, 69, 71, 74, 85, 88, 89, 90, 96, 97, 99, 109, 110, 111, 123, 126, 127, 128, 130, 131, 132, 133, 156, 167, 190, 193, 203, 213, 214, 218, 219, 224, 227, 236, 237, 242, 243], "first": [2, 5, 6, 8, 25, 26, 28, 29, 96, 99, 111, 123, 124, 126, 127, 130, 220, 244], "start": [2, 63, 69, 193, 227], "import": [2, 4, 5, 6, 7, 8, 28, 29, 30, 32, 33, 36, 38, 53, 84, 98, 100, 111, 112, 113, 122, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 249, 250], "our": [2, 5], "standard": [2, 62, 64, 68, 70, 98, 99, 111, 122, 126, 127, 199, 202, 219, 231, 243], "librari": 2, "below": [2, 25, 26, 28, 29, 30], "o": [2, 5, 7, 180, 190, 193, 213, 214, 219, 224, 227, 236, 237, 243], "matplotlib": [2, 4, 5, 6, 7, 8, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "pyplot": [2, 4, 5, 6, 7, 8, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "plt": [2, 4, 5, 6, 7, 8, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "pytorch_lightn": 2, "pl": 2, "torch": [2, 6, 8, 25, 26, 28, 29, 37, 55, 95, 100, 111, 112, 113, 125, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "nn": [2, 6, 8, 10, 14, 19, 25, 26, 28, 29, 37, 55, 56, 62, 68, 96, 97, 109, 110, 123, 125, 128, 130, 131, 132, 133, 135, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "util": [2, 4, 5, 6, 7, 8, 10, 25, 26, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 65, 68, 69, 71, 77, 78, 79, 80, 81, 82, 83, 84, 111, 112, 113, 127, 134, 145, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "torchvis": [2, 25, 26, 28, 29], "collect": 2, "ordereddict": 2, "copi": 2, "deepcopi": 2, "weight": [2, 10, 25, 26, 28, 29, 30, 37, 55, 56, 60, 73, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 194, 200, 214, 220, 228, 232, 237, 244], "estim": [2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 52, 54, 56, 185, 198], "ssl": [2, 10, 28, 29, 56], "linear": [2, 10, 25, 26, 56, 99, 111, 126, 127, 128], "logisticregress": [2, 10, 24, 25, 26, 56], "callback": [2, 25, 26, 28, 29], "learningratemonitor": [2, 25, 26, 28, 29], "modelcheckpoint": 2, "transform": [2, 5, 10, 14, 18, 19, 23, 30, 56, 58, 59, 66, 67, 76, 77, 79, 80, 83, 86, 87, 96, 130, 181, 182, 185, 186, 198, 219, 243, 248], "defin": [2, 10, 13, 14, 19, 28, 29, 30, 31, 60, 73, 75, 78, 86, 87, 99, 111, 125, 126, 127, 128, 129, 154, 161, 162, 163, 172, 173, 174, 178, 179, 196, 199, 205, 206, 210, 211, 230, 231], "global": [2, 30, 154], "paramet": [2, 8, 14, 19, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "datadir": 2, "tmp": 2, "checkpointdir": 2, "saved_model": 2, "num_work": 2, "cpu_count": 2, "num_imag": 2, "6": [2, 4, 9, 25, 26, 28, 29, 36, 38, 98, 112, 113, 122, 134, 145, 213, 219, 236, 243, 252], "backend": 2, "cudnn": 2, "determinst": 2, "true": [2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 37, 43, 48, 49, 50, 53, 55, 59, 76, 77, 83, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 164, 167, 169, 170, 171, 175, 178, 179, 184, 185, 188, 191, 193, 197, 198, 213, 218, 225, 227, 236, 242, 250], "benchmark": 2, "fals": [2, 4, 6, 7, 25, 26, 28, 29, 37, 51, 53, 55, 86, 87, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 178, 179, 185, 190, 192, 193, 198, 199, 200, 201, 202, 204, 207, 209, 213, 214, 218, 219, 220, 224, 226, 227, 231, 232, 233, 236, 237, 242, 243, 244, 245], "devic": [2, 25, 26, 28, 29], "gpu": [2, 25, 26, 28, 29], "cuda": 2, "is_avail": 2, "els": 2, "cpu": 2, "As": [2, 8, 28, 29], "mani": [2, 5, 25, 26, 28, 29], "befor": [2, 28, 29, 54, 99, 111, 126, 127, 163, 174], "provid": [2, 14, 19, 65, 71, 86, 87, 155, 194, 220, 228, 244, 251], "pre": 2, "model": [2, 10, 25, 26, 28, 29, 30, 35, 37, 55, 56, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "If": [2, 25, 26, 28, 29, 37, 54, 55, 203, 220, 244], "you": [2, 5, 11, 14, 19, 25, 26, 28, 29, 30, 31, 37, 55], "run": [2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 125, 161, 162, 163, 172, 173, 174, 219, 243], "local": [2, 30, 34, 37, 55], "make": [2, 53, 154], "sure": 2, "suffici": 2, "disk": [2, 25, 26, 28, 29], "space": [2, 6, 28, 29, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 130, 131, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 196, 230], "avail": [2, 25, 26, 28, 29, 30, 37, 53, 55], "load_pretrain": [2, 37, 55], "makedir": 2, "exist_ok": 2, "name": [2, 25, 26, 28, 29, 30, 33, 37, 54, 55, 96, 97, 109, 110, 130, 131, 132, 133, 154, 178, 179, 189, 203], "hf": [2, 30, 37, 55], "hub": [2, 30, 37, 55], "neurospin": [2, 11, 37, 55], "resnet18": 2, "data_dir": [2, 37, 55], "filepath": [2, 37, 55], "pt": 2, "allow": [2, 5, 14, 19, 25, 26, 28, 29, 30, 31, 203, 220, 244], "effici": 2, "need": [2, 5, 6, 25, 26, 28, 29, 30, 125, 161, 162, 163, 166, 172, 173, 174], "prepar": 2, "load": [2, 8, 10, 30, 33, 34, 37, 55, 84, 86, 87, 207, 209], "sampl": [2, 8, 10, 56, 84, 85, 88, 89, 90, 94, 96, 97, 99, 100, 111, 112, 113, 123, 126, 127, 128, 130, 131, 134, 136, 145, 158, 159, 160, 164, 166, 169, 170, 171, 175, 187, 214, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249], "two": [2, 5, 25, 26, 28, 29, 183, 185, 198, 213, 236], "random": [2, 4, 14, 19, 59, 63, 69, 75, 76, 77, 78, 83, 85, 88, 89, 90], "batch": [2, 8, 14, 19, 25, 26, 28, 29, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "The": [2, 5, 25, 26, 28, 29, 30, 54, 62, 64, 65, 68, 70, 71, 95, 96, 97, 99, 109, 110, 111, 112, 125, 126, 127, 130, 131, 132, 133, 134, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 181, 182, 202, 203], "easiest": 2, "do": [2, 5, 25, 26, 28, 29], "i": [2, 5, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "creat": [2, 51, 59, 72, 77, 78, 81, 84, 86, 87, 98, 122, 154], "when": [2, 14, 19, 25, 26, 28, 29, 37, 53, 55, 178, 179, 183, 188, 203, 218, 242, 250], "being": 2, "set": [2, 5, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 34, 39, 63, 65, 69, 71, 84, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 190, 200, 204, 224, 232], "twice": 2, "class": [2, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 51, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 202], "contrastivetransform": 2, "framework": 2, "easili": [2, 5], "extend": [2, 36, 38], "more": [2, 86, 87, 251], "posit": 2, "than": [2, 28, 29], "same": [2, 5, 28, 29, 30, 31, 183, 185, 198, 203, 208, 213, 236], "most": [2, 178, 179], "usual": [2, 28, 29], "obtain": [2, 28, 29], "us": [2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "onli": [2, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "def": [2, 4, 6, 25, 26, 28, 29, 53], "__init__": [2, 25, 26, 28, 29, 53], "base_transform": 2, "n_view": 2, "2": [2, 4, 5, 7, 8, 9, 25, 26, 28, 29, 30, 36, 38, 53, 59, 72, 77, 78, 81, 85, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 181, 182, 184, 185, 187, 188, 190, 191, 192, 193, 196, 197, 198, 200, 201, 212, 213, 214, 219, 224, 225, 226, 227, 230, 232, 233, 235, 236, 237, 243, 245, 249, 250, 252], "__call__": 2, "x": [2, 6, 7, 8, 25, 26, 28, 29, 53, 89, 90, 94, 97, 99, 100, 109, 110, 111, 112, 113, 123, 124, 125, 126, 127, 131, 132, 133, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 181, 182, 184, 186, 187, 188, 191, 197, 200, 201, 213, 220, 225, 229, 232, 233, 236, 244, 248, 249, 250], "return": [2, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 51, 53, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 81, 82, 83, 86, 87, 89, 90, 94, 96, 97, 98, 100, 109, 110, 112, 113, 122, 130, 131, 132, 133, 134, 135, 136, 145, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250], "rang": [2, 4, 5, 8, 181, 182, 216, 240], "next": [2, 5, 25, 26, 28, 29, 203], "specif": [2, 10, 14, 19, 25, 26, 28, 29, 60, 61, 73, 74, 99, 111, 126, 127, 154, 215, 239], "want": [2, 11, 28, 29, 37, 55], "choic": [2, 30], "crucial": 2, "hyperparamet": [2, 28, 29], "sinc": [2, 5, 6, 28, 29, 125, 161, 162, 163, 166, 172, 173, 174], "directli": [2, 58], "affect": [2, 14, 19], "latent": [2, 28, 29, 96, 97, 109, 110, 112, 130, 131, 132, 133, 134], "structur": [2, 5], "might": [2, 25, 26, 28, 29], "overal": 2, "experi": [2, 10, 25, 26, 28, 29, 30, 31, 32, 33, 34, 56, 251], "5": [2, 4, 6, 7, 8, 9, 65, 71, 98, 99, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 172, 196, 213, 214, 230, 236, 237], "follow": [2, 28, 29, 30], "origin": [2, 6, 28, 29, 58, 94], "horizont": [2, 6], "flip": 2, "crop": 2, "resiz": 2, "color": [2, 7, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 178, 179], "distort": 2, "grayscal": 2, "gaussian": [2, 62, 64, 68, 70, 85, 88, 89, 90], "blur": [2, 62, 68], "comparison": 2, "reduc": [2, 60, 73, 191, 192, 194, 225, 226, 228], "effect": 2, "jitter": 2, "slightli": 2, "instead": [2, 125, 161, 162, 163, 172, 173, 174], "8": [2, 4, 6, 8, 9, 25, 26, 28, 29, 111, 127, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 252], "bright": 2, "satur": 2, "hue": 2, "better": 2, "perform": [2, 28, 29, 54, 60, 73, 125, 160, 161, 162, 163, 171, 172, 173, 174], "wa": [2, 28, 29], "faster": [2, 203], "stabl": 2, "instanc": [2, 5, 14, 19, 25, 26, 28, 29, 54, 59, 77, 78, 98, 122, 125, 161, 162, 163, 172, 173, 174], "scale": [2, 6, 8, 25, 26, 28, 29, 85, 88, 89, 90, 187, 188, 191, 196, 200, 201, 214, 220, 225, 230, 232, 233, 237, 244, 249, 250], "highli": 2, "vari": 2, "benefici": 2, "t": [2, 6, 25, 26, 28, 29], "reli": 2, "anymor": 2, "distinguish": 2, "between": [2, 5, 25, 26, 28, 29, 60, 61, 73, 74, 178, 179, 183, 185, 198, 213, 222, 236, 246], "contrast_transform": 2, "compos": [2, 30, 213, 236], "randomhorizontalflip": 2, "randomresizedcrop": 2, "size": [2, 6, 7, 8, 25, 26, 28, 29, 60, 61, 63, 69, 73, 74, 75, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 162, 163, 166, 172, 173, 174, 193, 196, 214, 219, 221, 227, 230, 237, 243], "96": [2, 4, 163, 174, 184, 197], "randomappli": 2, "colorjitt": 2, "p": 2, "randomgrayscal": 2, "gaussianblur": 2, "kernel_s": [2, 6, 162, 163, 173, 174], "9": [2, 4, 5, 92, 93], "totensor": 2, "normal": [2, 10, 25, 26, 28, 29, 56, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 180, 229, 238], "after": [2, 25, 26, 28, 29, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "discuss": 2, "techniqu": [2, 246], "now": [2, 5, 8, 28, 29, 135], "focu": 2, "similarli": 2, "cifar10": 2, "10": [2, 4, 5, 7, 8, 9, 100, 111, 113, 127, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243, 252], "airplan": 2, "bird": 2, "car": 2, "cat": 2, "deer": 2, "dog": 2, "hors": 2, "monkei": 2, "ship": 2, "truck": 2, "higher": 2, "resolut": [2, 86, 87, 99, 111, 126, 127], "pixel": 2, "500": 2, "per": 2, "addition": 2, "much": 2, "larger": [2, 28, 29], "100": [2, 4, 7, 8, 190, 193, 213, 214, 219, 222, 224, 227, 236, 237, 243], "unlabel": 2, "similar": [2, 5, 25, 26, 28, 29], "wider": [2, 28, 29], "anim": 2, "vehicl": 2, "ideal": 2, "showcas": 2, "benefit": 2, "offer": 2, "luckili": 2, "through": [2, 11, 15, 16, 17, 18, 20, 21, 22, 23], "keep": [2, 86, 87], "mind": 2, "rel": 2, "larg": 2, "ha": [2, 5, 25, 26, 28, 29, 99, 111, 126, 127], "consider": [2, 28, 29], "3gb": 2, "bit": [2, 25, 26, 28, 29], "time": [2, 4, 5, 6, 7, 8, 220, 244], "For": [2, 25, 26, 28, 29, 54, 135, 213, 236], "initi": [2, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "loader": [2, 8], "abov": 2, "unlabeled_data": 2, "via": [2, 220, 244], "train_data_contrast": 2, "valid": [2, 10, 14, 19, 25, 26, 28, 29, 30, 34, 51, 52, 53, 54, 56], "root": [2, 11, 86, 87], "split": [2, 28, 29, 86, 87], "pair": [2, 86, 87], "img": 2, "stack": 2, "idx": [2, 4, 7, 193, 213, 219, 227, 236, 243], "dim": [2, 8, 25, 26, 28, 29, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "img_grid": 2, "make_grid": [2, 25, 26, 28, 29], "nrow": 2, "pad_valu": 2, "permut": [2, 5, 61, 74, 183, 185, 198], "figur": [2, 6, 178, 179], "figsiz": [2, 4, 5, 6, 7, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "titl": [2, 6, 45, 46], "imshow": [2, 6, 187, 249], "axi": [2, 6, 8, 178, 179, 183, 194, 200, 207, 209, 213, 220, 228, 229, 232, 236, 244], "off": [2, 6], "And": 2, "associ": [2, 7, 25, 26, 28, 29, 180, 188, 194, 220, 228, 244, 250], "dataload": [2, 8, 14, 19, 25, 26, 28, 29, 30], "batch_siz": [2, 8, 97, 109, 110, 112, 131, 132, 133, 134], "256": [2, 39, 96, 97, 109, 110, 130, 131, 132, 133], "train_load": 2, "shuffl": [2, 8, 14, 19], "drop_last": 2, "pin_memori": 2, "val_load": 2, "common": [2, 10, 13, 58, 91, 95], "resnet": 2, "18": [2, 4], "architectur": [2, 8, 10, 25, 26, 28, 29, 95, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145], "f": [2, 6, 25, 26, 28, 29, 99, 111, 126, 127], "paper": [2, 28, 29], "g": [2, 25, 26, 28, 29], "layer": [2, 28, 29, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176], "mlp": [2, 28, 29, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "relu": [2, 28, 29, 99, 111, 123, 124, 125, 126, 127, 128, 129], "activ": [2, 28, 29, 96, 97, 99, 109, 110, 111, 112, 126, 127, 130, 131, 132, 133, 134], "hidden": [2, 28, 29, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "note": [2, 25, 26, 28, 29, 30, 51, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 203], "up": [2, 28, 29, 98, 99, 111, 122, 126, 127, 183, 185, 193, 198, 216, 227, 240], "simclrv2": [2, 28, 29], "author": [2, 28, 29, 30], "mention": [2, 28, 29], "boost": [2, 28, 29], "why": [2, 5], "four": 2, "dimens": [2, 5, 28, 29, 135], "deeper": 2, "show": [2, 4, 5, 6, 7, 8, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "overfit": 2, "A": [2, 4, 5, 6, 7, 8, 25, 26, 28, 29, 37, 55, 58, 86, 87, 95], "observ": 2, "u": [2, 6, 28, 29, 86, 87, 99, 111, 125, 126, 127], "compar": [2, 28, 29], "neg": 2, "lead": 2, "smoother": 2, "loss": [2, 8, 10, 25, 26, 28, 29, 30, 56, 92, 93, 94], "gradient": [2, 25, 26, 28, 29], "case": [2, 25, 26, 28, 29, 30, 33, 34], "experienc": 2, "good": 2, "result": [2, 44, 51, 154, 202], "hidden_dim": [2, 28, 29, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "128": [2, 96, 97, 109, 110, 130, 131, 132, 133], "encod": [2, 25, 26, 28, 29, 91, 95, 97, 99, 109, 110, 111, 112, 126, 127, 131, 132, 133, 134], "none": [2, 14, 19, 25, 26, 28, 29, 30, 33, 34, 37, 54, 55, 60, 62, 63, 65, 68, 69, 71, 73, 85, 86, 87, 88, 89, 90, 92, 93, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 163, 174, 178, 179, 191, 192, 201, 203, 220, 222, 223, 225, 226, 233, 234, 244, 247], "num_class": [2, 25, 26, 113, 114, 115, 116, 117, 118, 119, 120, 121, 145, 146, 147, 148, 149, 150, 151, 152, 153], "4": [2, 4, 5, 7, 8, 9, 98, 111, 122, 127, 157, 158, 159, 160, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 183, 185, 188, 191, 192, 198, 201, 216, 225, 226, 233, 240, 246, 250, 252], "latent_s": 2, "fc": 2, "out_featur": 2, "ident": 2, "save_weights_onli": 2, "mode": [2, 11, 25, 26, 28, 29, 30, 123], "max": [2, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 170, 171], "monitor": [2, 25, 26, 28, 29], "val_acc_top5": 2, "logging_interv": 2, "epoch": [2, 8, 25, 26, 28, 29], "trainer_param": 2, "default_root_dir": 2, "acceler": [2, 25, 26, 28, 29], "max_epoch": [2, 25, 26, 28, 29], "lr": [2, 8, 25, 26, 28, 29], "5e": 2, "temperatur": [2, 25, 26, 28, 29], "07": 2, "weight_decai": [2, 8, 25, 26, 28, 29], "1e": [2, 8, 183, 188, 250], "random_st": [2, 14, 19, 25, 26, 28, 29], "42": [2, 4, 6, 8, 187, 188, 191, 200, 201, 220, 225, 232, 233, 244, 249, 250], "print": [2, 4, 5, 6, 8, 35, 39, 53, 98, 100, 112, 113, 122, 134, 136, 145, 199, 212, 215, 216, 217, 218, 231, 235, 239, 240, 241, 242], "found": [2, 5, 25, 26, 28, 29, 54], "pretrain": [2, 28, 29], "weight_fil": [2, 37, 55], "fitted_": 2, "fit": [2, 14, 19, 25, 26, 28, 29, 54], "deploi": 2, "downstream": [2, 28, 29], "task": [2, 28, 29], "see": [2, 28, 29, 30, 51, 65, 71, 86, 87, 207, 209], "well": [2, 28, 29], "littl": 2, "verifi": [2, 54], "whether": [2, 37, 55], "represent": [2, 28, 29, 65, 71, 95, 109, 110, 112, 132, 133, 134, 194, 220, 228, 244, 246], "featur": [2, 10, 28, 29, 84, 99, 111, 123, 124, 125, 126, 127, 128, 129, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176], "word": 2, "singl": [2, 25, 26, 28, 29, 251], "map": [2, 5, 6, 28, 29, 162, 163, 166, 173, 174, 178, 179, 185, 198, 219, 243], "predict": [2, 14, 19, 25, 26, 28, 29, 100, 113, 136, 145], "base": [2, 10, 14, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 56, 60, 68, 69, 70, 71, 73, 98, 122, 156, 167, 183, 203, 213, 214, 219, 236, 237, 243], "network": [2, 28, 29, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "chang": [2, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "dure": [2, 25, 26, 28, 29, 63, 69], "process": [2, 11, 25, 26, 28, 29, 98, 122], "h": [2, 28, 29, 94, 135], "necessari": 2, "further": [2, 10], "worri": 2, "too": 2, "about": [2, 30, 220, 244], "veri": [2, 5, 25, 26, 28, 29], "few": 2, "henc": 2, "expect": [2, 8, 30, 86, 87], "even": [2, 37, 55], "assum": [2, 60, 61, 73, 74, 183], "alreadi": [2, 37, 55], "been": [2, 25, 26, 28, 29], "vector": [2, 28, 29, 213, 236], "dynam": [2, 30, 32, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "so": [2, 5, 25, 26, 28, 29], "here": [2, 5, 25, 26, 28, 29, 30, 207, 209], "within": [2, 125, 161, 162, 163, 172, 173, 174], "second": [2, 4, 5, 6, 7, 8, 25, 26, 28, 29], "did": [2, 5], "ani": [2, 25, 26, 28, 29, 86, 87, 199, 231], "signific": 2, "gain": 2, "test": [2, 5, 8], "while": [2, 5, 25, 26, 28, 29, 125, 161, 162, 163, 172, 173, 174], "800": 2, "64": [2, 4, 96, 97, 109, 110, 112, 130, 131, 132, 133, 134], "scale_transform": 2, "train_img_data": 2, "test_img_data": 2, "number": [2, 5, 25, 26, 59, 60, 63, 69, 72, 73, 77, 78, 81, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 178, 179, 187, 191, 192, 201, 212, 215, 216, 217, 219, 225, 226, 233, 235, 239, 240, 241, 243, 249], "len": [2, 4, 5, 6, 8, 25, 26, 28, 29, 111, 112, 113, 127, 134, 145, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 193, 212, 217, 227, 235, 241], "froozen": 2, "e": [2, 6, 11, 25, 26, 28, 29, 30, 33, 187, 249], "output": [2, 14, 19, 25, 26, 28, 29, 30, 33, 36, 38, 62, 63, 68, 69, 96, 99, 111, 123, 124, 125, 126, 127, 128, 129, 130, 135, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 202, 203], "new_model": 2, "sequenti": [2, 213, 236], "normal_": 2, "mean": [2, 25, 26, 28, 29, 34, 111, 123, 127, 160, 171, 200, 232], "std": 2, "01": [2, 9, 252], "bia": [2, 156, 167], "zero_": 2, "requires_grad_": 2, "final": [2, 8, 111, 127], "evalu": [2, 6, 166], "everi": [2, 25, 26, 28, 29, 125, 161, 162, 163, 172, 173, 174, 190, 224], "earli": 2, "stop": [2, 25, 26, 28, 29, 213, 236], "low": [2, 78], "frequenc": [2, 25, 26, 28, 29], "ensur": [2, 82], "despit": 2, "thei": [2, 5, 8, 36, 38], "smaller": 2, "20": [2, 4, 6, 7, 8, 60, 73], "50": [2, 4], "200": 2, "give": [2, 10], "intuit": 2, "transfer": 2, "recognit": 2, "like": [2, 25, 26, 28, 29, 30, 125], "classif": [2, 6, 8, 85, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "test_load": 2, "val_acc": [2, 25, 26, 28, 29], "check_val_every_n_epoch": [2, 25, 26, 28, 29], "3": [2, 4, 5, 7, 8, 30, 36, 38, 51, 62, 63, 65, 68, 69, 71, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 122, 126, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 205, 206, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 249, 250], "pred": [2, 8, 25, 26], "shape": [2, 5, 6, 8, 100, 111, 112, 113, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 199, 200, 215, 231, 232, 239], "acc": [2, 25, 26, 28, 29], "argmax": [2, 8, 25, 26, 28, 29], "float": [2, 4, 8, 25, 26, 28, 29, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 92, 93, 125, 178, 179, 181, 182, 183, 186, 188, 248, 250], "accuraci": [2, 8, 25, 26, 28, 29], "2f": 2, "_pretrained_filenam": 2, "path": [2, 30, 37, 55, 62, 63, 68, 69, 99, 111, 126, 127, 203, 204, 208, 210, 211, 213, 222, 223, 236], "join": 2, "isfil": 2, "save": [2, 30, 210, 211], "state_dict": 2, "one": [2, 5, 25, 26, 28, 29, 30, 63, 69, 76, 83, 96, 125, 130, 161, 162, 163, 172, 173, 174, 188, 250], "would": [2, 28, 29], "improv": 2, "classifi": [2, 15, 20], "60": [2, 4], "correctli": 2, "quit": 2, "impress": 2, "consid": [2, 5, 63, 69, 86, 87, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167], "dimension": [2, 28, 29], "With": 2, "achiev": 2, "80": [2, 4], "increas": [2, 201, 233], "suggest": 2, "exponenti": 2, "could": [2, 5, 25, 26, 28, 29], "finetun": [2, 28, 29], "adapt": [2, 63, 69, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "indic": [2, 14, 19, 25, 26, 28, 29, 60, 73, 123, 128, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 183, 191, 192, 193, 194, 200, 201, 213, 219, 225, 226, 227, 228, 232, 233, 236, 243, 245], "advantag": 2, "straightforward": 2, "It": [2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "clear": 2, "its": [2, 25, 26, 28, 29, 48, 49, 203, 213, 236], "count": 2, "1000": 2, "fair": 2, "ones": 2, "becaus": [2, 5, 28, 29], "distribut": [2, 28, 29, 97, 112, 131, 134], "notic": 2, "ad": [2, 99, 111, 126, 127], "restrict": 2, "oper": [2, 25, 26, 28, 29, 125], "125": 2, "1250": 2, "done": [2, 203], "recogn": 2, "object": [2, 30, 33, 36, 38, 53, 72, 81, 178, 179, 202, 203], "check": [2, 30, 51, 52, 53, 54], "patch": [2, 28, 29, 63, 69, 86, 87, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 214, 219, 221, 237, 243], "belong": 2, "chosen": 2, "weaker": 2, "function": [2, 5, 6, 8, 10, 12, 14, 19, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 62, 63, 65, 67, 68, 69, 71, 72, 76, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 94, 95, 96, 97, 99, 109, 110, 111, 125, 126, 127, 130, 131, 132, 133, 135, 154, 161, 162, 163, 166, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "almost": [2, 6], "strongli": 2, "iter": [2, 25, 26, 28, 29, 135], "train_transform": 2, "sigma": [2, 4, 62, 63, 64, 68, 69, 70], "train_img_aug_data": 2, "2e": 2, "scratch": 2, "73": [2, 4], "7": [2, 4, 9, 213, 236, 252], "less": 2, "leverag": 2, "amount": 2, "generaliz": 2, "sole": 2, "par": 2, "tenth": 2, "experiment": [2, 30], "limit": 2, "recent": 2, "work": [2, 5, 25, 26, 28, 29, 30, 135], "ting": 2, "chen": 2, "et": [2, 28, 29, 99, 111, 126, 127], "al": [2, 28, 29, 99, 111, 126, 127], "trend": 2, "imagenet": 2, "seem": [2, 5], "stronger": 2, "come": [2, 28, 29], "close": [2, 5], "approach": [2, 11], "combin": [2, 60, 73], "beyond": 2, "khosla": 2, "moreov": 2, "last": [2, 96, 130], "year": 2, "great": [2, 28, 29], "includ": [2, 10, 25, 26, 28, 29, 84, 86, 87], "distil": 2, "byol": 2, "redund": 2, "reduct": 2, "barlow": 2, "twin": 2, "There": 2, "explor": 2, "domain": [2, 4], "step": [2, 8, 25, 26, 28, 29, 99, 111, 126, 127], "ahead": 2, "memori": [2, 4, 5, 6, 7, 8, 203], "usag": [2, 4, 5, 6, 7, 8], "ipynb": [2, 4, 5, 6, 7, 8, 207, 209], "credit": [4, 5, 6, 7, 8], "grigi": [4, 6, 7, 8], "c": [4, 5, 7, 36, 38, 94, 190, 193, 213, 214, 224, 227, 236, 237], "ambrois": [4, 5], "numpi": [4, 5, 6, 8, 181, 182, 186, 248], "np": [4, 5, 6, 8, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 184, 197, 200, 232], "surfifi": [4, 5, 6, 7, 8, 9, 10, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252], "min_depth_to_get_n_neighbor": [4, 10, 56, 180, 212, 235], "plot": [4, 5, 6, 7, 8, 10, 56, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "plot_trisurf": [4, 5, 6, 7, 8, 10, 56, 177, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 213, 214, 219, 220, 224, 225, 226, 227, 231, 232, 233, 236, 237, 243, 244, 249, 250], "interv": [4, 10, 25, 26, 28, 29, 56, 58, 72, 75, 78, 81], "vertic": [4, 5, 7, 60, 61, 62, 63, 65, 68, 69, 71, 73, 74, 85, 88, 89, 90, 98, 111, 122, 127, 156, 157, 167, 168, 178, 179, 184, 185, 187, 188, 190, 191, 192, 194, 197, 198, 199, 200, 201, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 249, 250], "triangl": [4, 5, 7, 62, 63, 65, 68, 69, 71, 98, 111, 122, 127, 178, 179, 184, 185, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 205, 206, 210, 211, 213, 214, 218, 219, 220, 221, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 242, 243, 244, 245, 246, 250], "order": [4, 5, 6, 7, 8, 14, 19, 30, 86, 87, 96, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 130, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 183, 184, 185, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 249, 250], "neigh": [4, 7, 62, 63, 68, 69, 161, 172, 193, 194, 213, 214, 220, 221, 227, 228, 236, 237, 244], "direct_neighbor": [4, 7, 156, 158, 159, 160, 164, 167, 169, 170, 171, 175, 193, 213, 219, 221, 227, 236, 243], "max_depth": 4, "ceil": 4, "displai": [4, 6, 7, 8, 10, 30, 43, 50, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189], "aug": 4, "add_axi": 4, "alpha": [4, 5, 178, 179, 181, 182, 185, 186, 198, 248], "arg": [4, 25, 26, 28, 29, 67, 80, 112, 134], "kwarg": [4, 14, 19, 25, 26, 28, 29, 36, 38, 67, 80, 112, 134], "data": [4, 8, 10, 14, 19, 25, 26, 28, 29, 30, 37, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 86, 87, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 184, 187, 190, 191, 197, 200, 201, 203, 204, 207, 209, 220, 222, 223, 224, 225, 232, 233, 244, 249], "fig": [4, 5, 7, 178, 179, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "ax": [4, 5, 6, 7, 163, 174, 178, 179, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "subplot": [4, 5, 7, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "subplot_kw": [4, 5, 7, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "3d": [4, 5, 7, 185, 190, 193, 196, 198, 199, 213, 214, 219, 224, 227, 230, 231, 236, 237, 243], "aspect": [4, 5, 7, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "auto": [4, 5, 7, 30, 34, 91, 95, 185, 190, 193, 198, 199, 213, 214, 219, 224, 227, 231, 236, 237, 243], "flatten": [4, 6, 166], "colorbar": [4, 7, 178, 179, 185, 190, 192, 193, 198, 199, 213, 214, 219, 224, 226, 227, 231, 236, 237, 243], "edgecolor": [4, 5, 178, 179, 185, 198], "white": [4, 64, 70], "linewidth": [4, 7, 178, 179], "red": [4, 7, 190, 193, 213, 214, 224, 227, 236, 237], "blue": [4, 5, 7, 185, 193, 198, 213, 214, 227, 236, 237], "green": [4, 5, 7, 185, 198], "_textur": 4, "tight_layout": 4, "arrai": [4, 5, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 80, 82, 85, 86, 87, 88, 89, 90, 123, 128, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 210, 211, 213, 214, 218, 219, 220, 224, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 242, 243, 244, 245, 246, 249, 250], "patch_siz": [4, 63, 69], "int": [4, 14, 19, 25, 26, 28, 29, 30, 60, 61, 63, 69, 72, 73, 74, 75, 81, 85, 86, 87, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 183, 184, 187, 191, 192, 193, 196, 197, 199, 201, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 230, 231, 233, 235, 236, 237, 239, 240, 241, 243, 245, 249], "n_patch": [4, 63, 69], "uniform": 4, "phi": [4, 65, 71], "180": [4, 7, 9, 252], "theta": [4, 65, 71], "psi": [4, 65, 71], "controlateral_textur": 4, "prob": [4, 60, 61, 73, 74, 75], "n_vertic": [4, 6, 8, 60, 61, 73, 74, 75, 89, 90, 109, 110, 112, 132, 133, 134, 191, 201, 212, 215, 216, 217, 220, 225, 233, 235, 239, 240, 241, 244], "controlateral_data": [4, 61, 74], "group_textur": 4, "group_data": [4, 60, 73], "n_sampl": [4, 6, 8, 60, 73, 85, 88, 89, 90, 187, 188, 190, 191, 200, 201, 220, 224, 225, 232, 233, 244, 249, 250], "neigh_ind": [4, 60, 73], "groupbi": [4, 60, 73], "n_neighbor": [4, 60, 73], "n_compon": [4, 60, 73], "30": [4, 8, 60, 73], "58": 4, "74": 4, "49": 4, "62": 4, "47": 4, "15": [4, 8], "99": [4, 8], "92": 4, "54": 4, "65": [4, 6], "31": 4, "14": 4, "78": 4, "90": [4, 9, 252], "76": 4, "93": 4, "21": 4, "70": 4, "22": [4, 9, 252], "46": 4, "89": 4, "25": [4, 8], "82": 4, "11": 4, "59": 4, "56": 4, "12": [4, 5, 213, 236], "19": 4, "13": [4, 7], "23": 4, "28": 4, "51": 4, "79": 4, "16": [4, 25, 26, 28, 29, 162, 163, 173, 174], "17": 4, "77": 4, "88": 4, "52": 4, "95": 4, "48": 4, "72": 4, "66": 4, "24": [4, 5], "69": 4, "86": 4, "26": 4, "27": 4, "29": [4, 5], "83": 4, "63": 4, "36": 4, "32": [4, 99, 111, 112, 125, 126, 127, 134], "33": 4, "34": 4, "39": 4, "35": [4, 8], "37": 4, "38": 4, "45": [4, 220, 244], "71": 4, "40": [4, 6, 7, 8, 85, 88, 89, 90], "41": 4, "81": 4, "43": 4, "44": 4, "87": 4, "98": 4, "97": 4, "53": 4, "68": [4, 5, 9, 252], "55": 4, "57": 4, "61": 4, "94": 4, "67": 4, "75": 4, "84": 4, "85": 4, "91": [4, 6], "aug1": 4, "aug2": 4, "aug3": 4, "tran": 4, "regist": [4, 59, 66, 77, 79, 125, 161, 162, 163, 172, 173, 174], "probabl": [4, 59, 60, 61, 73, 74, 75, 77], "script": [4, 5, 6, 7, 8], "minut": [4, 5, 6, 7, 8], "425": [4, 9, 252], "111": 4, "plot_augment": [4, 9, 252], "math": 5, "warn": [5, 25, 26, 28, 29, 30, 47], "scipi": [5, 185, 198], "spatial": [5, 185, 198], "mpl_toolkit": 5, "mplot3d": 5, "axes3d": [5, 178, 179], "ico2ico": [5, 10, 56, 180, 185, 188, 198, 250], "build": [5, 7, 30, 62, 63, 68, 69, 72, 81, 98, 122, 213, 214, 219, 221, 222, 223, 234, 236, 237, 243, 246], "refer": [5, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "vertices_norm": 5, "triangles_norm": 5, "standard_ico": [5, 6, 8, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 185, 188, 198, 199, 219, 231, 243, 250], "642": [5, 6, 8], "1280": [5, 6, 8], "Then": 5, "fetch": [5, 10, 30, 84, 222, 223], "freesurf": [5, 98, 122, 205, 210, 219, 222, 243], "try": 5, "find": [5, 30, 183, 185, 190, 193, 198, 200, 224, 227, 232, 234], "optim": [5, 8, 25, 26, 28, 29, 30], "rotat": [5, 65, 71, 185, 194, 198, 220, 228, 244], "modul": [5, 10, 13, 14, 19, 25, 26, 28, 29, 30, 32, 37, 55, 56, 57, 58, 62, 68, 96, 97, 99, 109, 110, 111, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "rmse": 5, "align_vector": 5, "54571598073452": 5, "okai": 5, "doe": [5, 28, 29], "suppos": 5, "equal": 5, "zero": [5, 6, 28, 29, 63, 69, 100, 111, 112, 113, 127, 128, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 184, 197], "issu": [5, 33], "matric": 5, "That": 5, "previou": 5, "algorithm": 5, "properli": 5, "correspond": [5, 25, 26, 28, 29, 60, 61, 73, 74, 183, 188, 215, 239, 250], "row": [5, 62, 63, 68, 69, 213, 236], "matrix": [5, 60, 73], "52573111": 5, "85065081": 5, "96386126": 5, "2664047": 5, "91298249": 5, "39960705": 5, "08232358": 5, "8944": 5, "4472": 5, "2764": 5, "8507": 5, "1815": 5, "296": 5, "9378": 5, "0272": 5, "3462": 5, "0692": 5, "213": 5, "9746": 5, "sufac": [5, 10, 155, 180], "togeth": 5, "place": [5, 34], "comput": [5, 25, 26, 28, 29, 94, 125, 135, 161, 162, 163, 172, 173, 174, 194, 203, 220, 228, 229, 244], "small": [5, 28, 29], "subset": [5, 86, 87], "point": [5, 7, 190, 193, 196, 200, 213, 214, 219, 224, 227, 229, 230, 232, 234, 236, 237, 243], "both": [5, 28, 29, 163, 174, 213, 236], "absolut": [5, 30, 33], "valu": [5, 25, 26, 28, 29, 30, 36, 38, 51, 53, 62, 63, 68, 69, 86, 87, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 178, 179, 181, 182, 183, 200, 213, 232, 236], "sign": [5, 185, 198], "vertices_of_interest_norm": 5, "search": [5, 193, 213, 227, 236], "coords_of_interest": 5, "idx_of_interest": 5, "ab": 5, "sum": [5, 8, 25, 26, 28, 29], "vertices_of_interest": 5, "fs_row_idx": 5, "break": 5, "possibl": [5, 25, 26, 28, 29, 37, 55], "depend": 5, "various": 5, "until": 5, "itertool": 5, "n_permut": 5, "factori": 5, "best_rms": 5, "best_rot": 5, "catch_warn": 5, "simplefilt": 5, "ignor": [5, 14, 19, 125, 161, 162, 163, 172, 173, 174], "categori": 5, "userwarn": 5, "format": [5, 8, 189, 205, 206, 210, 211], "as_matrix": 5, "52575203": 5, "85063788": 5, "971395685383565e": 5, "05": [5, 9, 252], "simpli": [5, 25, 26, 28, 29], "solv": 5, "outlin": 5, "proper": 5, "anoth": 5, "half": 5, "clearli": 5, "appear": 5, "opt": 5, "hostedtoolcach": 5, "x64": 5, "lib": 5, "python3": 5, "site": 5, "coord": [5, 10, 56, 182, 183, 184, 185, 186, 187, 188], "246": 5, "closest": [5, 194, 228], "9190925817849288": 5, "479": [5, 9, 252], "plot_match_icosahedron": [5, 9, 252], "convert": [6, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 126, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 184, 187, 197, 249], "onto": [6, 187, 188, 249, 250], "spheric": [6, 9, 91, 92, 93, 95, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 162, 163, 166, 173, 174, 180, 181, 182, 184, 186, 187, 196, 197, 213, 230, 236, 248, 249, 252], "evenli": [6, 187, 249], "resampl": [6, 187, 249], "respect": [6, 166, 187, 249], "sin": [6, 187, 249], "elev": [6, 92, 93, 96, 97, 100, 112, 113, 130, 131, 134, 136, 145, 166, 181, 182, 186, 187, 248, 249], "azimuth": [6, 92, 93, 96, 97, 100, 112, 113, 130, 131, 134, 136, 145, 166, 181, 182, 186, 187, 248, 249], "vice": 6, "versa": 6, "dataset": [6, 10, 25, 26, 28, 29, 30, 56, 85, 86, 87, 88, 89, 90, 177, 187, 188, 191, 200, 201, 220, 225, 232, 233, 244, 249, 250], "ico_ord": [6, 8, 86, 87], "n_class": [6, 8, 85, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 187, 188, 191, 200, 201, 220, 225, 232, 233, 244, 249, 250], "ico_vertic": [6, 8, 85, 88, 89, 90], "ico_triangl": [6, 8], "_": [6, 28, 29, 159, 160, 170, 171, 207, 209], "make_classif": [6, 8, 10, 56, 84, 89, 90, 187, 188, 191, 200, 201, 220, 225, 232, 233, 244, 249, 250], "seed": [6, 8, 25, 26, 28, 29, 85, 88, 89, 90, 187, 188, 191, 200, 201, 220, 225, 232, 233, 244, 249, 250], "proj_textur": 6, "text2grid": [6, 10, 56, 180, 181, 182, 184, 186, 187, 197, 248, 249], "proj": [6, 184, 187, 197, 249], "lower": [6, 191, 222, 225], "nearest": [6, 60, 73, 111, 127, 128, 184, 187, 190, 197, 200, 224, 232, 249], "192": [6, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 126, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 184, 187, 197, 249], "text": [6, 7, 25, 26, 28, 29, 35, 43, 48, 49, 50], "grid2text": [6, 10, 56, 180, 181, 182, 184, 186, 187, 197, 248, 249], "is_label": [6, 8, 178, 179, 184, 188, 191, 197, 200, 201, 220, 225, 232, 233, 244, 250], "enabl": [6, 25, 26, 28, 29, 30, 36, 38], "scatter_dens": 6, "y": [6, 8, 25, 26, 28, 29, 89, 90, 181, 182, 184, 186, 187, 188, 191, 197, 200, 201, 220, 225, 232, 233, 244, 248, 249, 250], "labelx": 6, "labe": 6, "scatter": [6, 7, 190, 193, 213, 214, 219, 224, 227, 236, 237, 243], "densiti": [6, 196, 214, 230, 237], "left": [6, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 204], "width": [6, 178, 179], "bottom": 6, "height": [6, 135], "005": 6, "rect_scatt": 6, "rect_histx": 6, "rect_histi": 6, "ax_scatt": 6, "tick_param": 6, "direct": [6, 28, 29, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 187, 213, 236, 249], "top": [6, 28, 29], "right": [6, 28, 29, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 204], "set_xlabel": 6, "set_ylabel": 6, "ax_histx": 6, "ax_histi": 6, "bin": 6, "hist": 6, "orient": 6, "set_xlim": 6, "get_xlim": 6, "set_ylim": 6, "get_ylim": 6, "radiu": [6, 181, 182, 186, 248], "cart2sph": [6, 10, 56, 180, 181, 182, 186, 248], "sin_elev": 6, "circularli": [6, 166], "continu": [6, 166], "circular": [6, 162, 163, 166, 173, 174], "pad": [6, 111, 127, 128, 157, 162, 163, 166, 168, 173, 174], "boundari": [6, 166], "expand_dim": 6, "astyp": 6, "float32": 6, "from_numpi": 6, "pad_textur": 6, "circular_pad": [6, 10, 56, 155, 166], "padd": 6, "conv": [6, 99, 111, 123, 124, 125, 126, 127, 128, 129, 156, 167], "conv2d": [6, 135], "in_channel": [6, 8, 99, 111, 125, 126, 127], "out_channel": [6, 8, 99, 111, 125, 126, 127], "stride": [6, 162, 163, 173, 174], "conv_textur": 6, "194": [6, 100, 101, 102, 103, 104, 105, 106, 107, 108, 136, 137, 138, 139, 140, 141, 142, 143, 144, 162, 173], "736": [6, 9, 252], "plot_project_textur": [6, 9, 252], "get_rectangular_project": [7, 10, 56, 180, 196, 230], "depth": [7, 8, 99, 111, 125, 126, 127, 156, 158, 159, 160, 164, 167, 169, 170, 171, 175, 193, 212, 213, 216, 227, 235, 236, 240], "vidx": 7, "cnt": [7, 190, 193, 213, 214, 219, 224, 227, 236, 237, 243], "enumer": [7, 8, 190, 193, 213, 214, 219, 224, 227, 236, 237, 243], "marker": [7, 190, 193, 213, 214, 219, 224, 227, 236, 237, 243], "str": [7, 14, 19, 28, 29, 30, 31, 33, 37, 52, 54, 55, 60, 62, 63, 65, 68, 69, 71, 73, 86, 87, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 171, 189, 194, 203, 204, 205, 206, 208, 210, 211, 220, 222, 223, 228, 244, 247], "3x3": [7, 99, 111, 126, 127], "rectangular": [7, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 196, 214, 230, 237], "sphere": [7, 123, 128, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 196, 214, 218, 229, 230, 234, 237, 238, 242], "zoom": [7, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 172, 193, 196, 214, 227, 230, 237], "orang": 7, "purpl": 7, "brown": 7, "pink": 7, "grai": 7, "oliv": 7, "cyan": 7, "yellow": 7, "tan": 7, "salmon": 7, "violet": 7, "steelblu": 7, "lime": 7, "navi": 7, "node": [7, 63, 69, 156, 167, 193, 196, 227, 230, 246], "node_rec_neigh": 7, "node_tplane_neigh": 7, "197": [7, 9, 252], "plot_spherical_neighbor": [7, 9, 252], "sphericalunet": [8, 10, 56, 95, 99, 111, 125, 126, 127], "genrat": 8, "n_epoch": 8, "surfac": [8, 10, 56, 57, 58, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 126, 127, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 178, 179, 184, 187, 197, 204, 205, 206, 207, 210, 211, 213, 236, 249, 251], "crossentropi": 8, "sgd": [8, 25, 26, 28, 29], "obviou": 8, "classificationdataset": [8, 10, 56, 84, 85, 88], "in_ord": [8, 111, 127], "start_filt": [8, 99, 111, 126, 127], "conv_mod": [8, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "dine": [8, 62, 63, 68, 69, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 213, 236], "dine_s": [8, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "up_mod": [8, 111, 127, 128], "transpos": [8, 99, 111, 126, 127, 128, 158, 163, 164, 169, 174, 175], "loss_fn": 8, "crossentropyloss": 8, "momentum": 8, "n_batch": 8, "zero_grad": 8, "backward": [8, 25, 26, 28, 29], "current": [8, 31, 32, 34], "item": [8, 25, 26, 28, 29, 203], "7f": 8, "5d": 8, "eval": [8, 25, 26, 28, 29], "test_loss": 8, "correct": 8, "y_pred": 8, "no_grad": 8, "logit": 8, "softmax": [8, 28, 29], "type": [8, 15, 16, 17, 18, 20, 21, 22, 23, 30, 31, 65, 71, 72, 81, 111, 127, 128, 160, 171, 194, 213, 220, 228, 236, 244], "append": 8, "concaten": [8, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "error": [8, 25, 26, 28, 29, 51, 54, 202], "n": [8, 37, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 80, 85, 88, 89, 90, 94, 156, 158, 161, 167, 169, 172, 178, 179, 183, 184, 185, 187, 188, 192, 193, 194, 197, 198, 199, 205, 206, 210, 211, 213, 214, 218, 220, 226, 227, 228, 231, 236, 237, 242, 244, 245, 246, 249, 250], "1f": 8, "avg": 8, "8f": 8, "037239": 8, "863961": 8, "754127": 8, "649652": 8, "560205": 8, "464512": 8, "369010": 8, "282773": 8, "003180": 8, "002472": 8, "002212": 8, "002202": 8, "001927": 8, "001403": 8, "000923": 8, "000067": 8, "000055": 8, "000046": 8, "000039": 8, "000033": 8, "000029": 8, "000025": 8, "000021": 8, "000011": 8, "000009": 8, "000008": 8, "000012": 8, "000015": 8, "000018": 8, "corresspond": 8, "exactli": 8, "ground": 8, "truth": 8, "199": [8, 9, 252], "295": 8, "plot_unet_segment": [8, 9, 252], "019": [9, 252], "110": [9, 252], "294": [9, 252], "02": [9, 252], "pleas": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "detail": 10, "raw": [10, 204, 207, 209], "mai": 10, "enough": 10, "guidelin": 10, "variou": [10, 35, 135], "help": [10, 35], "develop": [10, 11, 35], "helper": [10, 57], "integr": [10, 57, 125], "pytorch": [10, 25, 26, 28, 29, 57, 96, 97, 109, 110, 130, 131, 132, 133, 189, 251], "artifici": [10, 84], "dedic": [10, 155], "content": 10, "fetch_experi": [10, 12, 30, 56], "filter_config": [10, 12, 31, 56], "get_env": [10, 12, 32, 56], "load_interfac": [10, 12, 33, 56], "update_param": [10, 12, 34, 56], "baseestim": [10, 13, 14, 19, 56], "classifiermixin": [10, 13, 15, 20, 56], "clustermixin": [10, 13, 16, 21, 56], "regressormixin": [10, 13, 17, 22, 56], "transformermixin": [10, 13, 18, 23, 56], "logistic_regress": [10, 26, 56], "bunch": [10, 30, 36, 38, 56], "print_multicolor": [10, 35, 43, 50, 56], "attr": [10, 35, 40, 52, 56], "fg": [10, 35, 41, 56], "hex": [10, 35, 42, 56], "print_result": [10, 35, 44, 56], "print_subtitl": [10, 35, 45, 56], "print_titl": [10, 35, 46, 56], "print_warn": [10, 35, 47, 56], "random_styl": [10, 35, 48, 56], "styliz": [10, 35, 49, 56], "_availableifdescriptor": [10, 35, 51, 56], "_estimator_i": [10, 35, 52, 56], "available_if": [10, 35, 53, 56], "check_is_fit": [10, 35, 54, 56], "basetransform": [10, 56, 58, 59, 67, 77, 80], "groupmixup": [10, 56, 58, 60, 73], "hemimixup": [10, 56, 58, 61, 74], "surfblur": [10, 56, 58, 62, 68], "surfcutout": [10, 56, 58, 63, 69], "surfnois": [10, 56, 58, 64, 70], "surfrot": [10, 56, 58, 65, 71], "apply_chained_transform": [10, 56, 58, 67, 80], "multichannel_augment": [10, 56, 58, 76, 83], "mixup": [10, 56, 73, 74, 75], "mixupaugment": [10, 56, 58, 75], "randomaugment": [10, 56, 58, 59, 76, 77, 78, 83], "listifi": [10, 56, 58, 82], "genericsurfdataset": [10, 56, 84, 86, 87], "_gener": [10, 56, 87], "_samples_gener": [10, 56, 88, 89], "sphericalvaeloss": [10, 56, 91, 92, 93], "vae": [10, 56, 92, 93, 94, 112, 130, 131, 132, 133, 134, 135], "log_likelihood": [10, 56, 91, 94], "hemifusiondecod": [10, 56, 95, 96, 130], "hemifusionencod": [10, 56, 95, 97, 131], "sphericalbas": [10, 56, 95, 98, 122], "sphericalgunet": [10, 56, 95, 99, 111, 125, 126, 127], "sphericalgvgg": [10, 56, 95, 100, 113, 136, 145], "sphericalgvgg11": [10, 56, 95, 100, 101, 136, 137], "sphericalgvgg11bn": [10, 56, 95, 102, 138], "sphericalgvgg13": [10, 56, 95, 103, 139], "sphericalgvgg13bn": [10, 56, 95, 104, 140], "sphericalgvgg16": [10, 56, 95, 105, 141], "sphericalgvgg16bn": [10, 56, 95, 106, 142], "sphericalgvgg19": [10, 56, 95, 107, 143], "sphericalgvgg19bn": [10, 56, 95, 108, 144], "sphericalhemifusiondecod": [10, 56, 95, 109, 132], "sphericalhemifusionencod": [10, 56, 95, 110, 133], "sphericalva": [10, 56, 95, 112, 134], "sphericalvgg": [10, 56, 95, 100, 113, 136, 145], "sphericalvgg11": [10, 56, 95, 113, 114, 145, 146], "sphericalvgg11bn": [10, 56, 95, 115, 147], "sphericalvgg13": [10, 56, 95, 116, 148], "sphericalvgg13bn": [10, 56, 95, 117, 149], "sphericalvgg16": [10, 56, 95, 118, 150], "sphericalvgg16bn": [10, 56, 95, 119, 151], "sphericalvgg19": [10, 56, 95, 120, 152], "sphericalvgg19bn": [10, 56, 95, 121, 153], "downblock": [10, 56, 95, 123], "downgblock": [10, 56, 95, 124], "graphicalunet": [10, 56, 95, 125], "upblock": [10, 56, 95, 128], "upgblock": [10, 56, 95, 129], "vgg": [10, 56, 100, 113, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "class_factori": [10, 56, 95, 154], "compute_output_dim": [10, 56, 95, 135], "icodineconv": [10, 56, 62, 68, 155, 156, 161, 162, 167, 172, 173], "icofixindexupsampl": [10, 56, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 174, 175, 176], "icogenericupconv": [10, 56, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 174, 175, 176], "icomaxindexupsampl": [10, 56, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 174, 175, 176], "icopool": [10, 56, 155, 159, 160, 170, 171], "icorepaconv": [10, 56, 155, 156, 161, 162, 167, 172, 173], "icospmaconv": [10, 56, 135, 155, 156, 161, 162, 167, 172, 173], "icospmaconvtranspos": [10, 56, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 174, 175, 176], "icoupconv": [10, 56, 155, 157, 158, 159, 164, 165, 168, 169, 170, 175, 176], "icoupsampl": [10, 56, 155, 157, 158, 159, 163, 164, 165, 168, 169, 170, 174, 175, 176], "debug_msg": [10, 56, 180, 189], "downsampl": [10, 56, 86, 87, 98, 122, 123, 124, 128, 158, 159, 160, 164, 169, 170, 171, 175, 180, 190, 191, 192, 200, 201, 222, 224, 225, 226, 232, 233], "downsample_data": [10, 56, 180, 190, 191, 192, 200, 201, 224, 225, 226, 232, 233], "downsample_ico": [10, 56, 180, 190, 191, 192, 200, 201, 224, 225, 226, 232, 233], "find_neighbor": [10, 56, 180, 193, 227], "find_rotation_interpol_coef": [10, 56, 180, 194, 218, 228, 242], "get_logg": [10, 56, 180, 195], "interpol": [10, 56, 65, 71, 111, 127, 128, 157, 165, 168, 176, 178, 179, 180, 184, 187, 190, 191, 192, 194, 197, 200, 201, 218, 220, 224, 225, 226, 228, 232, 233, 242, 244, 249], "interpolate_data": [10, 56, 180, 190, 191, 192, 200, 201, 224, 225, 226, 232, 233], "neighbors_rec": [10, 56, 161, 172, 180, 193, 213, 214, 227, 236, 237], "number_of_ico_vertic": [10, 56, 180, 215, 217, 239, 241], "number_of_neighbor": [10, 56, 180, 212, 216, 235, 240], "order_of_ico_from_vertic": [10, 56, 180, 215, 217, 239, 241], "order_triangl": [10, 56, 180, 218, 242], "patch_tri": [10, 56, 180, 219, 221, 243], "rotate_data": [10, 56, 65, 71, 180, 194, 220, 228, 244], "setup_log": [10, 56, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 247], "sph2cart": [10, 56, 180, 181, 182, 186, 248], "text2ico": [10, 56, 180, 185, 188, 198, 250], "_patch_tri_it": [10, 56, 180, 221], "build_freesurfer_ico": [10, 56, 180, 222], "build_fslr_ref": [10, 56, 180, 223], "get_angle_with_xaxi": [10, 56, 180, 229], "middle_point": [10, 56, 180, 234], "triangles_to_edg": [10, 56, 180, 245], "vertex_adjacency_graph": [10, 56, 180, 246], "hideprint": [10, 56, 180, 202], "compute_and_stor": [10, 56, 180, 203], "decompose_cifti": [10, 56, 180, 204], "read_freesurf": [10, 56, 180, 205], "read_gifti": [10, 56, 180, 206], "surf_data_from_cifti": [10, 56, 180, 207], "ungzip": [10, 56, 180, 208], "volume_from_cifti": [10, 56, 180, 209], "write_freesurf": [10, 56, 180, 210], "write_gifti": [10, 56, 180, 211], "find_corresponding_ord": [10, 56, 180, 183], "walk": 11, "intal": 11, "offici": 11, "releas": 11, "best": [11, 30, 185, 198], "user": [11, 31, 99, 111, 126, 127, 220, 244], "who": 11, "latest": 11, "contribut": 11, "without": [11, 25, 26, 28, 29, 208], "privileg": 11, "pip": 11, "sudo": 11, "git": 11, "repositori": [11, 37, 55], "github": [11, 95, 207, 209], "com": [11, 95], "deepinsight": 11, "page": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "document": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "explain": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "signatur": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "big": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "pictur": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "sequenc": [14, 19, 25, 26, 28, 29, 59, 66, 77, 79], "basicali": [14, 19], "lightningmodul": [14, 19, 25, 26, 28, 29], "embed": [14, 19], "trainer": [14, 19, 25, 26, 28, 29], "child": [14, 19, 30, 76, 83], "inherit": [14, 19, 30], "mixin": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "connect": [14, 19, 125, 246], "custom": [14, 19, 25, 26, 28, 29, 54], "predefin": [14, 19], "set_batch_connector": [14, 19, 25, 26, 28, 29], "pass": [14, 19, 25, 26, 28, 29, 53, 125, 161, 162, 163, 172, 173, 174], "reorgan": [14, 19, 25, 26, 28, 29], "your": [14, 19, 25, 26, 28, 29, 30, 37, 48, 49, 55, 251], "accord": [14, 19, 25, 26, 28, 29, 213, 236], "init": [14, 19, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 85, 88, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 202], "default": [14, 19, 25, 26, 28, 29, 30, 33, 37, 54, 55, 59, 60, 62, 63, 65, 68, 69, 71, 72, 73, 76, 77, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 160, 162, 163, 167, 171, 173, 174, 178, 179, 183, 187, 188, 191, 192, 194, 196, 199, 201, 202, 203, 204, 213, 214, 215, 218, 219, 220, 222, 223, 225, 226, 228, 230, 231, 233, 236, 237, 239, 242, 243, 244, 247, 249, 250], "control": [14, 19, 25, 26, 28, 29, 59, 62, 68, 77, 85, 88, 89, 90, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 163, 173, 174, 196, 214, 230, 237], "reproduc": [14, 19, 25, 26, 28, 29], "across": [14, 19, 60, 61, 73, 74], "multipl": [14, 19, 25, 26, 28, 29, 30, 31, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "list": [14, 19, 25, 26, 28, 29, 30, 34, 60, 67, 73, 80, 82, 85, 86, 87, 88, 89, 90, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 191, 192, 193, 200, 201, 225, 226, 227, 232, 233, 245], "attribut": [14, 19, 25, 26, 28, 29, 34, 36, 38, 39, 40, 53, 54], "dict": [14, 19, 25, 26, 28, 29, 31, 32, 33, 34, 62, 63, 68, 69, 86, 87, 98, 122, 154, 193, 194, 213, 227, 228, 236], "estimator_typ": [15, 16, 17, 18, 20, 21, 22, 23], "tag": [15, 16, 17, 18, 20, 21, 22, 23, 37, 55], "regress": [17, 22], "regressor": [17, 22], "rate": [25, 26, 28, 29, 85, 88, 89, 90], "adam": [25, 26, 28, 29], "decai": [25, 26, 28, 29], "optionali": [25, 26, 28, 29, 86, 87, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "multisteplr": [25, 26], "schedul": [25, 26, 28, 29, 30], "must": [25, 26, 28, 29, 30, 54, 59, 77, 203, 208], "element": [25, 26, 28, 29], "tensor": [25, 26, 28, 29, 92, 93, 94, 96, 97, 100, 109, 110, 112, 113, 128, 130, 131, 132, 133, 134, 136, 145, 166, 189], "variabl": [25, 26, 28, 29, 30, 154], "validation_step_output": [25, 26, 28, 29], "kei": [25, 26, 28, 29, 30, 36, 38, 62, 63, 68, 69, 98, 122, 213, 236], "respectivelli": [25, 26, 28, 29], "configure_optim": [25, 26, 28, 29], "choos": [25, 26, 28, 29], "d": [25, 26, 28, 29, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 126, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 162, 163, 166, 173, 174, 184, 187, 197, 249], "But": [25, 26, 28, 29], "gan": [25, 26, 28, 29], "manual": [25, 26, 28, 29], "option": [25, 26, 28, 29, 62, 63, 68, 69, 92, 93, 96, 97, 98, 109, 110, 122, 130, 131, 132, 133, 178, 179, 191, 192, 199, 201, 202, 218, 219, 225, 226, 231, 233, 242, 243], "tupl": [25, 26, 28, 29, 30, 31, 37, 55, 82, 162, 163, 166, 173, 174], "lr_scheduler_config": [25, 26, 28, 29], "dictionari": [25, 26, 28, 29, 36, 38, 39, 62, 63, 68, 69, 86, 87, 213, 236], "lr_schedul": [25, 26, 28, 29], "whose": [25, 26, 28, 29], "configur": [25, 26, 28, 29, 30, 31, 251], "shown": [25, 26, 28, 29], "unit": [25, 26, 28, 29, 99, 111, 126, 127, 196, 214, 230, 234, 237, 238], "updat": [25, 26, 28, 29, 32], "wherea": [25, 26, 28, 29], "should": [25, 26, 28, 29, 37, 53, 55, 125, 161, 162, 163, 172, 173, 174], "metric": [25, 26, 28, 29, 60, 73], "reducelronplateau": [25, 26, 28, 29], "val_loss": [25, 26, 28, 29], "enforc": [25, 26, 28, 29], "specifi": [25, 26, 28, 29, 30, 33, 37, 55, 59, 62, 63, 68, 69, 77, 86, 87, 178, 179, 191, 192, 201, 225, 226, 233], "thu": [25, 26, 28, 29], "train": [25, 26, 28, 29, 30, 58, 86, 87], "produc": [25, 26, 28, 29], "strict": [25, 26, 28, 29], "progress": [25, 26, 28, 29], "keyword": [25, 26, 28, 29], "log": [25, 26, 28, 29, 92, 93, 94, 98, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 134, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 195, 247], "condit": [25, 26, 28, 29, 51], "lightn": [25, 26, 28, 29, 251], "metric_to_track": [25, 26, 28, 29], "often": [25, 26, 28, 29], "optimizer1": [25, 26, 28, 29], "optimizer2": [25, 26, 28, 29], "scheduler1": [25, 26, 28, 29], "scheduler2": [25, 26, 28, 29], "lambdalr": [25, 26, 28, 29], "made": [25, 26, 28, 29], "metric_v": [25, 26, 28, 29], "thing": [25, 26, 28, 29], "know": [25, 26, 28, 29], "automat": [25, 26, 28, 29, 30, 220, 244], "precis": [25, 26, 28, 29], "handl": [25, 26, 28, 29, 37, 55], "lbfg": [25, 26, 28, 29], "closur": [25, 26, 28, 29], "switch": [25, 26, 28, 29], "them": [25, 26, 28, 29, 66, 79, 125, 161, 162, 163, 172, 173, 174, 203, 246], "yourself": [25, 26, 28, 29], "overrid": [25, 26, 28, 29], "optimizer_step": [25, 26, 28, 29], "hook": [25, 26, 28, 29, 125, 161, 162, 163, 172, 173, 174], "on_validation_epoch_end": [25, 26, 28, 29], "loop": [25, 26, 28, 29], "predict_step": [25, 26, 28, 29], "batch_idx": [25, 26, 28, 29], "By": [25, 26, 28, 29], "forward": [25, 26, 28, 29, 96, 97, 99, 100, 109, 110, 111, 112, 113, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "add": [25, 26, 28, 29, 32, 64, 70, 163, 174], "logic": [25, 26, 28, 29], "infer": [25, 26, 28, 29], "multi": [25, 26, 28, 29, 76, 83], "prevent": [25, 26, 28, 29], "oom": [25, 26, 28, 29], "basepredictionwrit": [25, 26, 28, 29], "write": [25, 26, 28, 29, 210, 211], "databas": [25, 26, 28, 29], "spawn": [25, 26, 28, 29], "happen": [25, 26, 28, 29], "strategi": [25, 26, 28, 29], "ddp_spawn": [25, 26, 28, 29], "tpu": [25, 26, 28, 29], "core": [25, 26, 28, 29], "won": [25, 26, 28, 29], "index": [25, 26, 28, 29, 62, 63, 68, 69, 190, 193, 213, 224, 227, 236, 245], "dataloader_idx": [25, 26, 28, 29], "mymodel": [25, 26, 28, 29], "dm": [25, 26, 28, 29], "training_step": [25, 26, 28, 29], "addit": [25, 26, 28, 29, 99, 111, 126, 127, 156, 167], "bar": [25, 26, 28, 29], "logger": [25, 26, 28, 29, 195], "skip": [25, 26, 28, 29, 123, 124, 125], "support": [25, 26, 28, 29], "deepspe": [25, 26, 28, 29], "special": [25, 26, 28, 29, 30], "calcul": [25, 26, 28, 29], "fancier": [25, 26, 28, 29], "someth": [25, 26, 28, 29], "z": [25, 26, 28, 29, 96, 97, 112, 130, 131, 134, 181, 182, 184, 186, 187, 197, 248, 249], "out": [25, 26, 28, 29, 63, 69, 82, 100, 111, 112, 113, 127, 134, 136, 145], "super": [25, 26, 28, 29], "automatic_optim": [25, 26, 28, 29], "opt1": [25, 26, 28, 29], "opt2": [25, 26, 28, 29], "decod": [25, 26, 28, 29, 96, 99, 109, 111, 112, 126, 127, 130, 132, 134], "accumulate_grad_batch": [25, 26, 28, 29], "intern": [25, 26, 28, 29], "validation_step": [25, 26, 28, 29], "anyth": [25, 26, 28, 29], "interest": [25, 26, 28, 29, 86, 87, 98, 122], "val": [25, 26, 28, 29], "own": [25, 26, 28, 29], "whatev": [25, 26, 28, 29], "sample_img": [25, 26, 28, 29], "grid": [25, 26, 28, 29, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 184, 187, 196, 197, 214, 230, 237, 249], "add_imag": [25, 26, 28, 29], "example_imag": [25, 26, 28, 29], "labels_hat": [25, 26, 28, 29], "log_dict": [25, 26, 28, 29], "argument": [25, 26, 28, 29, 33, 54, 203, 220, 244], "recommend": [25, 26, 28, 29], "quickli": [25, 26, 28, 29], "tell": [25, 26, 28, 29], "don": [25, 26, 28, 29], "put": [25, 26, 28, 29], "disabl": [25, 26, 28, 29], "At": [25, 26, 28, 29, 111, 127], "goe": [25, 26, 28, 29], "back": [25, 26, 28, 29], "version": [28, 29, 30, 33], "x_i": [28, 29], "x_j": [28, 29], "maxim": [28, 29], "minim": [28, 29, 212, 235], "part": [28, 29], "head": [28, 29], "deep": [28, 29, 251], "cnn": [28, 29, 58], "scnn": [28, 29], "respons": [28, 29], "extract": [28, 29, 208], "denot": [28, 29], "finish": [28, 29], "remov": [28, 29, 86, 87], "extractor": [28, 29], "wors": [28, 29], "those": [28, 29, 213, 236], "new": [28, 29, 37, 55, 59, 77, 78, 98, 122, 157, 168], "becom": [28, 29], "invari": [28, 29], "stage": [28, 29], "z_i": [28, 29], "z_j": [28, 29], "therebi": [28, 29], "infonc": [28, 29], "propos": [28, 29], "aaron": [28, 29], "van": [28, 29], "den": [28, 29], "oord": [28, 29], "short": [28, 29], "over": [28, 29], "formal": [28, 29], "written": [28, 29], "ell_": [28, 29], "j": [28, 29], "frac": [28, 29], "exp": [28, 29], "sim": [28, 29], "tau": [28, 29], "sum_": [28, 29], "k": [28, 29, 60, 73, 156, 161, 167, 172, 188, 250], "2n": [28, 29], "mathbb": [28, 29], "kneq": [28, 29], "z_k": [28, 29], "logleft": [28, 29], "determin": [28, 29, 60, 73], "peak": [28, 29], "bound": [28, 29, 72, 81], "balanc": [28, 29], "influenc": [28, 29], "dissimilar": [28, 29], "versu": [28, 29], "cosin": [28, 29], "cdot": [28, 29], "maximum": [28, 29, 178, 179, 219, 243], "minimum": [28, 29, 178, 179], "converg": [28, 29], "around": [28, 29], "exact": [28, 29], "opposit": [28, 29], "flexibl": [28, 29], "altern": [28, 29], "track": [28, 29], "projector": [28, 29], "cosineannealinglr": [28, 29], "auxiliari": [28, 29], "aux": [28, 29], "expfil": 30, "selector": [30, 31], "cv": [30, 34], "logdir": 30, "verbos": 30, "useful": 30, "date": 30, "reus": [30, 220, 244], "section": 30, "descipt": 30, "scaler": 30, "dl": 30, "interfac": [30, 31, 33, 34, 251], "probe": 30, "environ": [30, 31, 32, 34], "fullfil": 30, "constraint": 30, "impos": 30, "interface_occurr": 30, "definit": [30, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 200, 232], "term": [30, 33, 35], "interface_vers": 30, "__version__": 30, "mismatch": 30, "detect": 30, "connot": 30, "previous": 30, "param": [30, 33, 34], "cross": [30, 34, 162, 163, 173, 174], "instanci": 30, "prefix": 30, "filter": [30, 31, 62, 68, 96, 97, 98, 99, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 160, 161, 164, 167, 169, 171, 172, 175], "block": [30, 123, 124, 128, 129], "construct": 30, "hierarch": 30, "properti": [30, 51], "parent": 30, "separ": 30, "form": [30, 37, 55, 60, 73], "architecture_nam": [30, 37, 55], "revis": [30, 37, 55], "hug": [30, 37, 55], "face": [30, 37, 55, 178, 179], "specifid": 30, "machin": [30, 37, 55], "design": 30, "select": [30, 31], "appropri": [30, 31, 54], "scheme": 30, "hyperparapet": 30, "defautl": 30, "coupl": 30, "moment": 30, "dictionarai": 30, "config": 31, "env": [31, 32, 34], "declar": 31, "filter_conf": 31, "updated_env": 32, "environemt": 32, "my_modul": 33, "my_class": 33, "exppect": 33, "module": 33, "cl": 33, "replac": [34, 63, 69, 86, 87, 99, 111, 126, 127], "updated_param": 34, "param_set": 34, "termin": 35, "expos": [36, 38], "access": [36, 38, 154, 203], "value_kei": [36, 38], "b": [36, 38], "retriev": [37, 55, 86, 87], "locat": [37, 55, 86, 87, 208], "avaiabl": [37, 55], "pathlib": [37, 55], "repo": [37, 55], "classmethod": [37, 55, 60, 73, 98, 122], "hf_download": [37, 55], "hf_id": [37, 55], "hf_revis": [37, 55], "force_download": [37, 55], "bool": [37, 52, 55, 59, 76, 77, 83, 86, 87, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 167, 178, 179, 199, 202, 204, 213, 218, 219, 231, 236, 242, 243], "present": [37, 54, 55], "alwai": [37, 55], "resum": [37, 55], "forc": [37, 55], "id": [37, 55], "commit": [37, 55], "hash": [37, 55], "exist": [37, 55, 86, 87, 222, 223], "cach": [37, 55, 62, 63, 65, 68, 69, 71, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 203], "hub_split": [37, 55], "hub_nam": [37, 55], "interpret": [37, 55], "hub_id": [37, 55], "hub_revis": [37, 55], "decalr": [37, 55], "ns_download": [37, 55], "ns_id": [37, 55], "reset": [39, 48, 49], "background": 39, "foreground": [39, 41], "reverse_dict": 39, "revers": [39, 96, 130], "alia": [40, 41, 59, 77, 78, 98, 122], "conveni": [48, 49], "style": [48, 49], "ansi": [48, 49], "fn": 51, "attribute_nam": 51, "descriptor": 51, "protocol": 51, "decor": [51, 53, 76, 83, 203, 220, 244], "rais": [51, 53, 54], "attributeerror": [51, 53], "falsei": 51, "hasattr": [51, 53], "doc": 51, "org": [51, 207, 209], "howto": 51, "html": 51, "explan": 51, "deleg": 52, "underli": 52, "truthi": 53, "callabl": [53, 86, 87, 203], "either": [53, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "otherwis": [53, 54], "unavail": 53, "helloifeven": 53, "_x_is_even": 53, "say_hello": 53, "hello": 53, "obj": 53, "msg": [54, 189], "presenc": 54, "trail": 54, "underscor": 54, "except": 54, "messag": [54, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189], "yet": 54, "string": [54, 178, 179], "substitut": 54, "eg": 54, "sparsifi": 54, "typeerror": 54, "fitt": 54, "inspir": 58, "natur": 58, "randomize_per_channel": [59, 76, 77, 83], "field": [59, 62, 68, 77, 78, 98, 122], "tranform": [59, 77, 185, 198], "channel": [59, 76, 77, 83, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176], "wise": [59, 77, 111, 127], "randomli": [60, 61, 73, 74], "bootstrap": [60, 73], "measur": [60, 61, 65, 71, 73, 74, 75], "group": [60, 73], "subject": [60, 61, 73, 74, 86, 87], "vertex": [60, 61, 62, 63, 68, 69, 73, 74, 111, 127, 213, 214, 220, 236, 237, 238, 244, 245, 246], "hemispher": [60, 61, 73, 74, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "curupt": [60, 61, 73, 74, 75], "cortic": [60, 61, 65, 71, 73, 74, 75, 84, 91, 92, 93, 95, 96, 97, 99, 100, 109, 110, 111, 112, 113, 126, 127, 130, 131, 132, 133, 134, 136, 145], "meta": [60, 73], "regroup": [60, 73], "m": [60, 62, 63, 65, 68, 69, 71, 73, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 178, 179, 192, 199, 205, 206, 210, 211, 213, 218, 226, 231, 236, 242, 246], "pca": [60, 73], "compon": [60, 73, 181, 182, 186, 248], "panda": [60, 73, 86, 87], "datafram": [60, 73, 86, 87], "extern": [60, 73], "distanc": [60, 73, 161, 172], "popul": [60, 73], "bootstap": [60, 73], "arr": [60, 61, 63, 64, 65, 69, 70, 71, 73, 74], "bootsrap": [60, 73], "controlater": [61, 74], "cachedir": [62, 63, 65, 68, 69, 71, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 203], "convolut": [62, 68, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 161, 162, 163, 164, 167, 169, 172, 173, 174, 175], "speed": [62, 68, 98, 122], "recept": [62, 68], "deviat": [62, 64, 68, 70], "kernel": [62, 68, 162, 163, 173, 174, 213, 214, 236, 237], "icosahdron": [62, 63, 65, 68, 69, 71], "optionnali": [62, 63, 68, 69, 76, 83, 86, 87], "neighboor": [62, 63, 68, 69, 178, 179], "sufifi": [62, 63, 68, 69], "ie": [62, 63, 68, 69, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "organ": [62, 63, 68, 69, 204, 213, 236], "ring": [62, 63, 68, 69, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 160, 164, 167, 169, 171, 175, 193, 213, 227, 236], "replacement_valu": [63, 69], "connex": [63, 69], "neighborhood": [63, 69, 123, 128, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 196, 212, 214, 230, 235, 237], "ablat": [63, 69], "cutout": [63, 69], "cut": [63, 69], "nois": [64, 70], "barycentr": [65, 71, 194, 218, 220, 228, 242, 244], "angl": [65, 71, 181, 182, 186, 194, 213, 220, 228, 229, 236, 244, 248], "degre": [65, 71, 194, 220, 228, 244], "euler": [65, 71, 194, 220, 228, 244], "folder": [65, 71, 86, 87, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "smart": [65, 71, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "speedup": [65, 71, 98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "accordingli": [65, 71], "seri": [67, 80], "n_channel": [67, 80], "_data": [67, 80], "dtype": [72, 78, 81, 184, 197], "uplet": [72, 81, 161, 172, 194, 220, 228, 244], "aplli": 75, "rand_mask": 75, "binari": [75, 92, 93], "corrupt": 75, "mask": [75, 86, 87, 92, 93], "multichannel": [76, 83], "multichannelaugment": [76, 83], "applic": [76, 83, 99, 111, 126, 127], "high": 78, "liftifi": 82, "synthet": 84, "gene": [85, 88, 89, 90], "subject_in_pattern": [86, 87], "target": [86, 87, 185, 188, 198, 250], "target_map": [86, 87], "n_max": [86, 87], "withdraw_subject": [86, 87], "target_ico_ord": [86, 87], "scalabl": [86, 87], "neuroimag": [86, 87, 112, 134], "store": [86, 87, 203, 204, 205, 206, 220, 244], "regex": [86, 87], "nibabel": [86, 87, 207, 209], "level": [86, 87, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 247], "identifi": [86, 87, 185, 198], "ico": [86, 87, 98, 122, 156, 167], "tabular": [86, 87], "particip": [86, 87], "tsv": [86, 87], "request": [86, 87, 95], "conta": [86, 87], "triangular": [86, 87, 178, 179, 219, 221, 243], "debug": [86, 87, 99, 100, 111, 112, 113, 125, 126, 127, 134, 136, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 189], "purpos": [86, 87], "desir": [86, 87, 212, 235], "problem": [89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "ndarrai": [89, 90, 181, 182, 186, 248], "assocait": [89, 90], "variat": [91, 95, 112, 134], "svae": [91, 112, 134], "beta": [92, 93, 181, 182, 186, 248], "left_mask": [92, 93], "right_mask": [92, 93], "use_ms": [92, 93], "kl": [92, 93], "diverg": [92, 93], "likelihood": [92, 93, 94], "recon": 94, "reconstruct": [94, 96, 112, 130, 134], "w": [94, 135], "relat": [95, 98, 122], "vision": [95, 219, 243], "gmvae": 95, "rest": [95, 112, 134], "state": [95, 96, 112, 130, 134], "fmri": [95, 112, 134], "autoencod": [95, 112, 134], "libilab": 95, "rsfmri": 95, "output_shap": [96, 130, 163, 174], "before_latent_dim": [96, 130], "latent_dim": [96, 97, 109, 110, 112, 130, 131, 132, 133, 134], "conv_flt": [96, 97, 109, 110, 112, 130, 131, 132, 133, 134], "fusion_level": [96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "leakyrelu": [96, 97, 109, 110, 112, 130, 131, 132, 133, 134], "batch_norm": [96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "output_channel": [96, 130], "input_dim": [96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "squar": [96, 130, 135], "convnet": [96, 130, 135], "dens": [96, 130], "pool": [96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 171], "stochast": [96, 112, 130, 134], "left_recon_x": [96, 112, 130, 134], "input_channel": [96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "right_recon_x": [96, 112, 130, 134], "left_x": [97, 100, 109, 110, 112, 113, 131, 132, 133, 134, 136, 145], "right_x": [97, 100, 109, 110, 112, 113, 131, 132, 133, 134, 136, 145], "q": [97, 112, 131, 134], "input_ord": [98, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "n_layer": [98, 122], "repa_s": [98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "repa_zoom": [98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "dynamic_repa_zoom": [98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153], "repa": [98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 214, 237], "ico_info": [98, 122], "build_ico_info": [98, 122], "tangent": [98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 172, 196, 213, 229, 230, 236], "factor": [98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 196, 214, 230, 237], "tessal": [98, 122, 199, 219, 231, 243], "tessel": [98, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 219, 243], "neighbor_indic": [98, 122, 156, 158, 159, 164, 167, 169, 170, 175], "down_indic": [98, 122, 123, 128, 158, 159, 160, 164, 169, 170, 171, 175, 191, 192, 225, 226], "up_indic": [98, 122, 157, 165, 168, 176, 200, 201, 232, 233], "conv_neighbor_indic": [98, 122], "dictionnari": [98, 122, 203], "icosehedron": [98, 122], "upsampl": [98, 111, 122, 127, 128, 157, 158, 159, 164, 165, 168, 169, 170, 175, 176, 201, 233], "onform": [98, 122], "gride": [99, 100, 124, 126, 129, 136, 184, 197], "net": [99, 111, 125, 126, 127], "built": [99, 111, 126, 127], "upon": [99, 111, 126, 127], "spma": [99, 126], "rectifi": [99, 111, 126, 127], "doubl": [99, 111, 126, 127], "halv": [99, 111, 126, 127], "zhao": [99, 111, 126, 127], "ipmi": [99, 111, 126, 127], "2019": [99, 111, 125, 126, 127], "cfg": [100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "4096": [100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "init_weight": [100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "512": [100, 113, 136, 145], "stand": [100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "wether": [100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "interp": [111, 127, 128], "2x2": [111, 127], "1x1": [111, 127], "maxpad": [111, 127, 128], "shift": [111, 127, 128], "zeropad": [111, 127, 128], "sphericalgva": [112, 134], "2021": [112, 134], "vert": [112, 113, 134, 145], "tri": [112, 113, 134, 145, 221], "reparameter": [112, 134], "reparametr": [112, 134], "trick": [112, 134], "conv_lay": [123, 128], "in_ch": [123, 124, 128, 129], "out_ch": [123, 124, 128, 129], "conv_neigh_indic": [123, 128], "down_neigh_indic": [123, 159, 160, 170, 171], "pool_mod": 123, "bn": [123, 124, 128, 129], "discret": [123, 128, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], "hidden_channel": 125, "pool_ratio": 125, "sum_r": 125, "act": 125, "graph": [125, 246], "unpool": 125, "hongyang": 125, "gao": 125, "shuiwang": 125, "ji": 125, "arxiv": 125, "ratio": 125, "summat": 125, "nonlinear": 125, "edge_index": 125, "overridden": [125, 161, 162, 163, 172, 173, 174], "subclass": [125, 161, 162, 163, 172, 173, 174], "although": [125, 161, 162, 163, 172, 173, 174], "recip": [125, 161, 162, 163, 172, 173, 174], "afterward": [125, 161, 162, 163, 172, 173, 174], "former": [125, 161, 162, 163, 172, 173, 174], "care": [125, 161, 162, 163, 172, 173, 174, 220, 244], "latter": [125, 161, 162, 163, 172, 173, 174], "silent": [125, 161, 162, 163, 172, 173, 174], "neigh_indic": [128, 156, 161, 167, 172], "up_neigh_indic": [128, 157, 158, 159, 164, 165, 168, 169, 170, 175, 176], "upsamp": [128, 129], "upconv": [128, 129], "x1": [128, 129], "x2": [128, 129], "max_pool_indic": [128, 159, 170], "output_dim": 135, "klass_nam": 154, "klass_param": 154, "destination_module_glob": 154, "publicli": 154, "assign": [154, 213, 236], "in_feat": [156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176], "out_feat": [156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176], "formul": [156, 167], "ico2_vertic": [156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176], "ico2_triangl": [156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176], "asarrai": [156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 170, 171, 175, 176, 200, 232], "ico2_x": [156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176], "fix": [157, 168, 178, 179, 238], "ico3_vertic": [157, 158, 159, 160, 164, 165, 168, 169, 170, 171, 175, 176], "ico3_triangl": [157, 158, 159, 160, 164, 165, 168, 169, 170, 171, 175, 176], "ico3_x": [157, 158, 159, 160, 164, 165, 168, 169, 170, 171, 175, 176], "slow": [158, 169], "pooling_typ": [159, 160, 170, 171], "rectagular": [161, 172], "plane": [161, 172, 213, 229, 236], "neigh_weight": [161, 172], "proj_ico_x": [162, 163, 173, 174], "correl": [162, 163, 173, 174], "pad_azimuth": [162, 163, 166, 173, 174], "pad_elev": [162, 163, 166, 173, 174], "zero_pad": [163, 174], "icoconv": [163, 174], "vmin": [178, 179], "vmax": [178, 179], "black": [178, 179], "color_map": [178, 179], "linearsegmentedcolormap": [178, 179], "repres": [178, 179, 245, 246], "opac": [178, 179], "Not": [178, 179], "edg": [178, 179, 245, 246], "line": [178, 179], "cm": [178, 179], "coolwarm": [178, 179], "colormap": [178, 179], "coordin": [180, 181, 182, 184, 185, 186, 187, 197, 198, 222, 238, 248, 249], "system": 180, "tool": [180, 251], "cartesian": [181, 182, 186, 248], "array_lik": [181, 182, 186, 248], "radiant": [181, 182, 186, 248], "pi": [181, 182], "r": [181, 182, 186, 248], "ref_arrai": 183, "atol": [183, 188, 250], "0001": [183, 188, 250], "uniqu": 183, "toler": [183, 188, 250], "along": 183, "new_ord": 183, "resx": [184, 187, 197, 249], "resi": [184, 187, 197, 249], "ico2_vert": [184, 185, 187, 188, 190, 191, 193, 197, 198, 200, 201, 213, 214, 219, 224, 225, 227, 232, 233, 236, 237, 243, 249, 250], "ico2_tri": [184, 185, 187, 188, 190, 191, 193, 197, 198, 200, 201, 213, 214, 219, 224, 225, 227, 232, 233, 236, 237, 243, 249, 250], "y_grid": [184, 187, 197, 249], "ref_vertic": [185, 188, 198, 250], "ico2_std_vert": [185, 188, 198, 250], "ico2_std_tri": [185, 188, 198, 250], "projecte": [187, 249], "y_std": [188, 250], "target_vertic": [190, 200, 224, 232], "n_dim": [190, 200, 224, 232], "n_queri": [190, 200, 224, 232], "nearest_idx": [190, 224], "ico3_vert": [190, 199, 200, 212, 215, 217, 219, 220, 224, 231, 232, 235, 239, 241, 243, 244], "ico3_tri": [190, 199, 200, 212, 215, 217, 219, 220, 224, 231, 232, 235, 239, 241, 243, 244], "down3to2": [190, 224], "ico3_down_vertic": [190, 224], "n_featur": [191, 201, 220, 225, 233, 244], "consecut": [191, 192, 201, 225, 226, 233], "downsampled_data": [191, 225], "new_n_vertic": [191, 201, 225, 233], "ico4_vert": [191, 192, 201, 225, 226, 233], "ico4_tri": [191, 192, 201, 225, 226, 233], "reshap": [191, 193, 200, 201, 220, 225, 227, 232, 233, 244], "y_down": [191, 225], "squeez": [191, 201, 220, 225, 233, 244], "geometri": [192, 200, 205, 206, 210, 211, 226, 232, 234], "new_vertic": [192, 226], "newli": [192, 226], "icosahedorn": [192, 226], "new_triangl": [192, 226], "ico2_down_vert": [192, 226], "ico2_down_tri": [192, 226], "start_nod": [193, 227], "recurs": [193, 227], "node_neigh": [193, 227], "center": [193, 213, 214, 218, 227, 229, 236, 237, 242], "coeffici": [194, 228], "asssoci": [194, 228], "euclidian": [194, 228], "three": [194, 228], "setup": [195, 247], "2d": [196, 230], "grid_in_spher": [196, 214, 230, 237], "grid_in_tplan": [196, 230], "mesh": [199, 200, 213, 231, 232, 236, 246], "target_triangl": [200, 232], "miss": [200, 232], "regular": [200, 232], "interp_indic": [200, 232], "n_feat": [200, 232], "y_up": [200, 201, 232, 233], "upper": [201, 233], "upsampled_data": [201, 233], "hide_err": 202, "secur": 202, "redirect": 202, "context": 202, "manag": 202, "On": 202, "complet": [202, 203], "restor": 202, "hide": 202, "func": 203, "wrap": 203, "receiv": 203, "directori": 203, "transpar": 203, "overlap": 203, "cifti_fil": 204, "decompos": 204, "cifti": [204, 207, 209], "vol": 204, "volum": [204, 209, 251], "surf_left": 204, "surf_right": 204, "surf_fil": [205, 206, 210, 211], "read": [205, 206], "gifti": [206, 211], "surf_nam": 207, "nbviewer": [207, 209], "neurohackademi": [207, 209], "nh2020": [207, 209], "curriculum": [207, 209], "blob": [207, 209], "master": [207, 209], "markiewicz": [207, 209], "gnu": 208, "archiv": 208, "open": 208, "gz": 208, "out_path": 208, "extens": 208, "n_neigh": [212, 216, 235, 240], "length": [213, 236], "remain": [213, 236], "n_vert": [215, 239], "min_order_to_get_n_neighbor": [216, 240], "hi": [217, 241], "clockwise_from_cent": [218, 242], "clockwis": [218, 242], "view": [218, 242], "counter": [218, 242], "reordered_triangl": [218, 242], "reorder": [218, 242], "ico0_vert": [218, 242], "ico0_tri": [218, 242], "clockwise_ico0_tri": [218, 242], "counter_clockwise_ico0_tri": [218, 242], "n_job": [219, 243], "concurr": [219, 243], "job": [219, 243], "euclidean": [220, 244], "rotated_data": [220, 244], "y_rot": [220, 244], "lower_vertic": 221, "ico_fil": 222, "rescal": 222, "topologi": [222, 223], "ref_fil": 223, "fslr": 223, "point_1": 234, "point_2": 234, "middle_point_cach": 234, "middl": 234, "return_index": 245, "triangles_index": 245, "networkx": 246, "nearbi": 246, "potenti": 246, "smooth": 246, "info": 247, "logfil": 247, "unifi": 251, "compat": 251, "analyz": 251, "brain": 251, "product": 251, "advanc": 251, "availbl": 251, "hydra": 251}, "objects": {"nidl.estimators": [[14, 0, 1, "", "BaseEstimator"], [15, 0, 1, "", "ClassifierMixin"], [16, 0, 1, "", "ClusterMixin"], [17, 0, 1, "", "RegressorMixin"], [18, 0, 1, "", "TransformerMixin"]], "nidl.estimators.base": [[19, 0, 1, "", "BaseEstimator"], [20, 0, 1, "", "ClassifierMixin"], [21, 0, 1, "", "ClusterMixin"], [22, 0, 1, "", "RegressorMixin"], [23, 0, 1, "", "TransformerMixin"]], "nidl.estimators.linear": [[25, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.LogisticRegression": [[25, 1, 1, "", "configure_optimizers"], [25, 1, 1, "", "on_validation_epoch_end"], [25, 1, 1, "", "predict_step"], [25, 1, 1, "", "training_step"], [25, 1, 1, "", "validation_step"]], "nidl.estimators.linear.logistic_regression": [[26, 0, 1, "", "LogisticRegression"]], "nidl.estimators.linear.logistic_regression.LogisticRegression": [[26, 1, 1, "", "configure_optimizers"], [26, 1, 1, "", "on_validation_epoch_end"], [26, 1, 1, "", "predict_step"], [26, 1, 1, "", "training_step"], [26, 1, 1, "", "validation_step"]], "nidl.estimators.ssl": [[28, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.SimCLR": [[28, 1, 1, "", "configure_optimizers"], [28, 1, 1, "", "on_validation_epoch_end"], [28, 1, 1, "", "predict_step"], [28, 1, 1, "", "training_step"], [28, 1, 1, "", "validation_step"]], "nidl.estimators.ssl.simclr": [[29, 0, 1, "", "SimCLR"]], "nidl.estimators.ssl.simclr.SimCLR": [[29, 1, 1, "", "configure_optimizers"], [29, 1, 1, "", "on_validation_epoch_end"], [29, 1, 1, "", "predict_step"], [29, 1, 1, "", "training_step"], [29, 1, 1, "", "validation_step"]], "nidl.experiment": [[30, 2, 1, "", "fetch_experiment"], [31, 2, 1, "", "filter_config"], [32, 2, 1, "", "get_env"], [33, 2, 1, "", "load_interface"], [34, 2, 1, "", "update_params"]], "nidl.utils": [[36, 0, 1, "", "Bunch"], [37, 0, 1, "", "Weights"], [50, 2, 1, "", "print_multicolor"]], "nidl.utils.Weights": [[37, 1, 1, "", "hf_download"], [37, 1, 1, "", "hub_split"], [37, 1, 1, "", "load_pretrained"], [37, 1, 1, "", "ns_download"]], "nidl.utils.bunch": [[38, 0, 1, "", "Bunch"]], "nidl.utils.color": [[39, 0, 1, "", "Colored"], [40, 2, 1, "", "attr"], [41, 2, 1, "", "fg"], [42, 2, 1, "", "hex"], [43, 2, 1, "", "print_multicolor"], [44, 2, 1, "", "print_result"], [45, 2, 1, "", "print_subtitle"], [46, 2, 1, "", "print_title"], [47, 2, 1, "", "print_warning"], [48, 2, 1, "", "random_stylize"], [49, 2, 1, "", "stylize"]], "nidl.utils.color.Colored": [[39, 1, 1, "", "attribute"], [39, 1, 1, "", "background"], [39, 1, 1, "", "foreground"], [39, 1, 1, "", "reverse_dict"]], "nidl.utils.validation": [[51, 0, 1, "", "_AvailableIfDescriptor"], [52, 2, 1, "", "_estimator_is"], [53, 2, 1, "", "available_if"], [54, 2, 1, "", "check_is_fitted"]], "nidl.utils.weights": [[55, 0, 1, "", "Weights"]], "nidl.utils.weights.Weights": [[55, 1, 1, "", "hf_download"], [55, 1, 1, "", "hub_split"], [55, 1, 1, "", "load_pretrained"], [55, 1, 1, "", "ns_download"]], "surfify.augmentation": [[59, 0, 1, "", "BaseTransformer"], [60, 0, 1, "", "GroupMixUp"], [61, 0, 1, "", "HemiMixUp"], [62, 0, 1, "", "SurfBlur"], [63, 0, 1, "", "SurfCutOut"], [64, 0, 1, "", "SurfNoise"], [65, 0, 1, "", "SurfRotation"], [66, 0, 1, "", "Transformer"], [67, 2, 1, "", "apply_chained_transforms"], [72, 2, 1, "", "interval"], [76, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.BaseTransformer": [[59, 0, 1, "", "Transform"], [59, 1, 1, "", "register"]], "surfify.augmentation.BaseTransformer.Transform": [[59, 3, 1, "", "probability"], [59, 3, 1, "", "randomize_per_channel"], [59, 3, 1, "", "transform"]], "surfify.augmentation.GroupMixUp": [[60, 1, 1, "", "groupby"], [60, 1, 1, "", "run"]], "surfify.augmentation.HemiMixUp": [[61, 1, 1, "", "run"]], "surfify.augmentation.SurfBlur": [[62, 1, 1, "", "run"]], "surfify.augmentation.SurfCutOut": [[63, 1, 1, "", "run"]], "surfify.augmentation.SurfNoise": [[64, 1, 1, "", "run"]], "surfify.augmentation.SurfRotation": [[65, 1, 1, "", "run"]], "surfify.augmentation.base": [[68, 0, 1, "", "SurfBlur"], [69, 0, 1, "", "SurfCutOut"], [70, 0, 1, "", "SurfNoise"], [71, 0, 1, "", "SurfRotation"]], "surfify.augmentation.base.SurfBlur": [[68, 1, 1, "", "run"]], "surfify.augmentation.base.SurfCutOut": [[69, 1, 1, "", "run"]], "surfify.augmentation.base.SurfNoise": [[70, 1, 1, "", "run"]], "surfify.augmentation.base.SurfRotation": [[71, 1, 1, "", "run"]], "surfify.augmentation.mixup": [[73, 0, 1, "", "GroupMixUp"], [74, 0, 1, "", "HemiMixUp"], [75, 0, 1, "", "MixUpAugmentation"]], "surfify.augmentation.mixup.GroupMixUp": [[73, 1, 1, "", "groupby"], [73, 1, 1, "", "run"]], "surfify.augmentation.mixup.HemiMixUp": [[74, 1, 1, "", "run"]], "surfify.augmentation.mixup.MixUpAugmentation": [[75, 1, 1, "", "rand_mask"]], "surfify.augmentation.utils": [[77, 0, 1, "", "BaseTransformer"], [78, 0, 1, "", "RandomAugmentation"], [79, 0, 1, "", "Transformer"], [80, 2, 1, "", "apply_chained_transforms"], [81, 2, 1, "", "interval"], [82, 2, 1, "", "listify"], [83, 2, 1, "", "multichannel_augmentation"]], "surfify.augmentation.utils.BaseTransformer": [[77, 0, 1, "", "Transform"], [77, 1, 1, "", "register"]], "surfify.augmentation.utils.BaseTransformer.Transform": [[77, 3, 1, "", "probability"], [77, 3, 1, "", "randomize_per_channel"], [77, 3, 1, "", "transform"]], "surfify.augmentation.utils.RandomAugmentation": [[78, 0, 1, "", "Interval"]], "surfify.augmentation.utils.RandomAugmentation.Interval": [[78, 3, 1, "", "dtype"], [78, 3, 1, "", "high"], [78, 3, 1, "", "low"]], "surfify.datasets": [[85, 0, 1, "", "ClassificationDataset"], [86, 0, 1, "", "GenericSurfDataset"], [90, 2, 1, "", "make_classification"]], "surfify.datasets._generic": [[87, 0, 1, "", "GenericSurfDataset"]], "surfify.datasets._samples_generator": [[88, 0, 1, "", "ClassificationDataset"], [89, 2, 1, "", "make_classification"]], "surfify.losses": [[92, 0, 1, "", "SphericalVAELoss"]], "surfify.losses.vae": [[93, 0, 1, "", "SphericalVAELoss"], [94, 2, 1, "", "log_likelihood"]], "surfify.models": [[96, 0, 1, "", "HemiFusionDecoder"], [97, 0, 1, "", "HemiFusionEncoder"], [98, 0, 1, "", "SphericalBase"], [99, 0, 1, "", "SphericalGUNet"], [100, 0, 1, "", "SphericalGVGG"], [101, 0, 1, "", "SphericalGVGG11"], [102, 0, 1, "", "SphericalGVGG11BN"], [103, 0, 1, "", "SphericalGVGG13"], [104, 0, 1, "", "SphericalGVGG13BN"], [105, 0, 1, "", "SphericalGVGG16"], [106, 0, 1, "", "SphericalGVGG16BN"], [107, 0, 1, "", "SphericalGVGG19"], [108, 0, 1, "", "SphericalGVGG19BN"], [109, 0, 1, "", "SphericalHemiFusionDecoder"], [110, 0, 1, "", "SphericalHemiFusionEncoder"], [111, 0, 1, "", "SphericalUNet"], [112, 0, 1, "", "SphericalVAE"], [113, 0, 1, "", "SphericalVGG"], [114, 0, 1, "", "SphericalVGG11"], [115, 0, 1, "", "SphericalVGG11BN"], [116, 0, 1, "", "SphericalVGG13"], [117, 0, 1, "", "SphericalVGG13BN"], [118, 0, 1, "", "SphericalVGG16"], [119, 0, 1, "", "SphericalVGG16BN"], [120, 0, 1, "", "SphericalVGG19"], [121, 0, 1, "", "SphericalVGG19BN"]], "surfify.models.HemiFusionDecoder": [[96, 1, 1, "", "forward"]], "surfify.models.HemiFusionEncoder": [[97, 1, 1, "", "forward"]], "surfify.models.SphericalBase": [[98, 0, 1, "", "Ico"], [98, 1, 1, "", "build_ico_info"]], "surfify.models.SphericalBase.Ico": [[98, 3, 1, "", "conv_neighbor_indices"], [98, 3, 1, "", "down_indices"], [98, 3, 1, "", "neighbor_indices"], [98, 3, 1, "", "order"], [98, 3, 1, "", "triangles"], [98, 3, 1, "", "up_indices"], [98, 3, 1, "", "vertices"]], "surfify.models.SphericalGUNet": [[99, 1, 1, "", "forward"]], "surfify.models.SphericalGVGG": [[100, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionDecoder": [[109, 1, 1, "", "forward"]], "surfify.models.SphericalHemiFusionEncoder": [[110, 1, 1, "", "forward"]], "surfify.models.SphericalUNet": [[111, 1, 1, "", "forward"]], "surfify.models.SphericalVAE": [[112, 1, 1, "", "decode"], [112, 1, 1, "", "encode"], [112, 1, 1, "", "forward"], [112, 1, 1, "", "reparameterize"]], "surfify.models.SphericalVGG": [[113, 1, 1, "", "forward"]], "surfify.models.base": [[122, 0, 1, "", "SphericalBase"]], "surfify.models.base.SphericalBase": [[122, 0, 1, "", "Ico"], [122, 1, 1, "", "build_ico_info"]], "surfify.models.base.SphericalBase.Ico": [[122, 3, 1, "", "conv_neighbor_indices"], [122, 3, 1, "", "down_indices"], [122, 3, 1, "", "neighbor_indices"], [122, 3, 1, "", "order"], [122, 3, 1, "", "triangles"], [122, 3, 1, "", "up_indices"], [122, 3, 1, "", "vertices"]], "surfify.models.unet": [[123, 0, 1, "", "DownBlock"], [124, 0, 1, "", "DownGBlock"], [125, 0, 1, "", "GraphicalUNet"], [126, 0, 1, "", "SphericalGUNet"], [127, 0, 1, "", "SphericalUNet"], [128, 0, 1, "", "UpBlock"], [129, 0, 1, "", "UpGBlock"]], "surfify.models.unet.DownBlock": [[123, 1, 1, "", "forward"]], "surfify.models.unet.DownGBlock": [[124, 1, 1, "", "forward"]], "surfify.models.unet.GraphicalUNet": [[125, 1, 1, "", "forward"]], "surfify.models.unet.SphericalGUNet": [[126, 1, 1, "", "forward"]], "surfify.models.unet.SphericalUNet": [[127, 1, 1, "", "forward"]], "surfify.models.unet.UpBlock": [[128, 1, 1, "", "forward"]], "surfify.models.unet.UpGBlock": [[129, 1, 1, "", "forward"]], "surfify.models.vae": [[130, 0, 1, "", "HemiFusionDecoder"], [131, 0, 1, "", "HemiFusionEncoder"], [132, 0, 1, "", "SphericalHemiFusionDecoder"], [133, 0, 1, "", "SphericalHemiFusionEncoder"], [134, 0, 1, "", "SphericalVAE"], [135, 2, 1, "", "compute_output_dim"]], "surfify.models.vae.HemiFusionDecoder": [[130, 1, 1, "", "forward"]], "surfify.models.vae.HemiFusionEncoder": [[131, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionDecoder": [[132, 1, 1, "", "forward"]], "surfify.models.vae.SphericalHemiFusionEncoder": [[133, 1, 1, "", "forward"]], "surfify.models.vae.SphericalVAE": [[134, 1, 1, "", "decode"], [134, 1, 1, "", "encode"], [134, 1, 1, "", "forward"], [134, 1, 1, "", "reparameterize"]], "surfify.models.vgg": [[136, 0, 1, "", "SphericalGVGG"], [137, 0, 1, "", "SphericalGVGG11"], [138, 0, 1, "", "SphericalGVGG11BN"], [139, 0, 1, "", "SphericalGVGG13"], [140, 0, 1, "", "SphericalGVGG13BN"], [141, 0, 1, "", "SphericalGVGG16"], [142, 0, 1, "", "SphericalGVGG16BN"], [143, 0, 1, "", "SphericalGVGG19"], [144, 0, 1, "", "SphericalGVGG19BN"], [145, 0, 1, "", "SphericalVGG"], [146, 0, 1, "", "SphericalVGG11"], [147, 0, 1, "", "SphericalVGG11BN"], [148, 0, 1, "", "SphericalVGG13"], [149, 0, 1, "", "SphericalVGG13BN"], [150, 0, 1, "", "SphericalVGG16"], [151, 0, 1, "", "SphericalVGG16BN"], [152, 0, 1, "", "SphericalVGG19"], [153, 0, 1, "", "SphericalVGG19BN"], [154, 2, 1, "", "class_factory"]], "surfify.models.vgg.SphericalGVGG": [[136, 1, 1, "", "forward"]], "surfify.models.vgg.SphericalVGG": [[145, 1, 1, "", "forward"]], "surfify.nn": [[156, 0, 1, "", "IcoDiNeConv"], [157, 0, 1, "", "IcoFixIndexUpSample"], [158, 0, 1, "", "IcoGenericUpConv"], [159, 0, 1, "", "IcoMaxIndexUpSample"], [160, 0, 1, "", "IcoPool"], [161, 0, 1, "", "IcoRePaConv"], [162, 0, 1, "", "IcoSpMaConv"], [163, 0, 1, "", "IcoSpMaConvTranspose"], [164, 0, 1, "", "IcoUpConv"], [165, 0, 1, "", "IcoUpSample"]], "surfify.nn.IcoDiNeConv": [[156, 1, 1, "", "forward"]], "surfify.nn.IcoFixIndexUpSample": [[157, 1, 1, "", "forward"]], "surfify.nn.IcoGenericUpConv": [[158, 1, 1, "", "forward"]], "surfify.nn.IcoMaxIndexUpSample": [[159, 1, 1, "", "forward"]], "surfify.nn.IcoPool": [[160, 1, 1, "", "forward"]], "surfify.nn.IcoRePaConv": [[161, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConv": [[162, 1, 1, "", "forward"]], "surfify.nn.IcoSpMaConvTranspose": [[163, 1, 1, "", "forward"]], "surfify.nn.IcoUpConv": [[164, 1, 1, "", "forward"]], "surfify.nn.IcoUpSample": [[165, 1, 1, "", "forward"]], "surfify.nn.functional": [[166, 2, 1, "", "circular_pad"]], "surfify.nn.modules": [[167, 0, 1, "", "IcoDiNeConv"], [168, 0, 1, "", "IcoFixIndexUpSample"], [169, 0, 1, "", "IcoGenericUpConv"], [170, 0, 1, "", "IcoMaxIndexUpSample"], [171, 0, 1, "", "IcoPool"], [172, 0, 1, "", "IcoRePaConv"], [173, 0, 1, "", "IcoSpMaConv"], [174, 0, 1, "", "IcoSpMaConvTranspose"], [175, 0, 1, "", "IcoUpConv"], [176, 0, 1, "", "IcoUpSample"]], "surfify.nn.modules.IcoDiNeConv": [[167, 1, 1, "", "forward"]], "surfify.nn.modules.IcoFixIndexUpSample": [[168, 1, 1, "", "forward"]], "surfify.nn.modules.IcoGenericUpConv": [[169, 1, 1, "", "forward"]], "surfify.nn.modules.IcoMaxIndexUpSample": [[170, 1, 1, "", "forward"]], "surfify.nn.modules.IcoPool": [[171, 1, 1, "", "forward"]], "surfify.nn.modules.IcoRePaConv": [[172, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConv": [[173, 1, 1, "", "forward"]], "surfify.nn.modules.IcoSpMaConvTranspose": [[174, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpConv": [[175, 1, 1, "", "forward"]], "surfify.nn.modules.IcoUpSample": [[176, 1, 1, "", "forward"]], "surfify.plotting": [[178, 2, 1, "", "plot_trisurf"]], "surfify.plotting.surface": [[179, 2, 1, "", "plot_trisurf"]], "surfify.utils": [[181, 2, 1, "", "cart2sph"], [189, 2, 1, "", "debug_msg"], [190, 2, 1, "", "downsample"], [191, 2, 1, "", "downsample_data"], [192, 2, 1, "", "downsample_ico"], [193, 2, 1, "", "find_neighbors"], [194, 2, 1, "", "find_rotation_interpol_coefs"], [195, 2, 1, "", "get_logger"], [196, 2, 1, "", "get_rectangular_projection"], [197, 2, 1, "", "grid2text"], [198, 2, 1, "", "ico2ico"], [199, 2, 1, "", "icosahedron"], [200, 2, 1, "", "interpolate"], [201, 2, 1, "", "interpolate_data"], [212, 2, 1, "", "min_depth_to_get_n_neighbors"], [213, 2, 1, "", "neighbors"], [214, 2, 1, "", "neighbors_rec"], [215, 2, 1, "", "number_of_ico_vertices"], [216, 2, 1, "", "number_of_neighbors"], [217, 2, 1, "", "order_of_ico_from_vertices"], [218, 2, 1, "", "order_triangles"], [219, 2, 1, "", "patch_tri"], [220, 2, 1, "", "rotate_data"], [247, 2, 1, "", "setup_logging"], [248, 2, 1, "", "sph2cart"], [249, 2, 1, "", "text2grid"], [250, 2, 1, "", "text2ico"]], "surfify.utils.coord": [[182, 2, 1, "", "cart2sph"], [183, 2, 1, "", "find_corresponding_order"], [184, 2, 1, "", "grid2text"], [185, 2, 1, "", "ico2ico"], [186, 2, 1, "", "sph2cart"], [187, 2, 1, "", "text2grid"], [188, 2, 1, "", "text2ico"]], "surfify.utils.io": [[202, 0, 1, "", "HidePrints"], [203, 2, 1, "", "compute_and_store"], [204, 2, 1, "", "decompose_cifti"], [205, 2, 1, "", "read_freesurfer"], [206, 2, 1, "", "read_gifti"], [207, 2, 1, "", "surf_data_from_cifti"], [208, 2, 1, "", "ungzip"], [209, 2, 1, "", "volume_from_cifti"], [210, 2, 1, "", "write_freesurfer"], [211, 2, 1, "", "write_gifti"]], "surfify.utils.sampling": [[221, 2, 1, "", "_patch_tri_iter"], [222, 2, 1, "", "build_freesurfer_ico"], [223, 2, 1, "", "build_fslr_ref"], [224, 2, 1, "", "downsample"], [225, 2, 1, "", "downsample_data"], [226, 2, 1, "", "downsample_ico"], [227, 2, 1, "", "find_neighbors"], [228, 2, 1, "", "find_rotation_interpol_coefs"], [229, 2, 1, "", "get_angle_with_xaxis"], [230, 2, 1, "", "get_rectangular_projection"], [231, 2, 1, "", "icosahedron"], [232, 2, 1, "", "interpolate"], [233, 2, 1, "", "interpolate_data"], [234, 2, 1, "", "middle_point"], [235, 2, 1, "", "min_depth_to_get_n_neighbors"], [236, 2, 1, "", "neighbors"], [237, 2, 1, "", "neighbors_rec"], [238, 2, 1, "", "normalize"], [239, 2, 1, "", "number_of_ico_vertices"], [240, 2, 1, "", "number_of_neighbors"], [241, 2, 1, "", "order_of_ico_from_vertices"], [242, 2, 1, "", "order_triangles"], [243, 2, 1, "", "patch_tri"], [244, 2, 1, "", "rotate_data"], [245, 2, 1, "", "triangles_to_edges"], [246, 2, 1, "", "vertex_adjacency_graph"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"us": [0, 3], "case": [0, 3], "spheric": [0, 3, 4, 7], "modul": [0, 3, 155], "comput": [1, 9, 252], "time": [1, 9, 252], "self": 2, "supervis": 2, "contrast": 2, "learn": 2, "simclr": [2, 27], "setup": 2, "data": [2, 6], "augment": [2, 4, 58], "dataset": [2, 8, 84], "train": [2, 8], "logist": 2, "regress": 2, "baselin": 2, "conclus": 2, "surfcutout": 4, "surfnois": 4, "surfblur": 4, "surfrot": 4, "hemimixup": 4, "groupmixup": 4, "group": 4, "transform": 4, "icosahedron": 5, "match": 5, "project": 6, "textur": 6, "load": 6, "3": 6, "d": 6, "surfac": [6, 177], "2": 6, "grid": 6, "uniformli": 6, "distribut": 6, "locat": 6, "integr": 6, "deep": 6, "neural": 6, "network": 6, "neighbor": 7, "direct": 7, "rectagular": 7, "tangent": 7, "plane": 7, "unet": [8, 95], "segment": 8, "inspect": 8, "model": [8, 95], "predict": 8, "label": 8, "api": [10, 12, 13, 24, 27, 35, 56, 57, 58, 84, 91, 95, 155, 177, 180], "document": [10, 12, 13, 24, 27, 35, 56, 57, 58, 84, 91, 95, 155, 177, 180], "nidl": [10, 11, 12, 13, 24, 27, 35, 56], "instal": 11, "stabl": 11, "version": 11, "current": 11, "experi": 12, "estim": [13, 24, 27], "base": [13, 58, 95], "linear": 24, "logistic_regress": 24, "exampl": [25, 26, 28, 29, 37, 55], "ssl": 27, "util": [35, 58, 180], "color": 35, "valid": 35, "weight": 35, "bunch": 35, "search": 56, "surfifi": [57, 58, 84, 91, 95, 155, 177, 180], "mixup": 58, "_gener": 84, "_samples_gener": 84, "loss": 91, "vae": [91, 95], "vgg": 95, "nn": 155, "function": 155, "plot": 177, "sampl": 180, "io": 180, "coord": 180}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Use Cases": [[0, "use-cases"]], "Spherical Modules Use Cases": [[0, "spherical-modules-use-cases"], [3, "spherical-modules-use-cases"]], "Computation times": [[1, "computation-times"], [9, "computation-times"], [252, "computation-times"]], "Self-Supervised Contrastive Learning with SimCLR": [[2, "self-supervised-contrastive-learning-with-simclr"]], "Setup": [[2, "setup"]], "Data Augmentation for Contrastive Learning": [[2, "data-augmentation-for-contrastive-learning"]], "Dataset": [[2, "dataset"]], "Training": [[2, "training"]], "Logistic Regression": [[2, "logistic-regression"]], "Baseline": [[2, "baseline"]], "Conclusion": [[2, "conclusion"]], "Spherical augmentations": [[4, "spherical-augmentations"]], "SurfCutOut": [[4, "surfcutout"]], "SurfNoise": [[4, "surfnoise"]], "SurfBlur": [[4, "surfblur"]], "SurfRotation": [[4, "surfrotation"]], "HemiMixUp": [[4, "hemimixup"]], "GroupMixUp": [[4, "groupmixup"]], "GroupMixUp group": [[4, "groupmixup-group"]], "Transformer": [[4, "transformer"]], "Icosahedron matching": [[5, "icosahedron-matching"]], "Project texture": [[6, "project-texture"]], "Load data": [[6, "load-data"]], "3-D surface to 2-D grid projection": [[6, "d-surface-to-2-d-grid-projection"]], "2-D grid to 3-D surface projection": [[6, "d-grid-to-3-d-surface-projection"]], "Uniformly distributed locations": [[6, "uniformly-distributed-locations"]], "Integration in deep neural network": [[6, "integration-in-deep-neural-network"]], "Spherical neighbors": [[7, "spherical-neighbors"]], "Direct Neighbor": [[7, "direct-neighbor"]], "Rectagular Tangent Plane Neighbor": [[7, "rectagular-tangent-plane-neighbor"]], "UNet segmentation": [[8, "unet-segmentation"]], "Inspect dataset": [[8, "inspect-dataset"]], "Train the model": [[8, "train-the-model"]], "Inspect the predicted labels": [[8, "inspect-the-predicted-labels"]], "API documentation of NIDL": [[10, "api-documentation-of-nidl"]], "Installing nidl": [[11, "installing-nidl"]], "Installing a stable version": [[11, "installing-a-stable-version"]], "Installing the current version": [[11, "installing-the-current-version"]], "API documentation of nidl": [[12, "api-documentation-of-nidl"]], "nidl": [[12, "nidl"]], "nidl.experiment": [[12, "nidl-experiment"]], "API documentation of nidl.estimators": [[13, "api-documentation-of-nidl-estimators"]], "nidl.estimators": [[13, "nidl-estimators"]], "nidl.estimators.base": [[13, "nidl-estimators-base"]], "API documentation of nidl.estimators.linear": [[24, "api-documentation-of-nidl-estimators-linear"]], "nidl.estimators.linear": [[24, "nidl-estimators-linear"]], "nidl.estimators.linear.logistic_regression": [[24, "nidl-estimators-linear-logistic-regression"]], "Examples": [[25, "examples"], [26, "examples"], [28, "examples"], [29, "examples"], [37, "examples"], [55, "examples"]], "API documentation of nidl.estimators.ssl": [[27, "api-documentation-of-nidl-estimators-ssl"]], "nidl.estimators.ssl": [[27, "nidl-estimators-ssl"]], "nidl.estimators.ssl.simclr": [[27, "id1"]], "API documentation of nidl.utils": [[35, "api-documentation-of-nidl-utils"]], "nidl.utils": [[35, "nidl-utils"]], "nidl.utils.color": [[35, "nidl-utils-color"]], "nidl.utils.validation": [[35, "nidl-utils-validation"]], "nidl.utils.weights": [[35, "id1"]], "nidl.utils.bunch": [[35, "id2"]], "Search in API documentation of NIDL": [[56, "search-in-api-documentation-of-nidl"]], "API documentation of surfify": [[57, "api-documentation-of-surfify"]], "surfify": [[57, "surfify"]], "API documentation of surfify.augmentation": [[58, "api-documentation-of-surfify-augmentation"]], "surfify.augmentation": [[58, "surfify-augmentation"]], "surfify.augmentation.mixup": [[58, "surfify-augmentation-mixup"]], "surfify.augmentation.base": [[58, "surfify-augmentation-base"]], "surfify.augmentation.utils": [[58, "surfify-augmentation-utils"]], "API documentation of surfify.datasets": [[84, "api-documentation-of-surfify-datasets"]], "surfify.datasets": [[84, "surfify-datasets"]], "surfify.datasets._generic": [[84, "surfify-datasets-generic"]], "surfify.datasets._samples_generator": [[84, "surfify-datasets-samples-generator"]], "API documentation of surfify.losses": [[91, "api-documentation-of-surfify-losses"]], "surfify.losses": [[91, "surfify-losses"]], "surfify.losses.vae": [[91, "surfify-losses-vae"]], "API documentation of surfify.models": [[95, "api-documentation-of-surfify-models"]], "surfify.models": [[95, "surfify-models"]], "surfify.models.base": [[95, "surfify-models-base"]], "surfify.models.unet": [[95, "surfify-models-unet"]], "surfify.models.vgg": [[95, "surfify-models-vgg"]], "surfify.models.vae": [[95, "surfify-models-vae"]], "API documentation of surfify.nn": [[155, "api-documentation-of-surfify-nn"]], "surfify.nn": [[155, "surfify-nn"]], "surfify.nn.functional": [[155, "surfify-nn-functional"]], "surfify.nn.modules": [[155, "surfify-nn-modules"]], "API documentation of surfify.plotting": [[177, "api-documentation-of-surfify-plotting"]], "surfify.plotting": [[177, "surfify-plotting"]], "surfify.plotting.surface": [[177, "surfify-plotting-surface"]], "API documentation of surfify.utils": [[180, "api-documentation-of-surfify-utils"]], "surfify.utils": [[180, "surfify-utils"]], "surfify.utils.sampling": [[180, "surfify-utils-sampling"]], "surfify.utils.io": [[180, "surfify-utils-io"]], "surfify.utils.coord": [[180, "surfify-utils-coord"]]}, "indexentries": {"baseestimator (class in nidl.estimators)": [[14, "nidl.estimators.BaseEstimator"]], "classifiermixin (class in nidl.estimators)": [[15, "nidl.estimators.ClassifierMixin"]], "clustermixin (class in nidl.estimators)": [[16, "nidl.estimators.ClusterMixin"]], "regressormixin (class in nidl.estimators)": [[17, "nidl.estimators.RegressorMixin"]], "transformermixin (class in nidl.estimators)": [[18, "nidl.estimators.TransformerMixin"]], "baseestimator (class in nidl.estimators.base)": [[19, "nidl.estimators.base.BaseEstimator"]], "classifiermixin (class in nidl.estimators.base)": [[20, "nidl.estimators.base.ClassifierMixin"]], "clustermixin (class in nidl.estimators.base)": [[21, "nidl.estimators.base.ClusterMixin"]], "regressormixin (class in nidl.estimators.base)": [[22, "nidl.estimators.base.RegressorMixin"]], "transformermixin (class in nidl.estimators.base)": [[23, "nidl.estimators.base.TransformerMixin"]], "logisticregression (class in nidl.estimators.linear)": [[25, "nidl.estimators.linear.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logisticregression method)": [[25, "nidl.estimators.linear.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logisticregression method)": [[25, "nidl.estimators.linear.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logisticregression method)": [[25, "nidl.estimators.linear.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logisticregression method)": [[25, "nidl.estimators.linear.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logisticregression method)": [[25, "nidl.estimators.linear.LogisticRegression.validation_step"]], "logisticregression (class in nidl.estimators.linear.logistic_regression)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression"]], "configure_optimizers() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression.on_validation_epoch_end"]], "predict_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression.predict_step"]], "training_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression.training_step"]], "validation_step() (nidl.estimators.linear.logistic_regression.logisticregression method)": [[26, "nidl.estimators.linear.logistic_regression.LogisticRegression.validation_step"]], "simclr (class in nidl.estimators.ssl)": [[28, "nidl.estimators.ssl.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr method)": [[28, "nidl.estimators.ssl.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr method)": [[28, "nidl.estimators.ssl.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr method)": [[28, "nidl.estimators.ssl.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr method)": [[28, "nidl.estimators.ssl.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr method)": [[28, "nidl.estimators.ssl.SimCLR.validation_step"]], "simclr (class in nidl.estimators.ssl.simclr)": [[29, "nidl.estimators.ssl.simclr.SimCLR"]], "configure_optimizers() (nidl.estimators.ssl.simclr.simclr method)": [[29, "nidl.estimators.ssl.simclr.SimCLR.configure_optimizers"]], "on_validation_epoch_end() (nidl.estimators.ssl.simclr.simclr method)": [[29, "nidl.estimators.ssl.simclr.SimCLR.on_validation_epoch_end"]], "predict_step() (nidl.estimators.ssl.simclr.simclr method)": [[29, "nidl.estimators.ssl.simclr.SimCLR.predict_step"]], "training_step() (nidl.estimators.ssl.simclr.simclr method)": [[29, "nidl.estimators.ssl.simclr.SimCLR.training_step"]], "validation_step() (nidl.estimators.ssl.simclr.simclr method)": [[29, "nidl.estimators.ssl.simclr.SimCLR.validation_step"]], "fetch_experiment() (in module nidl.experiment)": [[30, "nidl.experiment.fetch_experiment"]], "filter_config() (in module nidl.experiment)": [[31, "nidl.experiment.filter_config"]], "get_env() (in module nidl.experiment)": [[32, "nidl.experiment.get_env"]], "load_interface() (in module nidl.experiment)": [[33, "nidl.experiment.load_interface"]], "update_params() (in module nidl.experiment)": [[34, "nidl.experiment.update_params"]], "bunch (class in nidl.utils)": [[36, "nidl.utils.Bunch"]], "weights (class in nidl.utils)": [[37, "nidl.utils.Weights"]], "hf_download() (nidl.utils.weights class method)": [[37, "nidl.utils.Weights.hf_download"]], "hub_split() (nidl.utils.weights class method)": [[37, "nidl.utils.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights method)": [[37, "nidl.utils.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights class method)": [[37, "nidl.utils.Weights.ns_download"]], "bunch (class in nidl.utils.bunch)": [[38, "nidl.utils.bunch.Bunch"]], "colored (class in nidl.utils.color)": [[39, "nidl.utils.color.Colored"]], "attribute() (nidl.utils.color.colored method)": [[39, "nidl.utils.color.Colored.attribute"]], "background() (nidl.utils.color.colored method)": [[39, "nidl.utils.color.Colored.background"]], "foreground() (nidl.utils.color.colored method)": [[39, "nidl.utils.color.Colored.foreground"]], "reverse_dict() (nidl.utils.color.colored method)": [[39, "nidl.utils.color.Colored.reverse_dict"]], "attr() (in module nidl.utils.color)": [[40, "nidl.utils.color.attr"]], "fg() (in module nidl.utils.color)": [[41, "nidl.utils.color.fg"]], "hex() (in module nidl.utils.color)": [[42, "nidl.utils.color.hex"]], "print_multicolor() (in module nidl.utils.color)": [[43, "nidl.utils.color.print_multicolor"]], "print_result() (in module nidl.utils.color)": [[44, "nidl.utils.color.print_result"]], "print_subtitle() (in module nidl.utils.color)": [[45, "nidl.utils.color.print_subtitle"]], "print_title() (in module nidl.utils.color)": [[46, "nidl.utils.color.print_title"]], "print_warning() (in module nidl.utils.color)": [[47, "nidl.utils.color.print_warning"]], "random_stylize() (in module nidl.utils.color)": [[48, "nidl.utils.color.random_stylize"]], "stylize() (in module nidl.utils.color)": [[49, "nidl.utils.color.stylize"]], "print_multicolor() (in module nidl.utils)": [[50, "nidl.utils.print_multicolor"]], "_availableifdescriptor (class in nidl.utils.validation)": [[51, "nidl.utils.validation._AvailableIfDescriptor"]], "_estimator_is() (in module nidl.utils.validation)": [[52, "nidl.utils.validation._estimator_is"]], "available_if() (in module nidl.utils.validation)": [[53, "nidl.utils.validation.available_if"]], "check_is_fitted() (in module nidl.utils.validation)": [[54, "nidl.utils.validation.check_is_fitted"]], "weights (class in nidl.utils.weights)": [[55, "nidl.utils.weights.Weights"]], "hf_download() (nidl.utils.weights.weights class method)": [[55, "nidl.utils.weights.Weights.hf_download"]], "hub_split() (nidl.utils.weights.weights class method)": [[55, "nidl.utils.weights.Weights.hub_split"]], "load_pretrained() (nidl.utils.weights.weights method)": [[55, "nidl.utils.weights.Weights.load_pretrained"]], "ns_download() (nidl.utils.weights.weights class method)": [[55, "nidl.utils.weights.Weights.ns_download"]], "basetransformer (class in surfify.augmentation)": [[59, "surfify.augmentation.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation)": [[59, "surfify.augmentation.BaseTransformer.Transform"]], "probability (surfify.augmentation.basetransformer.transform attribute)": [[59, "surfify.augmentation.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.basetransformer.transform attribute)": [[59, "surfify.augmentation.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.basetransformer method)": [[59, "surfify.augmentation.BaseTransformer.register"]], "transform (surfify.augmentation.basetransformer.transform attribute)": [[59, "surfify.augmentation.BaseTransformer.Transform.transform"]], "groupmixup (class in surfify.augmentation)": [[60, "surfify.augmentation.GroupMixUp"]], "groupby() (surfify.augmentation.groupmixup class method)": [[60, "surfify.augmentation.GroupMixUp.groupby"]], "run() (surfify.augmentation.groupmixup method)": [[60, "surfify.augmentation.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation)": [[61, "surfify.augmentation.HemiMixUp"]], "run() (surfify.augmentation.hemimixup method)": [[61, "surfify.augmentation.HemiMixUp.run"]], "surfblur (class in surfify.augmentation)": [[62, "surfify.augmentation.SurfBlur"]], "run() (surfify.augmentation.surfblur method)": [[62, "surfify.augmentation.SurfBlur.run"]], "surfcutout (class in surfify.augmentation)": [[63, "surfify.augmentation.SurfCutOut"]], "run() (surfify.augmentation.surfcutout method)": [[63, "surfify.augmentation.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation)": [[64, "surfify.augmentation.SurfNoise"]], "run() (surfify.augmentation.surfnoise method)": [[64, "surfify.augmentation.SurfNoise.run"]], "surfrotation (class in surfify.augmentation)": [[65, "surfify.augmentation.SurfRotation"]], "run() (surfify.augmentation.surfrotation method)": [[65, "surfify.augmentation.SurfRotation.run"]], "transformer (class in surfify.augmentation)": [[66, "surfify.augmentation.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation)": [[67, "surfify.augmentation.apply_chained_transforms"]], "surfblur (class in surfify.augmentation.base)": [[68, "surfify.augmentation.base.SurfBlur"]], "run() (surfify.augmentation.base.surfblur method)": [[68, "surfify.augmentation.base.SurfBlur.run"]], "surfcutout (class in surfify.augmentation.base)": [[69, "surfify.augmentation.base.SurfCutOut"]], "run() (surfify.augmentation.base.surfcutout method)": [[69, "surfify.augmentation.base.SurfCutOut.run"]], "surfnoise (class in surfify.augmentation.base)": [[70, "surfify.augmentation.base.SurfNoise"]], "run() (surfify.augmentation.base.surfnoise method)": [[70, "surfify.augmentation.base.SurfNoise.run"]], "surfrotation (class in surfify.augmentation.base)": [[71, "surfify.augmentation.base.SurfRotation"]], "run() (surfify.augmentation.base.surfrotation method)": [[71, "surfify.augmentation.base.SurfRotation.run"]], "interval() (in module surfify.augmentation)": [[72, "surfify.augmentation.interval"]], "groupmixup (class in surfify.augmentation.mixup)": [[73, "surfify.augmentation.mixup.GroupMixUp"]], "groupby() (surfify.augmentation.mixup.groupmixup class method)": [[73, "surfify.augmentation.mixup.GroupMixUp.groupby"]], "run() (surfify.augmentation.mixup.groupmixup method)": [[73, "surfify.augmentation.mixup.GroupMixUp.run"]], "hemimixup (class in surfify.augmentation.mixup)": [[74, "surfify.augmentation.mixup.HemiMixUp"]], "run() (surfify.augmentation.mixup.hemimixup method)": [[74, "surfify.augmentation.mixup.HemiMixUp.run"]], "mixupaugmentation (class in surfify.augmentation.mixup)": [[75, "surfify.augmentation.mixup.MixUpAugmentation"]], "rand_mask() (surfify.augmentation.mixup.mixupaugmentation method)": [[75, "surfify.augmentation.mixup.MixUpAugmentation.rand_mask"]], "multichannel_augmentation() (in module surfify.augmentation)": [[76, "surfify.augmentation.multichannel_augmentation"]], "basetransformer (class in surfify.augmentation.utils)": [[77, "surfify.augmentation.utils.BaseTransformer"]], "basetransformer.transform (class in surfify.augmentation.utils)": [[77, "surfify.augmentation.utils.BaseTransformer.Transform"]], "probability (surfify.augmentation.utils.basetransformer.transform attribute)": [[77, "surfify.augmentation.utils.BaseTransformer.Transform.probability"]], "randomize_per_channel (surfify.augmentation.utils.basetransformer.transform attribute)": [[77, "surfify.augmentation.utils.BaseTransformer.Transform.randomize_per_channel"]], "register() (surfify.augmentation.utils.basetransformer method)": [[77, "surfify.augmentation.utils.BaseTransformer.register"]], "transform (surfify.augmentation.utils.basetransformer.transform attribute)": [[77, "surfify.augmentation.utils.BaseTransformer.Transform.transform"]], "randomaugmentation (class in surfify.augmentation.utils)": [[78, "surfify.augmentation.utils.RandomAugmentation"]], "randomaugmentation.interval (class in surfify.augmentation.utils)": [[78, "surfify.augmentation.utils.RandomAugmentation.Interval"]], "dtype (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[78, "surfify.augmentation.utils.RandomAugmentation.Interval.dtype"]], "high (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[78, "surfify.augmentation.utils.RandomAugmentation.Interval.high"]], "low (surfify.augmentation.utils.randomaugmentation.interval attribute)": [[78, "surfify.augmentation.utils.RandomAugmentation.Interval.low"]], "transformer (class in surfify.augmentation.utils)": [[79, "surfify.augmentation.utils.Transformer"]], "apply_chained_transforms() (in module surfify.augmentation.utils)": [[80, "surfify.augmentation.utils.apply_chained_transforms"]], "interval() (in module surfify.augmentation.utils)": [[81, "surfify.augmentation.utils.interval"]], "listify() (in module surfify.augmentation.utils)": [[82, "surfify.augmentation.utils.listify"]], "multichannel_augmentation() (in module surfify.augmentation.utils)": [[83, "surfify.augmentation.utils.multichannel_augmentation"]], "classificationdataset (class in surfify.datasets)": [[85, "surfify.datasets.ClassificationDataset"]], "genericsurfdataset (class in surfify.datasets)": [[86, "surfify.datasets.GenericSurfDataset"]], "genericsurfdataset (class in surfify.datasets._generic)": [[87, "surfify.datasets._generic.GenericSurfDataset"]], "classificationdataset (class in surfify.datasets._samples_generator)": [[88, "surfify.datasets._samples_generator.ClassificationDataset"]], "make_classification() (in module surfify.datasets._samples_generator)": [[89, "surfify.datasets._samples_generator.make_classification"]], "make_classification() (in module surfify.datasets)": [[90, "surfify.datasets.make_classification"]], "sphericalvaeloss (class in surfify.losses)": [[92, "surfify.losses.SphericalVAELoss"]], "sphericalvaeloss (class in surfify.losses.vae)": [[93, "surfify.losses.vae.SphericalVAELoss"]], "log_likelihood() (in module surfify.losses.vae)": [[94, "surfify.losses.vae.log_likelihood"]], "hemifusiondecoder (class in surfify.models)": [[96, "surfify.models.HemiFusionDecoder"]], "forward() (surfify.models.hemifusiondecoder method)": [[96, "surfify.models.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models)": [[97, "surfify.models.HemiFusionEncoder"]], "forward() (surfify.models.hemifusionencoder method)": [[97, "surfify.models.HemiFusionEncoder.forward"]], "sphericalbase (class in surfify.models)": [[98, "surfify.models.SphericalBase"]], "sphericalbase.ico (class in surfify.models)": [[98, "surfify.models.SphericalBase.Ico"]], "build_ico_info() (surfify.models.sphericalbase class method)": [[98, "surfify.models.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.order"]], "triangles (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.sphericalbase.ico attribute)": [[98, "surfify.models.SphericalBase.Ico.vertices"]], "sphericalgunet (class in surfify.models)": [[99, "surfify.models.SphericalGUNet"]], "forward() (surfify.models.sphericalgunet method)": [[99, "surfify.models.SphericalGUNet.forward"]], "sphericalgvgg (class in surfify.models)": [[100, "surfify.models.SphericalGVGG"]], "forward() (surfify.models.sphericalgvgg method)": [[100, "surfify.models.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models)": [[101, "surfify.models.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models)": [[102, "surfify.models.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models)": [[103, "surfify.models.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models)": [[104, "surfify.models.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models)": [[105, "surfify.models.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models)": [[106, "surfify.models.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models)": [[107, "surfify.models.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models)": [[108, "surfify.models.SphericalGVGG19BN"]], "sphericalhemifusiondecoder (class in surfify.models)": [[109, "surfify.models.SphericalHemiFusionDecoder"]], "forward() (surfify.models.sphericalhemifusiondecoder method)": [[109, "surfify.models.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models)": [[110, "surfify.models.SphericalHemiFusionEncoder"]], "forward() (surfify.models.sphericalhemifusionencoder method)": [[110, "surfify.models.SphericalHemiFusionEncoder.forward"]], "sphericalunet (class in surfify.models)": [[111, "surfify.models.SphericalUNet"]], "forward() (surfify.models.sphericalunet method)": [[111, "surfify.models.SphericalUNet.forward"]], "sphericalvae (class in surfify.models)": [[112, "surfify.models.SphericalVAE"]], "decode() (surfify.models.sphericalvae method)": [[112, "surfify.models.SphericalVAE.decode"]], "encode() (surfify.models.sphericalvae method)": [[112, "surfify.models.SphericalVAE.encode"]], "forward() (surfify.models.sphericalvae method)": [[112, "surfify.models.SphericalVAE.forward"]], "reparameterize() (surfify.models.sphericalvae method)": [[112, "surfify.models.SphericalVAE.reparameterize"]], "sphericalvgg (class in surfify.models)": [[113, "surfify.models.SphericalVGG"]], "forward() (surfify.models.sphericalvgg method)": [[113, "surfify.models.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models)": [[114, "surfify.models.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models)": [[115, "surfify.models.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models)": [[116, "surfify.models.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models)": [[117, "surfify.models.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models)": [[118, "surfify.models.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models)": [[119, "surfify.models.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models)": [[120, "surfify.models.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models)": [[121, "surfify.models.SphericalVGG19BN"]], "sphericalbase (class in surfify.models.base)": [[122, "surfify.models.base.SphericalBase"]], "sphericalbase.ico (class in surfify.models.base)": [[122, "surfify.models.base.SphericalBase.Ico"]], "build_ico_info() (surfify.models.base.sphericalbase class method)": [[122, "surfify.models.base.SphericalBase.build_ico_info"]], "conv_neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.conv_neighbor_indices"]], "down_indices (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.down_indices"]], "neighbor_indices (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.neighbor_indices"]], "order (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.order"]], "triangles (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.triangles"]], "up_indices (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.up_indices"]], "vertices (surfify.models.base.sphericalbase.ico attribute)": [[122, "surfify.models.base.SphericalBase.Ico.vertices"]], "downblock (class in surfify.models.unet)": [[123, "surfify.models.unet.DownBlock"]], "forward() (surfify.models.unet.downblock method)": [[123, "surfify.models.unet.DownBlock.forward"]], "downgblock (class in surfify.models.unet)": [[124, "surfify.models.unet.DownGBlock"]], "forward() (surfify.models.unet.downgblock method)": [[124, "surfify.models.unet.DownGBlock.forward"]], "graphicalunet (class in surfify.models.unet)": [[125, "surfify.models.unet.GraphicalUNet"]], "forward() (surfify.models.unet.graphicalunet method)": [[125, "surfify.models.unet.GraphicalUNet.forward"]], "sphericalgunet (class in surfify.models.unet)": [[126, "surfify.models.unet.SphericalGUNet"]], "forward() (surfify.models.unet.sphericalgunet method)": [[126, "surfify.models.unet.SphericalGUNet.forward"]], "sphericalunet (class in surfify.models.unet)": [[127, "surfify.models.unet.SphericalUNet"]], "forward() (surfify.models.unet.sphericalunet method)": [[127, "surfify.models.unet.SphericalUNet.forward"]], "upblock (class in surfify.models.unet)": [[128, "surfify.models.unet.UpBlock"]], "forward() (surfify.models.unet.upblock method)": [[128, "surfify.models.unet.UpBlock.forward"]], "upgblock (class in surfify.models.unet)": [[129, "surfify.models.unet.UpGBlock"]], "forward() (surfify.models.unet.upgblock method)": [[129, "surfify.models.unet.UpGBlock.forward"]], "hemifusiondecoder (class in surfify.models.vae)": [[130, "surfify.models.vae.HemiFusionDecoder"]], "forward() (surfify.models.vae.hemifusiondecoder method)": [[130, "surfify.models.vae.HemiFusionDecoder.forward"]], "hemifusionencoder (class in surfify.models.vae)": [[131, "surfify.models.vae.HemiFusionEncoder"]], "forward() (surfify.models.vae.hemifusionencoder method)": [[131, "surfify.models.vae.HemiFusionEncoder.forward"]], "sphericalhemifusiondecoder (class in surfify.models.vae)": [[132, "surfify.models.vae.SphericalHemiFusionDecoder"]], "forward() (surfify.models.vae.sphericalhemifusiondecoder method)": [[132, "surfify.models.vae.SphericalHemiFusionDecoder.forward"]], "sphericalhemifusionencoder (class in surfify.models.vae)": [[133, "surfify.models.vae.SphericalHemiFusionEncoder"]], "forward() (surfify.models.vae.sphericalhemifusionencoder method)": [[133, "surfify.models.vae.SphericalHemiFusionEncoder.forward"]], "sphericalvae (class in surfify.models.vae)": [[134, "surfify.models.vae.SphericalVAE"]], "decode() (surfify.models.vae.sphericalvae method)": [[134, "surfify.models.vae.SphericalVAE.decode"]], "encode() (surfify.models.vae.sphericalvae method)": [[134, "surfify.models.vae.SphericalVAE.encode"]], "forward() (surfify.models.vae.sphericalvae method)": [[134, "surfify.models.vae.SphericalVAE.forward"]], "reparameterize() (surfify.models.vae.sphericalvae method)": [[134, "surfify.models.vae.SphericalVAE.reparameterize"]], "compute_output_dim() (in module surfify.models.vae)": [[135, "surfify.models.vae.compute_output_dim"]], "sphericalgvgg (class in surfify.models.vgg)": [[136, "surfify.models.vgg.SphericalGVGG"]], "forward() (surfify.models.vgg.sphericalgvgg method)": [[136, "surfify.models.vgg.SphericalGVGG.forward"]], "sphericalgvgg11 (class in surfify.models.vgg)": [[137, "surfify.models.vgg.SphericalGVGG11"]], "sphericalgvgg11bn (class in surfify.models.vgg)": [[138, "surfify.models.vgg.SphericalGVGG11BN"]], "sphericalgvgg13 (class in surfify.models.vgg)": [[139, "surfify.models.vgg.SphericalGVGG13"]], "sphericalgvgg13bn (class in surfify.models.vgg)": [[140, "surfify.models.vgg.SphericalGVGG13BN"]], "sphericalgvgg16 (class in surfify.models.vgg)": [[141, "surfify.models.vgg.SphericalGVGG16"]], "sphericalgvgg16bn (class in surfify.models.vgg)": [[142, "surfify.models.vgg.SphericalGVGG16BN"]], "sphericalgvgg19 (class in surfify.models.vgg)": [[143, "surfify.models.vgg.SphericalGVGG19"]], "sphericalgvgg19bn (class in surfify.models.vgg)": [[144, "surfify.models.vgg.SphericalGVGG19BN"]], "sphericalvgg (class in surfify.models.vgg)": [[145, "surfify.models.vgg.SphericalVGG"]], "forward() (surfify.models.vgg.sphericalvgg method)": [[145, "surfify.models.vgg.SphericalVGG.forward"]], "sphericalvgg11 (class in surfify.models.vgg)": [[146, "surfify.models.vgg.SphericalVGG11"]], "sphericalvgg11bn (class in surfify.models.vgg)": [[147, "surfify.models.vgg.SphericalVGG11BN"]], "sphericalvgg13 (class in surfify.models.vgg)": [[148, "surfify.models.vgg.SphericalVGG13"]], "sphericalvgg13bn (class in surfify.models.vgg)": [[149, "surfify.models.vgg.SphericalVGG13BN"]], "sphericalvgg16 (class in surfify.models.vgg)": [[150, "surfify.models.vgg.SphericalVGG16"]], "sphericalvgg16bn (class in surfify.models.vgg)": [[151, "surfify.models.vgg.SphericalVGG16BN"]], "sphericalvgg19 (class in surfify.models.vgg)": [[152, "surfify.models.vgg.SphericalVGG19"]], "sphericalvgg19bn (class in surfify.models.vgg)": [[153, "surfify.models.vgg.SphericalVGG19BN"]], "class_factory() (in module surfify.models.vgg)": [[154, "surfify.models.vgg.class_factory"]], "icodineconv (class in surfify.nn)": [[156, "surfify.nn.IcoDiNeConv"]], "forward() (surfify.nn.icodineconv method)": [[156, "surfify.nn.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn)": [[157, "surfify.nn.IcoFixIndexUpSample"]], "forward() (surfify.nn.icofixindexupsample method)": [[157, "surfify.nn.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn)": [[158, "surfify.nn.IcoGenericUpConv"]], "forward() (surfify.nn.icogenericupconv method)": [[158, "surfify.nn.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn)": [[159, "surfify.nn.IcoMaxIndexUpSample"]], "forward() (surfify.nn.icomaxindexupsample method)": [[159, "surfify.nn.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn)": [[160, "surfify.nn.IcoPool"]], "forward() (surfify.nn.icopool method)": [[160, "surfify.nn.IcoPool.forward"]], "icorepaconv (class in surfify.nn)": [[161, "surfify.nn.IcoRePaConv"]], "forward() (surfify.nn.icorepaconv method)": [[161, "surfify.nn.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn)": [[162, "surfify.nn.IcoSpMaConv"]], "forward() (surfify.nn.icospmaconv method)": [[162, "surfify.nn.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn)": [[163, "surfify.nn.IcoSpMaConvTranspose"]], "forward() (surfify.nn.icospmaconvtranspose method)": [[163, "surfify.nn.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn)": [[164, "surfify.nn.IcoUpConv"]], "forward() (surfify.nn.icoupconv method)": [[164, "surfify.nn.IcoUpConv.forward"]], "icoupsample (class in surfify.nn)": [[165, "surfify.nn.IcoUpSample"]], "forward() (surfify.nn.icoupsample method)": [[165, "surfify.nn.IcoUpSample.forward"]], "circular_pad() (in module surfify.nn.functional)": [[166, "surfify.nn.functional.circular_pad"]], "icodineconv (class in surfify.nn.modules)": [[167, "surfify.nn.modules.IcoDiNeConv"]], "forward() (surfify.nn.modules.icodineconv method)": [[167, "surfify.nn.modules.IcoDiNeConv.forward"]], "icofixindexupsample (class in surfify.nn.modules)": [[168, "surfify.nn.modules.IcoFixIndexUpSample"]], "forward() (surfify.nn.modules.icofixindexupsample method)": [[168, "surfify.nn.modules.IcoFixIndexUpSample.forward"]], "icogenericupconv (class in surfify.nn.modules)": [[169, "surfify.nn.modules.IcoGenericUpConv"]], "forward() (surfify.nn.modules.icogenericupconv method)": [[169, "surfify.nn.modules.IcoGenericUpConv.forward"]], "icomaxindexupsample (class in surfify.nn.modules)": [[170, "surfify.nn.modules.IcoMaxIndexUpSample"]], "forward() (surfify.nn.modules.icomaxindexupsample method)": [[170, "surfify.nn.modules.IcoMaxIndexUpSample.forward"]], "icopool (class in surfify.nn.modules)": [[171, "surfify.nn.modules.IcoPool"]], "forward() (surfify.nn.modules.icopool method)": [[171, "surfify.nn.modules.IcoPool.forward"]], "icorepaconv (class in surfify.nn.modules)": [[172, "surfify.nn.modules.IcoRePaConv"]], "forward() (surfify.nn.modules.icorepaconv method)": [[172, "surfify.nn.modules.IcoRePaConv.forward"]], "icospmaconv (class in surfify.nn.modules)": [[173, "surfify.nn.modules.IcoSpMaConv"]], "forward() (surfify.nn.modules.icospmaconv method)": [[173, "surfify.nn.modules.IcoSpMaConv.forward"]], "icospmaconvtranspose (class in surfify.nn.modules)": [[174, "surfify.nn.modules.IcoSpMaConvTranspose"]], "forward() (surfify.nn.modules.icospmaconvtranspose method)": [[174, "surfify.nn.modules.IcoSpMaConvTranspose.forward"]], "icoupconv (class in surfify.nn.modules)": [[175, "surfify.nn.modules.IcoUpConv"]], "forward() (surfify.nn.modules.icoupconv method)": [[175, "surfify.nn.modules.IcoUpConv.forward"]], "icoupsample (class in surfify.nn.modules)": [[176, "surfify.nn.modules.IcoUpSample"]], "forward() (surfify.nn.modules.icoupsample method)": [[176, "surfify.nn.modules.IcoUpSample.forward"]], "plot_trisurf() (in module surfify.plotting)": [[178, "surfify.plotting.plot_trisurf"]], "plot_trisurf() (in module surfify.plotting.surface)": [[179, "surfify.plotting.surface.plot_trisurf"]], "cart2sph() (in module surfify.utils)": [[181, "surfify.utils.cart2sph"]], "cart2sph() (in module surfify.utils.coord)": [[182, "surfify.utils.coord.cart2sph"]], "find_corresponding_order() (in module surfify.utils.coord)": [[183, "surfify.utils.coord.find_corresponding_order"]], "grid2text() (in module surfify.utils.coord)": [[184, "surfify.utils.coord.grid2text"]], "ico2ico() (in module surfify.utils.coord)": [[185, "surfify.utils.coord.ico2ico"]], "sph2cart() (in module surfify.utils.coord)": [[186, "surfify.utils.coord.sph2cart"]], "text2grid() (in module surfify.utils.coord)": [[187, "surfify.utils.coord.text2grid"]], "text2ico() (in module surfify.utils.coord)": [[188, "surfify.utils.coord.text2ico"]], "debug_msg() (in module surfify.utils)": [[189, "surfify.utils.debug_msg"]], "downsample() (in module surfify.utils)": [[190, "surfify.utils.downsample"]], "downsample_data() (in module surfify.utils)": [[191, "surfify.utils.downsample_data"]], "downsample_ico() (in module surfify.utils)": [[192, "surfify.utils.downsample_ico"]], "find_neighbors() (in module surfify.utils)": [[193, "surfify.utils.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils)": [[194, "surfify.utils.find_rotation_interpol_coefs"]], "get_logger() (in module surfify.utils)": [[195, "surfify.utils.get_logger"]], "get_rectangular_projection() (in module surfify.utils)": [[196, "surfify.utils.get_rectangular_projection"]], "grid2text() (in module surfify.utils)": [[197, "surfify.utils.grid2text"]], "ico2ico() (in module surfify.utils)": [[198, "surfify.utils.ico2ico"]], "icosahedron() (in module surfify.utils)": [[199, "surfify.utils.icosahedron"]], "interpolate() (in module surfify.utils)": [[200, "surfify.utils.interpolate"]], "interpolate_data() (in module surfify.utils)": [[201, "surfify.utils.interpolate_data"]], "hideprints (class in surfify.utils.io)": [[202, "surfify.utils.io.HidePrints"]], "compute_and_store() (in module surfify.utils.io)": [[203, "surfify.utils.io.compute_and_store"]], "decompose_cifti() (in module surfify.utils.io)": [[204, "surfify.utils.io.decompose_cifti"]], "read_freesurfer() (in module surfify.utils.io)": [[205, "surfify.utils.io.read_freesurfer"]], "read_gifti() (in module surfify.utils.io)": [[206, "surfify.utils.io.read_gifti"]], "surf_data_from_cifti() (in module surfify.utils.io)": [[207, "surfify.utils.io.surf_data_from_cifti"]], "ungzip() (in module surfify.utils.io)": [[208, "surfify.utils.io.ungzip"]], "volume_from_cifti() (in module surfify.utils.io)": [[209, "surfify.utils.io.volume_from_cifti"]], "write_freesurfer() (in module surfify.utils.io)": [[210, "surfify.utils.io.write_freesurfer"]], "write_gifti() (in module surfify.utils.io)": [[211, "surfify.utils.io.write_gifti"]], "min_depth_to_get_n_neighbors() (in module surfify.utils)": [[212, "surfify.utils.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils)": [[213, "surfify.utils.neighbors"]], "neighbors_rec() (in module surfify.utils)": [[214, "surfify.utils.neighbors_rec"]], "number_of_ico_vertices() (in module surfify.utils)": [[215, "surfify.utils.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils)": [[216, "surfify.utils.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils)": [[217, "surfify.utils.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils)": [[218, "surfify.utils.order_triangles"]], "patch_tri() (in module surfify.utils)": [[219, "surfify.utils.patch_tri"]], "rotate_data() (in module surfify.utils)": [[220, "surfify.utils.rotate_data"]], "_patch_tri_iter() (in module surfify.utils.sampling)": [[221, "surfify.utils.sampling._patch_tri_iter"]], "build_freesurfer_ico() (in module surfify.utils.sampling)": [[222, "surfify.utils.sampling.build_freesurfer_ico"]], "build_fslr_ref() (in module surfify.utils.sampling)": [[223, "surfify.utils.sampling.build_fslr_ref"]], "downsample() (in module surfify.utils.sampling)": [[224, "surfify.utils.sampling.downsample"]], "downsample_data() (in module surfify.utils.sampling)": [[225, "surfify.utils.sampling.downsample_data"]], "downsample_ico() (in module surfify.utils.sampling)": [[226, "surfify.utils.sampling.downsample_ico"]], "find_neighbors() (in module surfify.utils.sampling)": [[227, "surfify.utils.sampling.find_neighbors"]], "find_rotation_interpol_coefs() (in module surfify.utils.sampling)": [[228, "surfify.utils.sampling.find_rotation_interpol_coefs"]], "get_angle_with_xaxis() (in module surfify.utils.sampling)": [[229, "surfify.utils.sampling.get_angle_with_xaxis"]], "get_rectangular_projection() (in module surfify.utils.sampling)": [[230, "surfify.utils.sampling.get_rectangular_projection"]], "icosahedron() (in module surfify.utils.sampling)": [[231, "surfify.utils.sampling.icosahedron"]], "interpolate() (in module surfify.utils.sampling)": [[232, "surfify.utils.sampling.interpolate"]], "interpolate_data() (in module surfify.utils.sampling)": [[233, "surfify.utils.sampling.interpolate_data"]], "middle_point() (in module surfify.utils.sampling)": [[234, "surfify.utils.sampling.middle_point"]], "min_depth_to_get_n_neighbors() (in module surfify.utils.sampling)": [[235, "surfify.utils.sampling.min_depth_to_get_n_neighbors"]], "neighbors() (in module surfify.utils.sampling)": [[236, "surfify.utils.sampling.neighbors"]], "neighbors_rec() (in module surfify.utils.sampling)": [[237, "surfify.utils.sampling.neighbors_rec"]], "normalize() (in module surfify.utils.sampling)": [[238, "surfify.utils.sampling.normalize"]], "number_of_ico_vertices() (in module surfify.utils.sampling)": [[239, "surfify.utils.sampling.number_of_ico_vertices"]], "number_of_neighbors() (in module surfify.utils.sampling)": [[240, "surfify.utils.sampling.number_of_neighbors"]], "order_of_ico_from_vertices() (in module surfify.utils.sampling)": [[241, "surfify.utils.sampling.order_of_ico_from_vertices"]], "order_triangles() (in module surfify.utils.sampling)": [[242, "surfify.utils.sampling.order_triangles"]], "patch_tri() (in module surfify.utils.sampling)": [[243, "surfify.utils.sampling.patch_tri"]], "rotate_data() (in module surfify.utils.sampling)": [[244, "surfify.utils.sampling.rotate_data"]], "triangles_to_edges() (in module surfify.utils.sampling)": [[245, "surfify.utils.sampling.triangles_to_edges"]], "vertex_adjacency_graph() (in module surfify.utils.sampling)": [[246, "surfify.utils.sampling.vertex_adjacency_graph"]], "setup_logging() (in module surfify.utils)": [[247, "surfify.utils.setup_logging"]], "sph2cart() (in module surfify.utils)": [[248, "surfify.utils.sph2cart"]], "text2grid() (in module surfify.utils)": [[249, "surfify.utils.text2grid"]], "text2ico() (in module surfify.utils)": [[250, "surfify.utils.text2ico"]]}})